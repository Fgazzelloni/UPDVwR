{
  "hash": "5d308e63a7702228cf1f5960a3bc1bcc",
  "result": {
    "markdown": "---\ntitle: 'Blue'\nsubtitle: 'Welcome to #30DayMapChallenge 2021 day 8'\ndate: '2021-11-8'\nimage: 'day8_blue.png'\nimage-alt: ''\ndescription: 'Networks'\noutput: html_document\nexecute: \n   eval: false\n---\n\n\n\nThis is day 8 - blue for #30DayMapChallenge.\nI am looking at the [ggplot2-book](https://ggplot2-book.org/maps.html) map chapter.\nIn this case I'd like to understand how to make modification of a .tif image positioning it inside a ggplot.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n\nLoad the {ozmaps} for the geometry of Australia.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ozmaps)\nlibrary(sf)\n\noz_states <- ozmaps::ozmap_states\noz_states\n\nst_crs(oz_states) = st_crs(4283)\n\noz_states%>%\nggplot()+\n  geom_sf()+\n  coord_sf()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap::tm_shape(oz_states) +\n    tmap::tm_polygons() \n```\n:::\n\n\n## First sat vis of Australia\n\nThen, select the raster images from source.\n\nSee which raster images are available with loading the {bomrang} package and using the syntax below.\n\nOnce you have found the file name, you can obtain the file searching on google tab with this string:\n\"ftp://ftp.bom.gov.au/anon/gen/gms/\" with the final name of the file\n\n\nFor example google this, it might take a little while: ftp://ftp.bom.gov.au/anon/gen/gms/IDE00422.202001072100.tif\n\nIt pops up a window asking you to identify as a \"guest\", (it might probably saying that it couldn't connect you, but then split all the pictures. You need to search for the desired picture, if it didn't prompt with the one you were searching for, mind it is  .tif type of file and you might need to choose a picture from your current year, such as 2021 - as the pictures from 2020 are not available anymore.)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# sf::gdal_read() \n# bomrang::get_available_imagery()\n\n# with - bomrang - find the avalable images\nfiles <- bomrang::get_available_imagery() %>%\n  stringr::str_subset(\"202001072100\") \n\n# use curl_download() to obtain a single file, and purrr to \n# vectorise this operation\npurrr::walk2(\n  .x = paste0(\"ftp://ftp.bom.gov.au/anon/gen/gms/\", files),\n  .y = file.path(\"raster\", files),\n  .f = ~ download.file(url = .x, destfile = .y)\n)\n```\n:::\n\n\nSet the path of the image that you have downloaded and saved inside a \"raster\" folder in you project subfolder.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nimg_vis  <- file.path(\"/Users/federica/Documents/R/R_general_resources/30DayMapChallenge/day8_blue/raster\", \"IDE00422.202111072100.tiff\")\nimg_inf <- file.path(\"/Users/federica/Documents/R/R_general_resources/30DayMapChallenge/day8_blue/raster\", \"IDE00421.202111072100.tiff\")\n```\n:::\n\n\nRead the picture with {stars}, it releases information about the picture but we miss the coordinates??\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(stars)\nsat_vis <- read_stars(img_vis, RasterIO = list(nBufXSize = 600, nBufYSize = 600))\nsat_inf <- read_stars(img_inf, RasterIO = list(nBufXSize = 600, nBufYSize = 600))\n```\n:::\n\n\n\nA ggplot can be made with the image using a `geom_stars()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nblue_world <- ggplot() + \n  geom_stars(data = sat_vis) + \n  coord_equal()\n\nblue_world\n```\n:::\n\n\nThe image can be easily modified:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfinal <- blue_world +\n  labs(title=\"Globe Observer\",\n       subtitle=\"Sat View of Australia\\n#30DayMapChalleng Day 8 - Blue\",\n       caption=\"Datasource:Australian Bureau of Meterorology (BOM)\\nInfographic: Federica Gazzelloni\")+\n  ggthemes::theme_map()+\n  theme(legend.position = \"none\",\n        plot.background = element_rect(color=\"#1a1c3d\",fill=\"#1a1c3d\"),\n        plot.title = element_text(color=\"#9a9ddb\",size=35),\n        plot.subtitle = element_text(color=\"#9a9ddb\",size=15),\n        plot.caption = element_text(color=\"#9a9ddb\",size=12))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# save final plot\nragg::agg_png(\"~/Documents/R/R_general_resources/30DayMapChallenge/day8_blue/blue.png\",\n              res = 320, width = 11, height = 8, units = \"in\")\nfinal\ndev.off()\n```\n:::\n\n\n\n## Second sat vis of Australia\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(showtext)\nlibrary(extrafont)\nfonts()\nloadfonts()\nfont_add_google(\"Gochi Hand\", \"gochi\")\nfont_add_google(\"Schoolbell\", \"bell\")\nfont_add_google('Syncopate', 'Syncopate')\nshowtext_opts(dpi = 320)\nshowtext_auto(enable = T)\n```\n:::\n\n\nChoose the image and download it with `curl_download()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfiles <- bomrang::get_available_imagery() %>%\n  stringr::str_subset(\"202001072100\") \ncurl::curl_download(\"raster/ftp://ftp.bom.gov.au/anon/gen/gms/IDE00422.202111082100.tif\",\n                    \"sat_vis.tif\")\nimg_vis  <- file.path(\"/Users/federica/Documents/R/R_general_resources/Maps/raster\", \"IDE00422.202111082100.tif\")\nlibrary(stars)\nsat_vis <- read_stars(img_vis, RasterIO = list(nBufXSize = 600, nBufYSize = 600))\n#sat_inf <- read_stars(img_inf, RasterIO = list(nBufXSize = 600, nBufYSize = 600))\noz_states <- st_transform(oz_states, crs = st_crs(sat_vis))\ncities <- oz_capitals %>% \n  st_as_sf(coords = c(\"lon\", \"lat\"), crs = 4326, remove = FALSE)\ncities <- st_transform(cities, st_crs(sat_vis))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfinal2 <- ggplot() + \n  geom_stars(data = sat_vis, show.legend = FALSE) +\n  geom_sf(data = oz_states, fill = \"#6354c4\", color = \"#a7c2cc\",size=0.3) + \n  geom_sf(data = cities, color = \"#15191f\") + \n  coord_sf() + \n  theme_void() + \n  #scale_fill_gradient(low = \"black\", high = \"white\")+\n  geom_sf_text(data = cities, mapping = aes(label = city),color=\"#ced9eb\",check_overlap = T,family=\"gochi\") +\n   labs(title=\"Globe Observer\",\n       subtitle=\"Sat View of Australia\\n#30DayMapChalleng Day 8 - Blue\",\n       caption=\"Datasource:Australian Bureau of Meterorology (BOM)\\nInfographic: Federica Gazzelloni\")+\n  ggthemes::theme_map()+\n  theme(text=element_text(family=\"gochi\"),\n        legend.position = \"none\",\n        plot.background = element_rect(color=\"#1a1c3d\",fill=\"#1a1c3d\"),\n        plot.title = element_text(color=\"#9a9ddb\",size=35,family=\"Syncopate\",hjust=0.5),\n        plot.title.position = \"panel\",\n        plot.subtitle = element_text(color=\"#9a9ddb\",size=15,vjust=-1,hjust=0.07),\n        plot.caption = element_text(color=\"#9a9ddb\",size=12,hjust=0.8))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# save final plot\nragg::agg_png(\"~/Documents/R/R_general_resources/30DayMapChallenge/day8_blue/blue2.png\",\n              res = 320, width = 11, height = 8, units = \"in\")\nfinal2\ndev.off()\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}