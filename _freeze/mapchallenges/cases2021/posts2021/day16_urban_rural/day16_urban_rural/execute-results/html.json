{
  "hash": "a4532ce49ba6faa851be2f5d7a5ef007",
  "result": {
    "markdown": "---\ntitle: 'Urban_rural'\nsubtitle: 'Welcome to #30DayMapChallenge 2021 day 16'\ndate: '2021-11-16'\nimage: 'day16_urban_rural.png'\nimage-alt: ''\ndescription: 'Networks'\noutput: html_document\nexecute: \n   eval: false\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(cbsodataR)\nlibrary(tidyverse)\nlibrary(sf)\n\n\n\n# https://www.cbs.nl/en-gb/onze-diensten/open-data/statline-as-open-data/cartography\n# https://simplemaps.com/data/nl-cities\n\n\n\n#----\n\ndata_house <- cbs_get_data(\"83765NED\",\n                     select=c(\"WijkenEnBuurten\",\n                              \"Appartement_48\",\n                              \"ScholenBinnen3Km_98\")) %>%\n  mutate(WijkenEnBuurten = str_trim(WijkenEnBuurten),#boroughs\n         houses = Appartement_48,\n         schools=ScholenBinnen3Km_98)\n\n\n# Retrieve data with municipal boundaries from PDOK\nmunicipalBoundaries <- st_read(\"https://geodata.nationaalgeoregister.nl/cbsgebiedsindelingen/wfs?request=GetFeature&service=WFS&version=2.0.0&typeName=cbs_gemeente_2017_gegeneraliseerd&outputFormat=json\")\n\n\n# obtain the coordinates\nas.data.frame(st_coordinates(municipalBoundaries$geometry))\n\ndf <- municipalBoundaries$statnaam\ndf<- as.data.frame(df)\n\ndf_xy <- municipalBoundaries%>%\n  select(statnaam,geometry) %>%\n  st_centroid()%>%\n  st_coordinates()\n\n\n\nstate <- cbind(df,df_xy)%>%\n  filter(df%in%c(\"Amsterdam\",\"The Hague\",\n                 \"Utrecht\",\"Rotterdam\",\n                 \"Eindhoven\",\n                 \"Groningen\",\"Breda\",\n                 \"Apeldoorn\"))\n\n\n\nlibrary(showtext)\nlibrary(extrafont)\n#fonts()\n#loadfonts()\nfont_add_google(\"Roboto Condensed\",\"RobotoCondensed\")\nshowtext_opts(dpi = 320)\nshowtext_auto(enable = T)\n\n\n\n# Link data from Statistics Netherlands to geodata\ndata_house <-\n  municipalBoundaries %>%\n  left_join(data_house, by=c(statcode=\"WijkenEnBuurten\"))\n\n# Create a thematic map\nplot <- data_house %>%\n  ggplot() +\n  geom_sf(aes(fill = schools)) +\n  geom_text(data=state,aes(x=X,y=Y,label=df),\n            color=\"gold\",fontface=\"bold\",family=\"RobotoCondensed\")+\n  scale_fill_gradient(low=\"#c97d2c\",high = \"darkblue\")+\n  labs(title = \"The Netherlands: Hurban and Rural\",\n       subtitle=\"Schools near by...\",\n       caption=\"Datasource: cbs.nl opendata - #30DayMapChallenge\\nGraphics: Federica Gazzelloni\\n\",\n       fill = \"Schools\") +\n  coord_sf()+\n  theme_void()+\n  theme(text = element_text(color=\"gold\",face=\"bold\",family=\"RobotoCondensed\"),\n        plot.background = element_rect(color = \"grey20\",fill=\"grey60\",size=2),\n        legend.position = c(0.1,0.08),\n        plot.caption = element_text(hjust=0.5,size=11),\n        plot.caption.position = \"panel\",\n        plot.title = element_text(size=25,hjust=0.2,vjust=-1.5),\n        plot.subtitle = element_text(size=18,hjust=0.06,vjust=-1))\n\n\nlibrary(cowplot)\nfinal <- cowplot::ggdraw(plot)+\n  draw_label(\"The Hague\",x=0.4,y=0.5,color=\"gold\",\n             fontface = \"bold\",fontfamily=\"RobotoCondensed\")\n\n\n# save final plot\nragg::agg_png(here::here(\"R_general_resources/30DayMapChallenge/day15_urban_rural/urban_rural.png\"),\n              res = 320, width = 12, height = 8, units = \"in\")\nfinal\ndev.off()\n\n\n\n# data for oland capitals\n\nlibrary(readr)\n\nnl <- read_csv(\"R_general_resources/30DayMapChallenge/day15_urban_rural/nl.csv\")\n\n\nnl%>%count(city,population)%>%arrange(-population)\n\nnl%>%\n  filter(!lat<20)%>%\n  ggplot(aes(x=lng,y=lat))+\n  geom_point()+\n  ggrepel::geom_text_repel(aes(label=capital))\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}