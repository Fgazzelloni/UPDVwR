{
  "hash": "76343f0e6d44792051d5f976b5d892ae",
  "result": {
    "markdown": "---\ntitle: 'Atmosphere'\nsubtitle: 'Welcome to #30DayMapChallenge 2023 day 18'\ndate: '2023-11-18'\nimage: 'https://raw.githubusercontent.com/Fgazzelloni/30DayMapChallenge/master/2023/day18_atmosphere/day18_atmosphere.png'\nimage-alt: ''\ndescription: ''\noutput: html_document\nexecute: \n   eval: true\n   message: false\n   warning: false\n---\n\n\nThis challenge is all about wind movements. The selected area is Italy, also some parts of the surrounding territories can be seen. I am going to use the {rWind} package for downloading the information about wind speed and direction vectors (u,v) for today, Nov 18, 2023. \n\n\n<center>\n![](https://raw.githubusercontent.com/Fgazzelloni/30DayMapChallenge/master/2023/day18_atmosphere/day18_atmosphere.png)</center>\n\n\n\nIn order to be able to interpolate the information from {rWind}, I'll use the {oce} package which provide a type of interpolating function for calculating the Barnes interpolation with: `oce::interpBarnes()` function.\n\n\nLoad necessary libraries\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(giscoR)\nlibrary(classInt)\nlibrary(metR)\n# install.packages(\"rWind\")\n# install.packages(\"oce\")\nlibrary(rWind)\nlibrary(oce)\n```\n:::\n\n\n\n## Set the Date\n\n::: {.cell}\n\n```{.r .cell-code}\ntime_range <- seq(ymd_hms(paste(2023, 11, 18, 00, 00, 00, \n                                sep = \"-\")),\n                  ymd_hms(paste(2023, 11, 18, 00, 00, 00, \n                                sep = \"-\")),\n                  by = \"1 hours\"\n                  )\n```\n:::\n\n\n## Download Data from {rWind}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmean_wind_data2 <- rWind::wind.dl_2(time_range, \n                                   3.472, 36.368, 23.906, 46.665) %>%\n  rWind::wind.mean()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"2023-11-18 downloading...\"\n```\n:::\n\n```{.r .cell-code}\neur_wind_df2 <- as.data.frame(mean_wind_data2)\neur_wind_df2%>%head\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n           time  lat lon    ugrd10m     vgrd10m        dir     speed\n3016 2023-11-18 46.5 3.5  0.1880054  1.34282470   7.970025 1.3559219\n3017 2023-11-18 46.5 4.0 -0.3119946  0.68282470 335.443507 0.7507264\n3018 2023-11-18 46.5 4.5  0.2880054  0.48282468  30.816114 0.5621981\n3019 2023-11-18 46.5 5.0  0.7280053  0.34282470  64.783804 0.8046866\n3020 2023-11-18 46.5 5.5 -0.5019946 -0.53717530 223.061014 0.7352251\n3021 2023-11-18 46.5 6.0 -0.7519946 -0.03717529 267.169854 0.7529129\n```\n:::\n:::\n\n\n\n\n### Quick look at the first grid\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(eur_wind_df2)+\n  geom_point(aes(lon,lat,color=speed),size=1.5,alpha=0.9)\n```\n\n::: {.cell-output-display}\n![](day18_atmosphere_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\n\n## Download the polygons for Europe\n\n::: {.cell}\n\n```{.r .cell-code}\neur_sf <- giscoR::gisco_get_countries(\n        year = \"2020\", epsg = \"4326\",\n        resolution = \"10\", region = c(\"Europe\", \"Asia\")\n    )\n```\n:::\n\n\n\n### Have a look at the first level map\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(eur_wind_df2)+\n  geom_point(aes(lon,lat,color=speed),size=2)+\n  geom_sf(data=eur_sf,inherit.aes = F,\n          fill=NA,\n          show.legend = F)+\n  scale_color_gradient(low=\"#f6f7f9\",high = \"#250c5f\")+\n  scale_x_continuous(limits = c(3.472,23.906))+\n  scale_y_continuous(limits = c(36.368,46.665))+\n  theme(panel.background = element_rect(color=\"#f6f7f9\",fill=\"#f6f7f9\"))\n```\n\n::: {.cell-output-display}\n![](day18_atmosphere_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n## Interpolation\n\nHere I try to make the Barnes interpolation on the first level grid. \n  \n    oce::interpBarnes\n\nAnd have a look at the information provided with the `contour()` function.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwu <- oce::interpBarnes(\n        x = eur_wind_df2$lon,\n        y = eur_wind_df2$lat,\n        z = eur_wind_df2$ugrd10m\n    )\nwv <- oce::interpBarnes(\n        x = eur_wind_df2$lon,\n        y = eur_wind_df2$lat,\n        z = eur_wind_df2$vgrd10m\n    )\ncontour(wu$xg,wu$yg,wu$zg)\n```\n\n::: {.cell-output-display}\n![](day18_atmosphere_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n## Set a second level grid\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\neur_wind_pts <- eur_wind_df2 %>%\n    sf::st_as_sf(coords = c(\"lon\", \"lat\")) %>%\n    sf::st_set_crs(4326)\n\neur_wind_pts \n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 3082 features and 5 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3.5 ymin: 24 xmax: 36.5 ymax: 46.5\nGeodetic CRS:  WGS 84\nFirst 10 features:\n           time     ugrd10m     vgrd10m        dir     speed         geometry\n3016 2023-11-18  0.18800537  1.34282470   7.970025 1.3559219 POINT (3.5 46.5)\n3017 2023-11-18 -0.31199460  0.68282470 335.443507 0.7507264   POINT (4 46.5)\n3018 2023-11-18  0.28800535  0.48282468  30.816114 0.5621981 POINT (4.5 46.5)\n3019 2023-11-18  0.72800535  0.34282470  64.783804 0.8046866   POINT (5 46.5)\n3020 2023-11-18 -0.50199460 -0.53717530 223.061014 0.7352251 POINT (5.5 46.5)\n3021 2023-11-18 -0.75199460 -0.03717529 267.169854 0.7529129   POINT (6 46.5)\n3022 2023-11-18 -0.08199463 -1.27717530 183.673347 1.2798046 POINT (6.5 46.5)\n3023 2023-11-18 -0.86199460  0.84282470 314.355763 1.2055655   POINT (7 46.5)\n3024 2023-11-18 -0.02199463  1.67282460 359.246707 1.6729692 POINT (7.5 46.5)\n3025 2023-11-18  0.47800535 -1.37717520 160.858564 1.4577725   POINT (8 46.5)\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n eur_wind_grid <- eur_wind_pts %>%\n    sf::st_make_grid(n = c(80, 100)) %>%\n    sf::st_sf() %>%\n    dplyr::mutate(id = row_number())\n```\n:::\n\n\n\n\n### Have a look at the second level grid\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(eur_wind_grid)+\n  geom_sf()\n```\n\n::: {.cell-output-display}\n![](day18_atmosphere_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n## Make an adjusted grid set\n\nFor more information about this type of analysis have a look at this tutorial: <https://milospopovic.net/mapping-wind-data-in-r/>\n\n\n::: {.cell}\n\n```{.r .cell-code}\neur_wind_grid_agg <- \n    sf::st_join(eur_wind_pts, eur_wind_grid, \n      join = sf::st_within) %>%\n    sf::st_drop_geometry() %>%\n    dplyr::group_by(id) %>%\n    dplyr::summarise(\n      n = n(), u = mean(ugrd10m), \n      v = mean(vgrd10m), speed = mean(speed)\n    ) %>%\n    dplyr::inner_join(eur_wind_grid, by=\"id\") %>%\n    dplyr::select(n, u, v, speed, geometry) %>%\n    sf::st_as_sf() %>%\n    na.omit()\n```\n:::\n\n\n\n### Visualize the adjusted grid\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(eur_wind_grid_agg)+\n  geom_sf(aes(fill=speed))\n```\n\n::: {.cell-output-display}\n![](day18_atmosphere_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n## Rebuild the original set with adding adjusted coordinates\n\n\nThe Centroids:\n\n::: {.cell}\n\n```{.r .cell-code}\ncoords <- eur_wind_grid_agg %>%\n    st_centroid() %>%\n    st_coordinates() %>%\n    as_tibble() %>%\n    rename(lon = X, lat = Y)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\neur_df <- coords %>%\n    bind_cols(sf::st_drop_geometry(eur_wind_grid_agg))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\neur_df %>%\n        ggplot() +\n        geom_point(aes(lon,lat,color=speed))\n```\n\n::: {.cell-output-display}\n![](day18_atmosphere_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n\n## Interpolation II\n\nRepete the procedure with the adjusted grid.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwu <- oce::interpBarnes(\n        x = eur_df$lon,\n        y = eur_df$lat,\n        z = eur_df$u\n    )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndimension <- data.frame(lon = wu$xg, wu$zg) %>% dim()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nudf <- data.frame(\n        lon = wu$xg,\n        wu$zg\n    ) %>%\n        gather(key = \"lata\", value = \"u\", 2:dimension[2]) %>%\n        mutate(lat = rep(wu$yg, each = dimension[1])) %>%\n        select(lon, lat, u) %>%\n        as_tibble()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwv <- oce::interpBarnes(\n        x = eur_df$lon,\n        y = eur_df$lat,\n        z = eur_df$v\n    )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nvdf <- data.frame(lon = wv$xg, wv$zg) %>%\n        gather(key = \"lata\", value = \"v\", 2:dimension[2]) %>%\n        mutate(lat = rep(wv$yg, each = dimension[1])) %>%\n        select(lon, lat, v) %>%\n        as_tibble()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- udf %>%\n        bind_cols(vdf %>% select(v)) %>%\n        mutate(vel = sqrt(u^2 + v^2))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 Ã— 5\n    lon   lat      u      v   vel\n  <dbl> <dbl>  <dbl>  <dbl> <dbl>\n1   3.5    24  0.698 0.141  0.712\n2   4      24  0.448 0.0845 0.456\n3   4.5    24 -0.525 0.0523 0.528\n4   5      24 -1.20  0.377  1.26 \n5   5.5    24 -1.61  0.383  1.65 \n6   6      24 -1.01  1.30   1.65 \n```\n:::\n:::\n\n\n## Make the Map\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>%\n        ggplot() +\n        metR::geom_streamline(\n            data = df,\n            aes(\n                x = lon, y = lat, dx = u, dy = v,\n                color = sqrt(..dx..^2 + ..dy..^2)\n            ),\n            L = 2, res = 2, n = 60,\n            arrow = NULL, lineend = \"round\",\n            alpha = .85\n        ) \n```\n\n::: {.cell-output-display}\n![](day18_atmosphere_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n## Make the map on polygons\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>%\n  ggplot() +\n  metR::geom_streamline(data = df,\n                        aes(x = lon, y = lat, dx = u, dy = v,\n                            color = sqrt(..dx..^2 + ..dy..^2)),\n                        L = 2, \n                        res = 2, \n                        n = 60,arrow = NULL, \n                        lineend = \"round\",\n                        alpha = .85) +\n  geom_sf(data = eur_sf,\n          fill = NA,\n          linewidth = 0.8,\n          alpha = .99) +\n    scale_x_continuous(limits = c(3.472,23.906))+\n    scale_y_continuous(limits = c(36.368,46.665))+\n  scale_color_gradient(low=\"#f6f7f9\",high = \"orange\")+\n  labs(title=\"Whispers of the Breeze: Italy's Today Wind Speed\",\n       subtitle=\"#30DayMapChallenge 2023 Day 18 Atmosphere\",\n       caption=\"DataSource: {rWind} | Map: @fgazzelloni\")+\n  ggthemes::theme_map()+\n  theme(legend.position = \"none\",\n        plot.background = element_rect(color=\"#dedede\",fill=\"#dedede\"),\n        plot.title = element_text(hjust=0.5,size=16,face=\"bold\"),\n        plot.subtitle = element_text(hjust=0.5,size=11,face=\"bold\"),\n        plot.caption = element_text(hjust=0.5,size=10,face=\"bold\"))\n```\n\n::: {.cell-output-display}\n![](day18_atmosphere_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave(\"day18_atmosphere.png\",\n       height = 5,\n       bg=\"#dedede\")\n```\n:::\n\n\n\n\n## Resource\n\n- <https://milospopovic.net/mapping-wind-data-in-r/>\n- <https://semba-blog.netlify.app/10/25/2018/processing-satellite-wind-speed-data-with-r/>\n- <https://stackoverflow.com/questions/55583611/how-to-create-contour-with-wind-animation-using-gganimate>\n- <https://www.r-bloggers.com/2018/11/plotting-wind-highways-using-rwind/>\n",
    "supporting": [
      "day18_atmosphere_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}