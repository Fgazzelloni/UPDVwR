{
  "hash": "d94d8884fd098c8526d9ca8901dc0c08",
  "result": {
    "markdown": "---\ntitle: 'Europe'\nsubtitle: 'Welcome to #30DayMapChallenge 2023 day 14'\ndate: '2023-11-14'\nimage: 'https://raw.githubusercontent.com/Fgazzelloni/30DayMapChallenge/master/2023/day14_europe/day14_europe.png'\nimage-alt: ''\ndescription: ''\noutput: html_document\nexecute: \n   eval: false\n   message: false\n   warning: false\n---\n\n\n\n# Overview\n\nEurostat data with R. We use the {eurostat} package\n\n\nLoad Libraries\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(eurostat)\nlibrary(sf)\nlibrary(ggthemes)\nlibrary(rvest)\nlibrary(ggmap)\n```\n:::\n\n\n## Eurostat Geospatial\n\n\n::: {.cell}\n\n```{.r .cell-code}\neu_geo <- get_eurostat_geospatial(resolution = 10, \n                        nuts_level = 0, \n                        year = 2016) \n  \neu_geo %>%\n  ggplot() +\n  geom_sf()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsearch_eurostat(\"youth\")\n```\n:::\n\n## Europe Youth Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nyth_demo_010 <- get_eurostat(\"yth_demo_010\", time_format = \"num\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nyth08_20 <- yth_demo_010%>%\n  filter(age==\"TOTAL\",\n         sex==\"T\",\n         time%in%c(2008,2022))%>%\n  select(geo,time,sex,values)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nyth08_20%>%dim\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <- yth08_20%>% \n  inner_join(eu_geo, by = \"geo\") %>% \n  st_as_sf()\n```\n:::\n\n\n## Precentage of Change in Youths (2008-2022)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nydata <- data%>%\n  janitor::clean_names()%>%\n  mutate(name_latn=str_to_title(name_latn))%>%\n  select(geo,geometry,sex,time,values,name_latn)%>%\n  pivot_wider(names_from = \"time\",values_from = \"values\",names_prefix = \"Y\")%>%\n  mutate(change=round((as.numeric(Y2022)-as.numeric(Y2008))/as.numeric(Y2008),3)) \n  \nydata\n```\n:::\n\n\n## European Cities\n\n\n::: {.cell}\n\n```{.r .cell-code}\neu_cities <- read_html(\"https://en.wikipedia.org/wiki/List_of_European_cities_by_population_within_city_limits\")\n\neu_cities <- eu_cities%>%\n  html_nodes(\"table\") %>%\n  .[[1]] %>%\n  html_table(fill = TRUE)\n\neu_cities<- eu_cities[,-1]\neu_cities %>% names()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\neu_cities<- eu_cities %>% \n  mutate(City=str_replace_all(City, \"\\\\[.*\\\\]\",\"\"))%>%\n  select(City,Country)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncity.geo <- geocode(eu_cities$City)\neu_cities <- cbind(eu_cities,city.geo)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(ydata)+\n  geom_sf(aes(fill=change),inherit.aes = F)+\n  geom_sf(aes(color=geo),fill=NA,alpha=0.5)+\n  ggrepel::geom_text_repel(data=eu_cities,\n                           aes(x=lon,y=lat,label=City),\n                           size=3,color=\"#ebe7d8\",\n                           family=\"Roboto Condensed\",\n                           inherit.aes = F)+\n  scale_x_continuous(limits = c(-10, 35)) +\n  scale_y_continuous(limits = c(35, 65)) +\n  scale_fill_continuous(type = \"viridis\",\n                        name = \"% change\",\n                        guide = guide_colorbar(\n                          direction = \"vertical\", \n                          title.position = \"top\",\n                          label.position = \"right\", \n                          barwidth = unit(8, \"pt\"),  \n                          barheight = unit(50, \"pt\"), \n                          ticks = TRUE))+\n  coord_sf(clip = \"off\")+\n  labs(color=\"Country Code\",\n       title=\"European Child and Youth Population\",\n       subtitle = \"% change 2008-2022\",\n       caption=\"#30DayMapChallenge 2023 Day 14 Europe\\nDatasource: {eurostat} & Wikipedia | Map: @fgazzelloni\")+\n  ggthemes::theme_map()+\n  theme(text=element_text(size=14,color=\"#ebe7d8\",family=\"Roboto Condensed\"),\n        plot.title = element_text(face=\"bold\",hjust = -1),\n        plot.caption = element_text(hjust = 0.5,size=9),\n        legend.background = element_blank(),\n        legend.position = c(1.1,0.3),\n        legend.title = element_text(size=8),\n        legend.text = element_text(size=6),\n        legend.key.size = unit(5,units = \"pt\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave(\"day14_europe.png\",height = 5,bg=\"#121007\")\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}