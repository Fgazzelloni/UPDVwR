{
  "hash": "c8f1e36a31ca0bb3ec5e99a9c337cc04",
  "result": {
    "markdown": "---\ntitle: 'Hexagons'\nsubtitle: 'Welcome to #30DayMapChallenge 2023 day 9'\ndate: '2023-11-09'\nimage: 'https://raw.githubusercontent.com/Fgazzelloni/30DayMapChallenge/master/2023/day9_hexagons/day9_hexagons.png'\nimage-alt: ''\ndescription: ''\noutput: html_document\nexecute: \n   eval: false\n---\n\n\n\n# Overview\n\nHexagons map of Covid19 data in Italy. For this challenge I will be using the `{covid19italy}` package for mapping Covid19 cases in Italy.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(\"sf\")\nlibrary(\"tidyverse\")\nlibrary(\"rnaturalearth\")\nlibrary(\"covid19italy\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nitaly_geo <- ne_states(#scale = \"large\",\n                   country = \"Italy\",\n                   returnclass = \"sf\") |>\n  st_geometry() |> ## \n  st_transform(3003) \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nitaly_map <- ne_states(#scale = \"large\",\n                   country = \"Italy\",\n                   returnclass = \"sf\")\n\nitaly_map%>%names\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nitaly_map_region <- italy_map%>%count(region)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nitaly_geo |> \n  ggplot() +\n  geom_sf(fill = \"white\", color = \"pink\") +\n  geom_sf(data=italy_map,\n          mapping=aes(fill=region),\n          color=\"pink\",\n          inherit.aes = F)+\n  labs(fill=\"\")+\n  ggthemes::theme_map()+\n  theme(legend.position = \"bottom\",\n        legend.key.size = unit(5,units=\"pt\"),\n        legend.text = element_text(size=5))\n```\n:::\n\n\n## Italy Hexagons\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhexgrid <- st_make_grid(italy_geo,\n                        cellsize = 1e4, \n                        what = 'polygons',\n                        square = FALSE ## !\n                        ) %>%\n  st_as_sf()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhexgrid_italy <- hexgrid[c(unlist(st_contains(italy_geo, hexgrid)), \n                        unlist(st_overlaps(italy_geo, hexgrid))) ,] \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nitaly_geo |> \n  ggplot() +\n  geom_sf(fill = \"#8c8b8b\", color = \"#7cb3b8\") +\ngeom_sf(data = hexgrid_italy, \n        color = \"#43605b\") +\n  labs(title = \"Italy\", \n       caption = \"#30DayMapChallenge | Day 9: Hexagons | Map: @fgazzelloni\")+\n  ggthemes::theme_map()\n```\n:::\n\n\n## Hexagons by region\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nitaly_geo |> \n  ggplot() +\n  geom_sf(color = \"pink\") +\n  geom_sf(data=italy_map,\n          mapping=aes(fill=region),\n          alpha=0.5,\n          color=NA,\n          inherit.aes = F)+\n  geom_sf(data = hexgrid_italy_reg, \n          fill=NA,\n        color = \"#43605b\") +\n    labs(title = \"Italy\", \n       caption = \"#30DayMapChallenge | Day 9: Hexagons | Map: @fgazzelloni\")+\n  labs(fill=\"\")+\n  ggthemes::theme_map()+\n  theme(legend.position = \"bottom\",\n        legend.key.size = unit(5,units=\"pt\"),\n        legend.text = element_text(size=5))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nitaly_map_region_covid <- italy_map_region %>%\n  left_join(covid19italy::italy_region %>% \n              filter(date == max(date)), \n            by = c(\"region\" = \"region_spatial\"))\n\nitaly_map_region_covid%>%names\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nitaly_geo |> \n  ggplot() +\n  geom_sf(color = \"#8c8b8b\") +\n  geom_sf(data=italy_map_region_covid,\n          mapping=aes(fill=death),\n          color=NA,\n          inherit.aes = F)+\n  geom_sf(data = hexgrid_italy_reg, \n          fill=NA,\n        color = \"#FFDAB9\") +\n  scale_fill_gradientn(colors=rev(c(\"#FF4500\",\"#FFA500\",\"#FFD700\")))+\n    ggtext::geom_richtext(x=2401390 ,y=4837570,\n                        hjust = 1,\n                        vjust=0,\n                        label=\"Italy\",\n                        fill = NA, \n                        color=\"#8c8b8b\",\n                        label.color = NA,\n                        size=25,\n                        family = \"Roboto Condensed\")+\n      ggtext::geom_richtext(x=2401390 ,y=4737570,\n                        hjust = 0.8,\n                        vjust=0,\n                        color=\"#8c8b8b\",\n                        label=\"Total number of Covid19 death cases\",\n                        fill = NA, \n                        label.color = NA,\n                        size=4,\n                        family = \"Roboto Condensed\")+\n    labs(caption = \"#30DayMapChallenge 2023 Day 9 Hexagons\\nDataSource: {covid19italy} data| Map: @fgazzelloni\",\n       fill=\"N. Deaths\")+\n  ggthemes::theme_map()+\n  coord_sf(clip = \"off\")+\n  theme(text=element_text(color=\"#8c8b8b\",family=\"Roboto Condensed\"),\n        plot.caption = element_text(hjust = 0.5,size=8,face = \"bold\"),\n        legend.position = \"bottom\",\n        legend.background = element_rect(color=\"#8c8b8b\",fill=\"#FFDAB9\"),\n        legend.key.size = unit(10,units=\"pt\"),\n        legend.text = element_text(size=5))+\n   ggspatial::annotation_scale()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave(\"day9_hexagons.png\", \n       dpi = 320, bg=\"#FFDAB9\")\n```\n:::\n\n\nSource of inspiration: \n<https://github.com/umemasiddiqi/30DayMapChallenge/blob/main/2023/11092023/Pak-Hexagon.R>\n\n\n## Covid-19 Italy\n\n\nSource of data: \nhttps://covid19r.github.io/covid19italy/articles/geospatial_visualization.html\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}