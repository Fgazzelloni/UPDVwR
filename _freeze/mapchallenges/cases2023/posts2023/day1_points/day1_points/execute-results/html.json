{
  "hash": "4c82b7782b4bd49192c117c6c240816a",
  "result": {
    "markdown": "---\ntitle: 'Points'\nsubtitle: 'Welcome to #30DayMapChallenge 2023 day 1'\ndate: '2023-11-01'\nimage: 'https://raw.githubusercontent.com/Fgazzelloni/30DayMapChallenge/master/2023/day1_points/day1_points.png'\nimage-alt: ''\ndescription: ''\noutput: html_document\nexecute: \n   eval: false\n---\n\n\n\n## Overview\n\nA points map of the `Bovine Tubercoulosis Farm Locations in Cornwall`, UK (South West England). Data is from the `{spatstat}` package.\n\n<center>\n![](https://raw.githubusercontent.com/Fgazzelloni/30DayMapChallenge/master/2023/day1_points/day1_points.png)</center>\n\n\n\nLet's have a look at the `{spatstat}` package for spatial point patterns usage: \n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"spatstat\")\n```\n:::\n\n\nLoad necessary libraries:\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(spatstat)\n```\n:::\n\n\n\nFor this challenge I'll have a look at the `Bovine Tuberculosis` dataset from the {spatstat} package.\n\nA geospatial data of 873 farm locations with detected bovine tuberculosis in Cornwall, UK, over the years 1989-2002. \n\n    ?btb\n    \n\n::: {.cell}\n\n```{.r .cell-code}\nspatstat.data::btb\n```\n:::\n\n\nLocations of cattle herds in Cornwall (United Kingdom) that have tested positive for bovine tuberculosis in the observation region, which is the polygon of Cornwall, annotated with marks including the year of testing, and spoligotype (a qualitative genetic marker).\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(btb)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(btb)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(btb)\n    plot(subset(btb, select=spoligotype), cols=2:5)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nborders <- tibble(lon = btb$window$bdry[[1]]$x,\n       lat = btb$window$bdry[[1]]$y)\n       \ndat <- tibble(lon=btb$x,\n       lat=btb$y)\n\n\nggplot()+\n  geom_point(data=borders,\n             aes(lon,lat),\n             size=0.1) +\n  geom_point(data=dat,\n             aes(lon,lat))+\n  labs(title=\"Farm Locations\")\n```\n:::\n\n\nCompute the `Kernel densities` using the `density()` function, and specify the bandwidth parameter `sigma` with the `cross-validation` by function `bw.diggle`.\n\n::: {.cell}\n\n```{.r .cell-code}\nden <- density(btb, sigma = bw.diggle)\nplot(den)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndescription <- data.frame(text=\"Locations of cattle herds in Cornwall (United Kingdom)\\ntested positive for bovine tuberculosis over the years 1989-2002.\",\n                          caption=\"\\nResource: Diggle, P.J., Zheng, P. and Durr, P. (2005)\\nNonparametric estimation of spatial segregation in a multivariate point process: bovine tuberculosis in Cornwall, UK.\\n#30DayMapChallenge 2023 Day1- Points | Map: Federica Gazzelloni\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(stars)\nst_as_stars(den)%>%\nst_as_sf(as_points = TRUE)%>%\n  ggplot()+\n  geom_sf(size=0.4,color=\"#4CAF50\")+\n  geom_point(data=borders,\n             aes(lon,lat),\n             size=0.8,\n             shape=21,\n             stroke=0.1,\n             color=\"#FFFFFF\",\n             fill=\"#0074D9\") +\n  geom_point(data=dat,\n             aes(lon,lat),\n             shape=21,\n             stroke=0.1,\n             color=\"#CCCCCC\",\n             fill=\"#FF5733\",\n             size=1.1)+\n  labs(title=\"Bovine Tuberculosis\",\n       subtitle=description$text,\n       caption=paste(\"DataSource: {spatstat} package\",description$caption))+\n  ggthemes::theme_map()+\n  theme(plot.background = element_rect(colour = \"#FFFFFF\",fill=\"#FFFFFF\"),\n        panel.background = element_rect(colour = \"#FFFFFF\",fill=\"#FFFFFF\"),\n        plot.title = element_text(size = 14),\n        plot.subtitle = element_text(size=11),\n        plot.caption = element_text(hjust = 0))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave(\"day1_points.png\")\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}