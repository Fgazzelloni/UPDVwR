{
  "hash": "59e3a5f9c4294a7ae5e9fb1319f42c39",
  "result": {
    "markdown": "---\ntitle: 'North America'\nsubtitle: 'Welcome to #30DayMapChallenge 2023 day 10'\ndate: '2023-11-10'\nimage: 'https://raw.githubusercontent.com/Fgazzelloni/30DayMapChallenge/master/2023/day10_north-america/day10_north-america.png'\nimage-alt: ''\ndescription: ''\noutput: html_document\nexecute: \n   eval: false\n---\n\n\n\n# Overview\n\nThis is a map of the `Canada` country's regions. Data is from `rnaturalearth}`.\n\n<center>\n![](https://raw.githubusercontent.com/Fgazzelloni/30DayMapChallenge/master/2023/day10_north-america/day10_north-america.png)</center>\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(rnaturalearth)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncanada_disasters<- read.delim(\"data/CDD.txt\")\n\ncanada_disasters%>%#count(PLACE)\n  filter(!str_detect(PLACE,\"[0-9]+\"))%>%\n  count(PLACE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncanada<- ne_states(\"canada\",returnclass = \"sf\")\nggplot(canada)+\n  geom_sf(aes(fill=name))+\n  scale_fill_viridis_d(option = \"mako\", name=\"Regions\",\n                       direction = -1, end = .9)+\n  labs(#subtitle=\"Mapping Regions\",\n       caption = \"#30DayMapChallenge 2023 - Day 10: North America\\nDataSource {rnaturalearth} | Map: @fgazzelloni)\")+\n  ggtitle(\"Canada: Mapping Regions\") +\n  ggthemes::theme_map()+\n  theme(text=element_text(family=\"Roboto Condensed\",face=\"bold\"),\n        plot.title = ggtext::element_markdown(size=18),\n        plot.caption = element_text(hjust = 0.5),\n        legend.key.size = unit(5,units = \"pt\"),\n        legend.text = element_text(size=5),\n        legend.position = \"right\")+\n   ggspatial::annotation_scale()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave(\"day10_north-america.png\",bg=\"white\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncanada%>%count(name)\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}