{
  "hash": "8f67af12a2e4ab85a56d94f65c59180e",
  "result": {
    "markdown": "---\ntitle: 'Dot'\nsubtitle: 'Welcome to #30DayMapChallenge 2023 day 27'\ndate: '2023-11-27'\nimage: 'https://raw.githubusercontent.com/Fgazzelloni/30DayMapChallenge/master/2023/day27_dot/day27_dot.png'\nimage-alt: ''\ndescription: ''\noutput: html_document\nexecute: \n   eval: false\n---\n\n\n\n\n# Overview\n\nThis Dot Map comprises an overview of the `EPSG Geodetic Parameter Dataset (also EPSG registry)`. A public registry of geodetic datums, spatial reference systems, Earth ellipsoids, coordinate transformations and related units of measurement, originated by a member of the European Petroleum Survey Group (EPSG) in 1985. (see [Wikipedia](https://en.wikipedia.org/wiki/EPSG_Geodetic_Parameter_Dataset))\n\n<center>\n![](https://raw.githubusercontent.com/Fgazzelloni/30DayMapChallenge/master/2023/day27_dot/day27_dot.png)</center>\n\nEach entity is assigned an EPSG code between 1024 and 32767, along with a `standard machine-readable well-known text (WKT)` representation. \n\nThe most common is `EPSG:4326 - WGS 84`, latitude/longitude coordinate system based on the Earth's center of mass, used by the Global Positioning System among others.\n\nA `map projection` is a set of transformations to represent the `curved two-dimensional surface of a globe` on a plane. Here is a full list of all available types of projections: <https://en.wikipedia.org/wiki/List_of_map_projections>\n\nAll projections of a `sphere on a plane` are distortions of a three-dimensional surface when represented on a flat plane. These distortions arise due to the inherent differences in geometry between a `three-dimensional sphere` and a `two-dimensional plane`.\n\nThis resource shows how to make oceans: <https://r-spatial.github.io/sf/articles/sf7.html>\n\nOceans computed as the difference from the full polygon representing the entire globe:\n\n::: {.cell}\n\n```{.r .cell-code}\n# install.packages(\"s2\")\nlibrary(sf)\nsf_use_s2()\nlibrary(s2)\n\n\ng = as_s2_geography(TRUE)\nco = s2_data_countries()\noc = s2_difference(g, s2_union_agg(co)) # oceans\nb = s2_buffer_cells(as_s2_geography(\"POINT(-30 52)\"), 9800000) # visible half\ni = s2_intersection(b, oc) # visible ocean\n\nplot(st_transform(st_as_sfc(i), \"+proj=ortho +lat_0=52 +lon_0=-30\"), col = 'blue')\n```\n:::\n\n\n\n\n## Projections\n\nLet's have a look at some examples that can be used for changing the projection of a plane map, the reverse of what just said above, we are now starting from a plane surface and want to recreate a three dimensional representation of the earth.\n\n\n::: {.cell}\n\n```{.r .cell-code}\northo<- \"+proj=ortho +lat_0=-90 +lat_ts=-71 +lon_0=0 +k=1 +x_0=0 +y_0=0 +ellps=WGS84 +datum=WGS84 +units=m +no_defs\"\n```\n:::\n\n\n    st_transform(crs=\"ESRI:54030\")\n    coord_sf(crs=\"ESRI:54030\",clip = \"off\")\n    tm_shape(World, projection = 8857)\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(raster)\n```\n:::\n\n\nThe `WorldCover_trees_30s.tif` image can be downloaded here: <https://geodata.ucdavis.edu/geodata/landuse/>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nr <- raster(\"data/WorldCover_trees_30s.tif\")\nplot(r)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrr<- terra::rast(r)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(27112023)\nggplot() +\n  tidyterra::geom_spatraster(data = rr, \n                  aes(fill = trees)) +\n  coord_sf(crs = 4326,clip = \"off\") +\n  tidyterra::scale_fill_hypso_c(direction = -1)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tmap)\ndata(\"World\")\nlibrary(stars)\n\ntif=read_stars(\"data/WorldCover_trees_30s.tif\",\n               RasterIO = list(nBufXSize = 600, nBufYSize = 600))\ntif_tr<-st_transform(tif,crs=\"ESRI:54030\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsysfonts::font_add_google(\"Merriweather\",\"Merriweather\")\nshowtext::showtext_auto()\nshowtext::showtext_opts(dpi=320)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot()+\n  geom_stars(data=tif_tr)+\n  geom_sf(data=World%>%filter(!name==\"Antarctica\"),fill=NA,shape=\".\")+\n  coord_sf(crs = \"ESRI:54030\",clip = \"off\") +\n  tidyterra::scale_fill_hypso_c(direction = -1,\n                                label=scales::percent_format(),\n                                guide = guide_colorbar(title.position = \"top\"))+\n  labs(title = \"Dots of Green: Global Tree Cover Distribution\",\n       subtitle=\n\"Mapping Tree Density with WorldCover trees Data\",\n       caption = \"#30DayMapChallenge 2023 Day 27 Dot\\nSource: University of California, Davis Geospatial Data Repository(2022-02-20)\\nMap-Vis: @fgazzelloni\",\n       fill=\"Trees\")+\n  ggthemes::theme_map()+\n  theme(text=element_text(family=\"Merriweather\",color=\"#c2bfbf\"),\n        plot.title = element_text(face=\"bold\",size=10,hjust=0.5),\n        plot.subtitle = element_text(size=6,hjust=0.5),\n        plot.caption = element_text(face=\"bold\",\n                                    size=5,\n                                    lineheight = 1.1,\n                                    hjust=0.5,\n                                    vjust=-0.2),\n        legend.text = element_text(color=\"#c2bfbf\",size=3),\n        legend.title = element_text(size=4),\n        legend.key.size = unit(10,units = \"pt\"),\n        legend.position = c(0.45,-0.05),\n        legend.background = element_blank(),\n        legend.direction = \"horizontal\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave(\"day27_dot.png\",bg=\"black\",\n       width = 7,\n       height = 4,\n       dpi=320)\n```\n:::\n\n\n\n### Resources\n\n- <https://gigs.iogp.org/>\n- <https://epsg.org/download-dataset.html>\n- <https://spatialreference.org/ref/epsg/>\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}