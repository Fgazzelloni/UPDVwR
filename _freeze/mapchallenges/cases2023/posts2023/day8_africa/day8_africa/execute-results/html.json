{
  "hash": "c6c56e64e161017504a7d8a241ef93ff",
  "result": {
    "markdown": "---\ntitle: 'Africa'\nsubtitle: 'Welcome to #30DayMapChallenge 2023 day 8'\ndate: '2023-11-08'\nimage: 'https://raw.githubusercontent.com/Fgazzelloni/30DayMapChallenge/master/2023/day8_africa/day8_africa.png'\nimage-alt: ''\ndescription: ''\noutput: html_document\nexecute: \n   eval: false\n---\n\n\n# Overview\n\nFor this challenge I looked at an interesting resource: [Analyzing US Census Data: Methods, Maps, and Models in R](https://walker-data.com/census-r/working-with-census-data-outside-the-united-states.html?q=tfr#visualizing-idb-data), also found the `{idbr}` package R Interface to the US Census Bureau International Data Base API.\n\n\n\n<center>\n![](https://raw.githubusercontent.com/Fgazzelloni/30DayMapChallenge/master/2023/day8_africa/day8_africa.png)</center>\n\n\nSource: \n<https://walker-data.com/census-r/working-with-census-data-outside-the-united-states.html>\n\n## API key from {tidycensus}\n\nYou might need a `tidycensus` API key to use the {idbr} function `get_idb()` to donwload census data, then go to <https://api.census.gov/data/key_signup.html> and add your details. It will send you an email with the API key.\n\nThen use your key in the `tidycensus::census_api_key()` function:\n\n    tidycensus::census_api_key(key=\"xxx\",\n                               install = TRUE)\n                               \n                          \n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidycensus)\ntidycensus::census_api_key(key=\"xxx\",\n                           install = TRUE)\n```\n:::\n\n\n\nTo check whether the key is set do:\n    \n    readRenviron(\"~/.Renviron\")\n    Sys.getenv(\"CENSUS_API_KEY\")\n    \n## Census Data with {idbr}\n\nNow you are all set to get ready downloading your favorite census data.   \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(idbr)\nlibrary(tidyverse)\n```\n:::\n\n\n\n### Get data for all countries\n\nHere the `tfr` variable is selected as interested in the differences in total fertility rate in 2021 in Africa.\n\nGet the data for all countries and then select only Africa countries.\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <- get_idb(\n  country = \"all\",\n  year = 2021,\n  variables = \"tfr\",\n  geometry = TRUE,\n)\n\n\ndata %>% head()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata%>%\n  names\n```\n:::\n\n\nHave a look at the global total fertility rate in 2021.\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data, aes(fill = code)) + \n  theme_bw() + \n  geom_sf() + \n  coord_sf(crs = 'ESRI:54030') + \n  scale_fill_viridis_d()+\n  guides(fill=guide_legend(nrow = 10,title = \"\"))+\n  theme(legend.key.size = unit(2,units = \"pt\"),\n        legend.text = element_text(size=2),\n        legend.position = \"bottom\")\n```\n:::\n\n\n\n### Scrap the African countries from Wikipedia:\n<https://en.wikipedia.org/wiki/List_of_African_countries_by_population>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(rvest)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nafri_data <- read_html(\"https://en.wikipedia.org/wiki/List_of_African_countries_by_population\")\n\n\nafri_countries <- afri_data %>%\n  html_nodes(\"table\") %>%\n  .[[1]] %>%\n  html_table(fill = TRUE)\n\nafri_countries %>% names()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nafri_countries <- afri_countries%>%select(Country)%>%\n  unlist()\n```\n:::\n\n\n## Get the Africa tfr data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nafrica <- get_idb(\n  country = afri_countries,\n  year = 2021,\n  variables = \"tfr\",\n  geometry = TRUE,\n)\n\n\nafrica %>% head()\n```\n:::\n\n\n\nCheck the range of the tfr:\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(africa$tfr)\n```\n:::\n\n\nSet a color range:\n\n::: {.cell}\n\n```{.r .cell-code}\ncol.range<- c(2,7)\n```\n:::\n\n\n## Make the Map\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(africa, aes(fill = tfr)) + \n  geom_sf(color=\"white\") + \n  geom_sf_text(aes(label=name),size=2,family=\"Roboto Condensed\")+\n  scale_fill_continuous(low = \"#fff7ec\", \n                        high = \"#7F0000\",\n                        limits=col.range)+\n  ggtext::geom_richtext(x=0,y=0,\n                        hjust = 0.8,\n                        vjust=1.5,\n                        label=\"Africa\",\n                        fill = NA, \n                        label.color = NA,\n                        size=25,\n                        family = \"Gill Sans\")+\n    ggtext::geom_richtext(x=0,y=0,\n                        hjust = 0.8,\n                        vjust=6,\n                        label=\"Total fertility rate by country in 2021\",\n                        fill = NA, \n                        label.color = NA,\n                        size=4,\n                        family = \"Gill Sans\")+\n  coord_sf(crs = 'ESRI:54030',clip = \"off\") + \n  labs(caption=\"#30DayMapChallenge 2023 - Day 8 Africa\\nDataSource: wikipedia & {idbr} package | Map @fgazzelloni\\n\\n'Scale on map varies by more than 10%, scale bar may be inaccurate' {ggspatial}\",\n       fill=\"Total fertility rate (tfr)\")+\n  ggthemes::theme_map()+\n  theme(text=element_text(family = \"Gill Sans\"),\n        plot.title = element_text(face=\"bold\",size=14,hjust=0.5),\n        plot.subtitle = element_text(hjust=0.5),\n        plot.caption = element_text(hjust=0),\n        legend.position = c(0.75,-0.02),\n        legend.key.size = unit(9,units = \"pt\"),\n        legend.text = element_text(size=7.5),\n        legend.title = element_text(face=\"bold\",size=8),\n        legend.background = element_rect(color=\"#edece6\",fill=\"#edece6\"))+\n  ggspatial::annotation_scale()\n```\n:::\n\n\n\n### Save it!\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave(\"day8_africa.png\",bg=\"#ebe7d8\")\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}