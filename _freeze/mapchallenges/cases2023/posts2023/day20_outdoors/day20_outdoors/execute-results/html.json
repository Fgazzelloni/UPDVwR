{
  "hash": "f89361b8823f8ee72116cc7c41775ae6",
  "result": {
    "markdown": "---\ntitle: 'Outdoors'\nsubtitle: 'Welcome to #30DayMapChallenge 2023 day 20'\ndate: '2023-11-20'\nimage: 'https://raw.githubusercontent.com/Fgazzelloni/30DayMapChallenge/master/2023/day20_outdoors/day20_outdoors.png'\nimage-alt: ''\ndescription: ''\noutput: html_document\nexecute: \n   eval: false\n---\n\n\n# Overview\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(rnaturalearth)\n#?rnaturalearth::ne_countries()\nlibrary(rnaturalearthhires)\n#?rnaturalearthhires::coastline10\nlibrary(sf)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsysfonts::font_add_google(\"Smooch Sans\",\"Smooch Sans\")\nshowtext::showtext_auto()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsf_world <- ne_countries(returnclass = \"sf\")\ncoasts <- rnaturalearthhires::coastline10\n\ncoastlines<-  coasts%>%\n  st_as_sf()%>%\n  mutate(scalerank=as.integer(scalerank),\n         scalerank=as.factor(scalerank)\n         )\n\nggplot()+\n  geom_sf(data=sf_world,fill=\"#88398a\",color=NA)+\n  geom_sf(data=coastlines,\n  mapping=aes(color=scalerank),\n          show.legend = T)+\n  scale_color_viridis_d()+\n  coord_sf(crs = 'ESRI:54030',clip = \"off\")+\n  labs(title=\"Coastlines\",color=\"Scalerank\",\n       subtitle=\"#30DayMapChallenge 2023 Day 20 Outdoors\",\n       caption=\"DataSource: {rnaturalearthhires} | Map: @fgazzelloni\")+\n  theme(text=element_text(family=\"Smooch Sans\",size=40,face=\"bold\"),\n        plot.title = element_text(hjust = 0.5),\n        plot.subtitle = element_text(hjust = 0.5),\n        plot.caption  = element_text(hjust = 0.5),\n        plot.background = element_rect(color=\"#bfd0dd\",fill=\"#bfd0dd\"),\n        panel.background = element_rect(color=\"#bfd0dd\",fill=\"#bfd0dd\"),\n        legend.background = element_rect(color=\"#bfd0dd\",fill=\"#bfd0dd\"))\nshowtext::showtext_end()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave(\"day20_outdoors.png\",bg=\"#bfd0dd\",height = 4)\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}