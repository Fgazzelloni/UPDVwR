{
  "hash": "c14b5ea640eb92698dfb3ba612ec23b4",
  "result": {
    "markdown": "---\ntitle: 'Food / Drink'\nsubtitle: 'Welcome to #30DayMapChallenge 2022 day 15'\ndate: '2022-11-15'\nimage: 'https://raw.githubusercontent.com/Fgazzelloni/30DayMapChallenge/master/2022/day15_food_drink/day15_food_drink.png'\nimage-alt: ''\ndescription: ''\noutput: html_document\nexecute: \n   eval: false\n---\n\n\n\n# Overview\n\nMap of `European Countries Foodborne Campylobacter Outbreaks`, data is from `www.efsa.europa.eu`\n\n\n\n\nSource: \n\n- <https://www.r-bloggers.com/2016/10/mapping-efsas-food-consumption-data-with-tmap/>\n\nUpdates:\n\n- <https://rdrr.io/cran/tmaptools/man/deprecated_functions.html>\n\nFoodborne outbreak:\n\n- <https://www.efsa.europa.eu/en/microstrategy/FBO-dashboard>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\ndf <- readxl::read_excel(\"data/FBO_dashboard_2015-2020.xlsx\",\n                         skip = 2)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf1 <- df%>%\n  select(1,contains(\"outbreak\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nnames(df1) <- c(\"country\",unlist(df1[1,2:23]))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf2 <- df1%>%\n  filter(!is.na(country))\n\ndf2%>%head\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf2[is.na(df2)]<-\"0\"\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf3 <- df2%>%\n  select(-country)%>%\n  mutate(across(where(is.character),as.numeric))%>%\n  cbind(country=df2$country)%>%\n  relocate(country)%>%\n  #select(-\"0\") %>%\n  pivot_longer(cols = 2:23,names_to=\"agent\",values_to=\"values\")%>%\n  mutate(agent=case_when(str_detect(agent,\"other|Other|unknwon|Unknown\")~\"Other\",\n                         TRUE~agent)) %>%\n  filter(!agent==\"Other\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tmap)\ndata(\"World\")\n\nEU <- World%>%\n  filter(continent==\"Europe\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(EU)+\n  tm_polygons()+\n  tm_text('name',size = .1,\n          col = \"black\",\n          bg.color = \"white\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsetdiff(df3$country,EU$name)  \nsetdiff(EU$name,df3$country)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf4 <- df3%>%\n  mutate(country=case_when(str_detect(country,\"Bos\")~\"Bosnia and Herz.\",\n                           country==\"Czechia\"~\"Czech Rep.\",\n                           country==\"Republic of North Macedonia\"~\"Macedonia\",\n                           TRUE~country))%>%\n  filter(!country%in%c(\"Cyprus\",\"Malta\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsetdiff(df4$country,EU$name)  \nsetdiff(EU$name,df4$country)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(rgdal)\nlibrary(raster) \n\ndf5 <- df4%>%\n  group_by(country)%>%\n  summarise(agents_mean=mean(values)) %>%\n  ungroup()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\neu1 <- EU%>%\n  filter(!name%in%c(\"Albania\",\"Belarus\",\n                    \"Kosovo\",\"Moldova\",\n                    \"Russia\",\"Slovenia\",\n                    \"Ukraine\"))%>%\n  left_join(df5,by=c(\"name\"=\"country\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(sf)\neu1%>%st_bbox()\n\nall <- World%>%\n  left_join(df5,by=c(\"name\"=\"country\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\ndata(World, metro, rivers, land)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nspread_df <-  df3%>%\n    spread(agent,values)%>%\n    mutate(country=case_when(str_detect(country,\"Bos\")~\"Bosnia and Herz.\",\n                             country==\"Czechia\"~\"Czech Rep.\",\n                             country==\"Republic of North Macedonia\"~\"Macedonia\",\n                             TRUE~country))%>%\n    filter(!country%in%c(\"Cyprus\",\"Malta\"))\n    \n\ndf_map<-  EU%>%\n    filter(!name%in%c(\"Albania\",\"Belarus\",\n                      \"Kosovo\",\"Moldova\",\n                      \"Russia\",\"Slovenia\",\n                      \"Ukraine\"))%>%\n    left_join(spread_df,by=c(\"name\"=\"country\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_map%>%st_bbox()\nbbox <- c(xmin=-34.524754,\n          ymin=20.053389,\n          xmax=31.516092,\n          ymax=80.657144)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmap <- tm_shape(df_map,bbox=bbox) +\n  tm_polygons(col='Campylobacter',\n              title = \"Agents\") +\n  tm_text('iso_a3',\n          fontfamily = \"Roboto Condensed\",\n          root = 2,\n          size = .5,\n          col = \"black\",\n          bg.color = \"white\") +\n  tm_credits(\n    text=\"#30DayMapChallenge 2022 Day 15: Food/drink\\nDataSource: www.efsa.europa.eu | Map: Federica Gazzelloni\",\n    align = \"center\",\n    size=4,\n    fontface = \"bold\",\n    fontfamily = \"Roboto Condensed\",\n    position = \"center\")+\n  tm_scale_bar(text.size = 0.5,width = 0.4,\n               position = c(0.5,0.1))+\n  tm_style(\"natural\", \n           inner.margins = .01)+\n  tm_layout(title=\"European countries\\nFoodborne Campylobacter outbreaks\",\n            main.title.fontfamily=\"Roboto Condensed\",\n            legend.text.size=0.8,\n            legend.text.fontfamily=\"Roboto Condensed\",\n            legend.just = 2,\n            legend.width = 0.4)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_save(map,\"day15_food_drink.png\",width = 6.58,\n          height=7.24\n          ) # Saving 6.58 x 7.24 in image\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}