{
  "hash": "1b8af5d327a202038f2c92d3769fa52d",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: 'Challenge 02 - Plate 12'\nsubtitle: 'Welcome to the #DuboisChallenge2024 week 2'\ndate: '2024-02-12'\nimage: 'https://raw.githubusercontent.com/Fgazzelloni/DuboisChallenge2024_FG/main/2024/challenge02/challenge02.png'\nimage-alt: ''\ndescription: ''\noutput: html_document\nexecute: \n   eval: false\n   message: false\n   warning: false\n   cache: true\n---\n\n\n\n## Overview\n\nSlave and Free Negroes (plate 12), February 12\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n![](https://raw.githubusercontent.com/Fgazzelloni/DuboisChallenge2024_FG/main/2024/challenge02/challenge02.png)\n:::\n::: {.column width=\"50%\"}\n![](https://raw.githubusercontent.com/ajstarks/dubois-data-portraits/master/challenge/2024/challenge02/original-plate-12.jpg)\n:::\n\n:::\n\n### Load Libraries\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(cowplot)\nlibrary(sysfonts)\nlibrary(showtext)\nsysfonts::font_add_google(\"Public Sans\",\"Public Sans\")\n# font_add_google(\"Carter One\", \"Carter One\")\nshowtext::showtext_auto()\nshowtext::showtext_opts(dpi=320)\n```\n:::\n\n\n### Load Data\n\n::: {.cell}\n\n```{.r .cell-code}\nch2 <- read.csv(\"https://raw.githubusercontent.com/ajstarks/dubois-data-portraits/master/challenge/2024/challenge02/data.csv\")\nch2\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nch2_1 <- ch2 %>%\n  arrange(Year)%>%\n  mutate(Year=as.factor(Year),\n         id=rev(row_number()))%>%\n  relocate(id)\nch2_1\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nch2_1%>%\n  # pivot_longer(cols = c(\"Slave\",\"Free\"))%>%\n  ggplot()+\n  geom_col(aes(y=factor(id),x=Slave),fill=\"black\")+\n  geom_col(aes(y=factor(id),x=Free),fill=\"red\")+\n  coord_cartesian(xlim = c(3,100))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nch2_1%>%\n  #pivot_longer(cols = c(\"Slave\",\"Free\"))%>%\n  ggplot()+\n  geom_line(aes(x=factor(id),y=Slave,group=1),color=\"red\")+\n  geom_line(aes(x=factor(id),y=Free,group=1),color=\"black\")+\n  scale_y_reverse()+\n  coord_flip()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nch2_1%>%\n  #pivot_longer(cols = c(\"Slave\",\"Free\"))%>%\n  ggplot()+\n  geom_area(aes(x=(id),y=Slave),fill=\"red\")+\n  geom_area(aes(x=(id),y=Free),fill=\"black\")+\n  scale_y_log10()+\n  coord_flip()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nch2_1\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nch2_2 <- ch2_1%>%\n  mutate(Year=as.integer(Year))%>%\n  mutate(Free_ln=log(Free),\n         Slave_ln=log(Slave))\nch2_2\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nch2_2%>%\n  ggplot()+\n\n  geom_ribbon(mapping=aes(x=Year,y=log(Free),\n                         ymin=pmax(log(Free), -1),\n                         ymax=pmax(log(Free), 5)), \n             fill='black')+\n    geom_ribbon(mapping=aes(x=Year,y=log(Free),\n                         ymin=pmin(log(Free), -1),\n                         ymax=pmin(log(Free), 5)), \n             fill='#b5102d')+\n    geom_line(aes(x=Year,y=log(Free)),\n              linewidth=0.1,\n              color=\"white\")+\n    geom_vline(aes(xintercept=Year),\n             color=\"white\",\n             linewidth=0.1)+\n  scale_y_reverse()+\n  scale_x_reverse()+\n  coord_flip(xlim = c(9,1),ylim = c(2,-0.8))+\n  theme_void()+\n  theme(#plot.background = element_rect(fill=\"#d2394f\"),\n        #panel.background = element_rect(fill=\"#d2394f\"),\n        panel.grid = element_blank())\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave(\"test.png\",bg=\"#dbc8b4\",\n       width = 3,height = 6)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nch2_2\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlength(rep(ch2_2$id,11))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(000)\nd <- tibble(x=rep(rnorm(90,mean=5,sd=20),each=10),\n            y=seq(1.9,2,0.0001112347) #1/98\n            )\n# 0.2/(length(x)-1)\nd%>%\n  ggplot()+\n  geom_line(aes(x=x,y=y))\n  coord_flip()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nch2_2%>%\n  ggplot()+\n\n  geom_ribbon(mapping=aes(x=Year,y=log(Free),\n                         ymin=pmax(log(Free), -1),\n                         ymax=pmax(log(Free), 5)), \n             fill='black')+\n    geom_ribbon(mapping=aes(x=Year,y=log(Free),\n                         ymin=pmin(log(Free), -1),\n                         ymax=pmin(log(Free), 5)), \n             fill='#b5102d')+\n    geom_line(aes(x=Year,y=log(Free)),\n              linewidth=0.1,\n              color=\"white\")+\n    geom_vline(aes(xintercept=Year),\n             color=\"white\",\n             linewidth=0.1)+\n  geom_line(data=d,aes(x=x,y=y),color=\"#dbc8b4\")+\n  geom_ribbon(data=d,mapping=aes(x,y=y,\n                   ymin=pmax(y, -1),\n                   ymax=pmax(y, 5)), \n              fill='#dbc8b4')+\n  scale_y_reverse()+\n  scale_x_reverse()+\n  coord_flip(xlim = c(9,1),ylim = c(2,-0.8))+\n  theme_void()+\n  theme(plot.background = element_rect(fill=\"#dbc8b4\"),\n        panel.background = element_rect(fill=\"#dbc8b4\"),\n        panel.grid = element_blank())\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave(\"test1.png\",bg=\"#dbc8b4\",\n       width = 3,height = 6)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nch2_2$Free_ln\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Define the given numbers corresponding to decades\ngiven_numbers <- ch2_2$Free_ln\n# Function to simulate numbers within a decade\n# Define the number of points to simulate within each decade\nnum_points_per_decade <- 10\n# Initialize a vector to store the simulated numbers\nsimulated_numbers <- numeric()\n# Simulate numbers within each decade\nfor (i in 1:9) {\n  start <- given_numbers[i]\n  end <- given_numbers[i + 1]\n  simulated_within_decade <- rnorm(num_points_per_decade, start, end)\n  simulated_numbers <- c(simulated_numbers, simulated_within_decade)\n}\n\n# Print the simulated numbers\nprint(simulated_numbers)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(000)\nd <- tibble(x=simulated_numbers,\n            y=seq(1.9,2,0.1/(length(x)-1)) #1/98\n            )\n# 0.2/(length(x)-1)\nd%>%\n  ggplot()+\n  geom_line(aes(x=x,y=y))\n  coord_flip()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nch2_2$Free%>%mean;\nch2_2$Slave%>%mean\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(000)\nd <- tibble(x=rep(rnorm(90,mean=5,sd=20),each=10),\n            y=seq(1.9,2,0.0001112347) #1/98\n            )\nx=rep(rnorm(90,mean=5,sd=20),each=10)\ny=seq(1.9,2,0.0001112347)\nf <- approxfun(x, y)\n\n# curve(f(x), 0, 11, col = \"green2\")\n# points(x, y)\n# 0.2/(length(x)-1)\nd$x <- f(x)\nch2_2%>%\n  ggplot()+\n  geom_line(aes(x=Year,y=Free))+\n  geom_line(aes(x=Year,y=log(Free)))\n  coord_flip()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntb <- approx(ch2_2$Free,ch2_2$Year,n=900)\nd2 <- tibble(x=tb$x,y=rnorm(900,mean=2,sd=0.02))\nd2%>%summary()\nd2%>%ggplot()+geom_line(aes(x,y))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nyears <- ch2_1$Year\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nch2_2%>%\n  ggplot()+\n\n  geom_ribbon(mapping=aes(x=Year,y=log(Free),\n                         ymin=pmax(log(Free), -1),\n                         ymax=pmax(log(Free), 5)), \n             fill='black')+\n  geom_ribbon(mapping=aes(x=Year,y=log(Free),\n                       ymin=pmin(log(Free), -1),\n                       ymax=pmin(log(Free), 5)), \n           fill='#b5102d')+\n  geom_line(aes(x=Year,y=log(Free)),\n            linewidth=0.1,\n            color=\"#dbc8b4\")+\n  geom_vline(aes(xintercept=Year),\n           color=\"#dbc8b4\",\n           linewidth=0.3)+\n  geom_ribbon(data=d2,mapping=aes(x=x,y=y,\n                   ymin=pmax(y, -1),\n                   ymax=pmax(y, 5)), \n              fill='#dbc8b4')+\n  geom_point(data=d2%>%filter(x>=1 & x <= 9),\n             aes(x=x,y=y),\n             color=\"black\",\n             shape=\".\")+\n  geom_line(data=d2%>%filter(x>=1 & x <= 9),\n          aes(x=x,y=y),\n          color=\"black\",linewidth=0.2)+\n  # adjust scales to a reverse position\n  scale_y_reverse(position = \"right\",\n                  breaks = 0:2,\n                  labels = paste0(c(\"1%\", \"2%\", \"3%\"), \"\"))+\n  scale_x_reverse(name = \"First Axis\",\n                  position = \"top\",\n                  breaks = 1:9,\n                  expand = expansion(add=-0.5),\n                  labels = paste0(rev(c(\"100%\", \"0.8\", \"0.7\",\"0.9\",\"0.8\",\"1.2\",\"1.7\",\"1.7\",\"1.3%\")), \"\"),\n                  sec.axis = sec_axis(~.*1, \n                                      name=\"Second Axis\",\n                                      breaks = 1:9,\n                                      labels =years))+\n  coord_flip(xlim = c(9.5,0.5),ylim = c(2.1,-0.8),\n             clip = \"off\")+\n  annotate(\"text\", x = 0.55, y = -1.38,\n       label = \"PERCENT\\nOF\\nFREE NEGROES\",\n       size = 1.8,\n       color=alpha(\"#483c32\",alpha = 0.5),\n       #fontface = \"bold\",\n       family =  \"Public Sans\" ) +\n  labs(title = \"SLAVES AND FREE NEGROES.\\n\",\n       caption = \"\\n#DuboisChallenge2024 - Challenge 2 | Federica Gazzelloni\") +\n  theme(text=element_text(family=\"Public Sans\",color=\"#483c32\"),\n        plot.title = element_text(face=\"bold\",hjust = 0.5,size=15,family=\"Public Sans\",color=\"#483c32\"),\n        plot.caption = element_text(face=\"bold\",hjust = 0.5,size=8,\n                                    color=alpha(\"#483c32\",alpha = 0.5)),\n        plot.background = element_rect(fill=\"#dbc8b4\",color=\"#dbc8b4\"),\n        panel.background = element_rect(fill=\"#dbc8b4\",color=\"#dbc8b4\"),\n        panel.grid = element_blank(),\n        axis.title = element_blank(),\n        axis.line.x = element_blank(),\n        axis.line.y = element_blank(),\n        axis.ticks.x.top = element_line(linewidth=0.2,color=\"black\"),\n        axis.ticks.y.right = element_blank(),\n        axis.ticks.y.left = element_blank(),\n        axis.text = element_text(family =  \"Public Sans\",color=alpha(\"#483c32\",alpha = 0.5)),\n        axis.text.y.right = element_text(hjust=0,\n                                         margin = margin(15,15,15,15),family =  \"Public Sans\"),\n        axis.text.y.left = element_text(hjust=0,\n                                         margin = margin(15,15,15,15),family =  \"Public Sans\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave(\"test_approx.png\",bg=\"#dbc8b4\",\n       width = 4,height = 6)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggdraw()+\n  draw_image(\"test_approx.png\",scale = 0.8)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave(\"challenge02.png\",bg=\"#dbc8b4\",\n       width = 4.5,height = 6)\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}