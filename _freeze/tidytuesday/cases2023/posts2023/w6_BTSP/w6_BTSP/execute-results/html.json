{
  "hash": "f2d2a693c38c189b566ca864ea18829b",
  "result": {
    "markdown": "---\ntitle: 'Big Tech Stock Prices'\nsubtitle: 'Welcome to TidyTuesday 2023 week 6'\ndate: '2023-02-07'\nimage: 'w6_BTSP.png'\nimage-alt: ''\ndescription: 'Networks'\noutput: html_document\nexecute: \n   eval: false\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\ntuesdata <- tidytuesdayR::tt_load(2023, week = 06)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbig_tech_stock_prices <- tuesdata$big_tech_stock_prices\nbig_tech_companies <- tuesdata$big_tech_companies\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- big_tech_stock_prices%>%\n  inner_join(big_tech_companies,by=\"stock_symbol\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf%>%head\n```\n:::\n\n\n\nHUMAN THEME\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\n\n# Create example data\nbig_tech_stock_prices <- data.frame(\n  date = seq(as.Date(\"2021-01-01\"), as.Date(\"2021-12-31\"), by = \"day\"),\n  apple = rnorm(365, mean = 140, sd = 10),\n  amazon = rnorm(365, mean = 3200, sd = 100),\n  facebook = rnorm(365, mean = 350, sd = 20),\n  google = rnorm(365, mean = 2500, sd = 50)\n)\n\n# Create ggplot with human theme\nggplot(big_tech_stock_prices, aes(x = date)) +\n  geom_line(aes(y = apple, color = \"Apple\")) +\n  geom_line(aes(y = amazon, color = \"Amazon\")) +\n  geom_line(aes(y = facebook, color = \"Facebook\")) +\n  geom_line(aes(y = google, color = \"Google\")) +\n  scale_color_manual(values = c(\"Apple\" = \"#A9A9A9\", \"Amazon\" = \"#FFA500\", \"Facebook\" = \"#4169E1\", \"Google\" = \"#008000\")) +\n  labs(title = \"Big Tech Stock Prices\", x = \"Date\", y = \"Stock Price\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 20, face = \"bold\", margin = margin(b = 20)),\n    axis.title = element_text(size = 16, face = \"bold\"),\n    axis.text = element_text(size = 14),\n    legend.title = element_blank(),\n    legend.text = element_text(size = 14),\n    legend.position = \"bottom\"\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_companies<- c(\"Apple Inc.\",\"Microsoft Corporation\",\"Netflix, Inc.\", \"Tesla, Inc.\")\n\nlibrary(scales)\ndf %>% \n  filter(company%in%my_companies)%>%\n  select(date,volume,company)%>%\n  group_by(company)%>%\n  mutate(mean=mean(volume,na.rm = TRUE),\n         sd=sd(volume,na.rm = TRUE))%>%\n  ggplot(aes(x = date)) +\n  geom_hline(aes(yintercept=mean,color=company),linewidth=0.3)+\n  geom_line(aes(y = volume, group=company, color=company),\n            linewidth=0.1,key_glyph=\"timeseries\") +\n  scale_y_log10(expand=c(0,0),\n                labels = label_number(scale_cut = cut_short_scale()))+\n  scale_x_date(expand = c(0,0))+\n  scale_color_manual(values = c(\"Apple Inc.\" = \"#0071bc\",\n                                \"Microsoft Corporation\" = \"#FFA500\", \n                                \"Netflix, Inc.\" = \"#fff1e0\", \n                                \"Tesla, Inc.\" = \"#c15a4f\")) +\n  guides(color=guide_legend(nrow = 2))+\n  labs(title = \"Big Tech Stock Prices\", y = \"Stock Price Volume\",\n       subtitle=\"Humans activity - Best Companies Mean Trend\",\n       caption=\"\\nDataSource: #TidyTuesday 2023 week6 Big Tech Stock Prices\\nDataViz: Federica Gazzelloni #30DayChartChallenge 2023 Day8 - humans\\n\") +\n  ggthemes::theme_economist()+\n  theme(text = element_text(family=\"Roboto Condensed\",color=\"#250c5f\"),\n    plot.title = element_text(size = 25, face = \"bold\", margin = margin(b = 20)),\n    plot.background = element_rect(color=\"#89a5b9\",fill=\"#89a5b9\"),\n    panel.background = element_rect(color=\"#89a5b9\",fill=\"#89a5b9\"),\n    axis.title = element_text(size = 16, face = \"bold\"),\n    axis.text = element_text(size = 12),\n    axis.title.x = element_blank(),\n    legend.key.size = unit(15,units = \"pt\"),\n    #legend.key.width = unit(15,units = \"pt\"),\n    legend.title = element_blank(),\n    legend.box.background = element_rect(color=\"#250c5f\",fill=\"#250c5f\"),\n    legend.text = element_text(size = 11,color=\"white\"),\n    legend.position = \"bottom\",\n    panel.grid = element_line(linewidth=0.0),\n    axis.line.y = element_line(),\n    axis.text.y = element_text(hjust=1)\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave(\"w6_BTSP.png\",\n       width = 7,height = 5)\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}