{
  "hash": "92fe752baf1701abed3012d17b64cdc4",
  "result": {
    "markdown": "---\ntitle: 'Alone data'\nsubtitle: 'Welcome to TidyTuesday 2023 week 4'\ndate: '2023-01-24'\nimage: 'https://raw.githubusercontent.com/Fgazzelloni/TidyTuesday/main/data/2023/w4_Alnd/w4_Alnd.png'\ndescription: 'Networks'\noutput: html_document\nexecute: \n   eval: false\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\ntuesdata <- tidytuesdayR::tt_load(2023, week = 04)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsurvivalists <- tuesdata$survivalists\nloadouts <- tuesdata$loadouts\nepisodes <- tuesdata$episodes\nseasons <- tuesdata$seasons\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsurvivalists%>%head\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nepisodes <- episodes%>%\n  select(season,air_date,viewers)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nviewers <- seasons%>%\n  select(lon,lat,location,country,n_survivors,season)%>%\n  inner_join(survivalists,by=c(\"season\",\"country\"))%>%\n  inner_join(episodes,by=c(\"season\"))%>%\n  select(age,n_survivors,viewers,air_date,location,country,city,state)%>%\n  # select(lon,lat,location,country,city,state,\n  #        name,age,gender,profession,n_survivors,season,\n  #        air_date,viewers)%>%\n  distinct()%>%#DataExplorer::profile_missing()\n  drop_na()\nviewers\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(owidR)\n# df <- owidR::owid_covid()\n# save(df,file=\"df.RData\")\nload(\"df.RData\")\ndf_short <- df%>%\n  select(continent,country=location,\n         date,total_cases,median_age,life_expectancy)%>%\n  filter(country==\"Canada\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_short%>%count(country)\nviewers%>%count(country)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nviewers%>%\n  inner_join(df_short%>%filter(country==\"Canada\"),\n             by=c(\"air_date\"=\"date\",\"country\"))%>%\n  select(air_date,n_survivors,viewers,total_cases,median_age,age)%>%\n  #filter(!is.na(total_cases))%>%\n  distinct()%>%\n  count(air_date)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_df <- viewers%>%\n  inner_join(df_short%>%filter(country==\"Canada\"),\n             by=c(\"air_date\"=\"date\",\"country\"))%>%\n  select(n_survivors,viewers,total_cases,median_age,age)%>%\n  distinct() %>%\n  scale()%>%\n  as.data.frame()%>%\n  select(viewers,total_cases)\nmy_df\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nv <- my_df$viewers\nc <- my_df$total_cases\ncor(v,c)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_df%>%\n  ggplot()+\n  geom_density(aes(viewers))+\n  geom_density(aes(total_cases),color=\"red\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggdist)\nlibrary(distributional)\nlibrary(extrafont)\nlibrary(showtext)\nshowtext_auto()\nsysfonts::font_add_google(name=\"Chelsea Market\",\n                          family=\"Chelsea Market\")\n\n\nmy_df%>%\n  pivot_longer(cols = everything(), \n               names_to = \"type\" ,values_to = \"values\")%>%\n  mutate(type=ifelse(type==\"viewers\",\n                     \"TV series Alone - Viewers\",\n                     \"OWId Covid19 Total Cases in Canada\"))%>%\n  ggplot(aes(y=type,x=values,\n             #xdist=dist_normal(values, sd(values)),\n         #xdist = dist_normal(0, 1),\n         layout = \"weave\",\n         fill = stat(x > 0)))+\n  stat_dots(aes(xdist = dist_normal(0, 1)))+\n  ggnewscale::new_scale_fill()+\n  stat_dist_slabinterval(aes(x=values),alpha=0.8)+\n  geom_vline(xintercept = 0, alpha = 0.25) +\n   tvthemes::scale_fill_hilda()+\n  labs(title=\"Canada: TV Series ALONE Viewers and OWId Covid19 Total Cases\",\n       subtitle=\"Distributions of standardized values\",\n       caption = \"Correlation doesn't imply causation! These are 11 weeks of Covid-19 (2020-06-11 - 2020-08-20) and ALONE Viewers\\nDataSource: #TidyTuesday 2023 week4 Alone data\\nDataViz: Federica Gazzelloni #30DayChartChallenge 2023 Day6 - OWId\\n\")+\n  tvthemes::theme_avatar(text.font = \"Chelsea Market\")+\n  theme(text=element_text(),\n        plot.title = element_text(hjust = 1),\n        plot.caption = element_text(hjust = 1),\n        legend.position = \"none\",\n        axis.title = element_blank())\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_df%>%\n  mutate(day=seq_along(1:11))%>%\n  pivot_longer(cols = c(\"viewers\",\"total_cases\"), \n               names_to = \"type\" ,values_to = \"values\")%>%\n  mutate(type=ifelse(type==\"viewers\",\n                     \"TV series Alone - Viewers\",\n                     \"OWId Covid19 Total Cases in Canada\"))%>%\n  ggplot(aes(x=day,y=values,group=type,color=type))+\n    geom_line()+\n  geom_smooth(method = \"lm\",se=F)+\n  tvthemes::scale_color_hilda()+\n  theme_bw()+\n  theme(legend.position = \"top\")\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}