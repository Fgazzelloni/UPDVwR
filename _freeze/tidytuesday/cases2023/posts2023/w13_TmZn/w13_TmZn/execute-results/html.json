{
  "hash": "deec228c18a275c660e8a67f9e9dc772",
  "result": {
    "markdown": "---\ntitle: 'Time Zones'\nsubtitle: 'Welcome to TidyTuesday 2023 week 13'\ndate: '2023-03-28'\nimage: 'w13_TmZn.png'\nimage-alt: ''\ndescription: 'Networks'\noutput: html_document\nexecute: \n   eval: false\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\ntuesdata <- tidytuesdayR::tt_load(2023, week = 13)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntransitions<- tuesdata$transitions\ntimezones<- tuesdata$timezones\ntimezone_countries<- tuesdata$timezone_countries\ncountries<- tuesdata$countries\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntransitions%>%head\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntimezones%>%head\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nworld<- map_data(\"world\")\n\ntimezones%>%\n  ggplot(aes(longitude,latitude))+\n  geom_rect(xmin=0,xmax=Inf,ymin=-Inf,ymax=Inf,fill=\"#fff1e0\")+\n  geom_rect(xmin=-Inf,xmax=0,ymin=-Inf,ymax=Inf,fill=\"#bfd0dd\")+\n  geom_rect(xmin=0,xmax=Inf,ymin=-Inf,ymax=0,fill=\"#bfd0dd\")+\n  geom_rect(xmin=-Inf,xmax=0,ymin=-Inf,ymax=0,fill=\"#fff1e0\")+\n  geom_polygon(data=world,mapping=aes(long,lat,group=group),fill=NA,color=\"grey\")+\n  geom_point(shape=21,stroke=0.3,fill=\"#7b9aca\")+\n  geom_vline(xintercept = 0)+\n  geom_hline(yintercept = 0)+\n  coord_sf()+\n  labs(title=\"Positive & Negative Coordinates\",\n       subtitle = \"Time zone locations\",\n       caption=\"DataSource: #TidyTuesday Week13: Time Zones - #30DayChartChallenge Day15: positive/negative\\nDataViz: Federica Gazzelloni\")+\n  ggthemes::theme_map()+\n  theme(plot.background = element_rect(color=\"#7b9aca\",fill=\"#7b9aca\"))\n```\n:::\n\n\n\n\n## Bonne Projection\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(sf)\nprojection_bonne <- c(\"+proj=bonne +lat_1=10\")\n\nworld_graticule <- sf::st_graticule(lon= seq(-180,180, 15),\n                                    lat = seq(-90,90, 7.5),\n                                    ndiscr = 5000,\n                                    margin = 0.00000000001) %>%\n  sf::st_transform(projection_bonne)\n\n\nworld_pol <- rnaturalearth::ne_countries(returnclass = \"sf\")\n\nDT_sf = st_as_sf(timezones, coords = c(\"longitude\", \"latitude\"), \n                 crs = 4326, agr = \"constant\")\n\nggplot()+\n  geom_sf(data = world_graticule)+\n  geom_sf(data = world_pol)+\n  geom_sf(data=DT_sf)+\n  coord_sf()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# input_coord <- st_point(c(<longitude>, <latitude>))\nproj_mollweide <- \"+proj=moll\"\noutput_coord <- st_transform(DT_sf, crs = proj_mollweide)\n```\n:::\n\n\n## Mollweide Projection\n\n::: {.cell}\n\n```{.r .cell-code}\n# set the fonts\nlibrary(showtext)\nlibrary(sysfonts)\nlibrary(extrafont)\nshowtext::showtext_auto()\nshowtext::showtext_opts(dpi=320)\nfont_add_google(name=\"Patrick Hand\",\n                family=\"Patrick Hand\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(output_coord)+\n  geom_rect(xmin=0,xmax=Inf,ymin=-Inf,ymax=Inf,fill=\"#fff1e0\")+\n  geom_rect(xmin=-Inf,xmax=0,ymin=-Inf,ymax=Inf,fill=\"#bfd0dd\")+\n  geom_rect(xmin=0,xmax=Inf,ymin=-Inf,ymax=0,fill=\"#bfd0dd\")+\n  geom_rect(xmin=-Inf,xmax=0,ymin=-Inf,ymax=0,fill=\"#fff1e0\")+\n  geom_sf(data = world_pol,fill=NA,color=\"grey40\")+\n  geom_sf(shape=21,stroke=0.3,fill=\"#7b9aca\")+\n  geom_vline(xintercept = 0)+\n  geom_hline(yintercept = 0)+\n  #coord_map(projection = \"mollweide\")+\n  labs(title=\"Positive & Negative Coordinates\",\n       subtitle = \"Time zone locations\",\n       caption=\"DataSource: #TidyTuesday Week13: Time Zones - #30DayChartChallenge Day15: positive/negative\\nDataViz: Federica Gazzelloni\")+\n  ggthemes::theme_map()+\n  theme(text=element_text(family=\"Patrick Hand\"),\n        plot.title = element_text(size=30),\n        plot.caption = element_text(size=10),\n        plot.background = element_rect(color=\"#7b9aca\",fill=\"#7b9aca\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave(\"p.png\",\n       width = 7,height = 5)\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}