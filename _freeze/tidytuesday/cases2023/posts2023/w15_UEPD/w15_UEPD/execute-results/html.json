{
  "hash": "f7468cc95c46f0dd7940f64dc2e189e5",
  "result": {
    "markdown": "---\ntitle: 'US Egg Production Data'\nsubtitle: 'Welcome to TidyTuesday 2023 week 15'\ndate: '2023-04-11'\nimage: 'w15_UEPD.png'\nimage-alt: ''\ndescription: 'Networks'\noutput: html_document\nexecute: \n   eval: false\n---\n\n\n> To cite Federica's work, please use: Gazzelloni F., 2023 Data Visualization US Egg Production down/upwards\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\ntuesdata <- tidytuesdayR::tt_load(2023, week = 15)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\neggs <- tuesdata$`egg-production`\ncages <- tuesdata$`cage-free-percentages`\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\neggs%>%\n  inner_join(cages,by=\"observed_month\")%>%\n  distinct() %>%\n  mutate(ymon=zoo::as.yearmon(observed_month),\n         .after=observed_month)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- eggs %>%\n  inner_join(cages, by = \"observed_month\") %>%\n  mutate(ymon = zoo::as.yearmon(observed_month),\n         .after = observed_month) %>%\n  select(-source.x, -source.y, -observed_month) %>%\n  group_by(ymon, prod_process) %>%\n  mutate(pct_hens = round(n_hens / sum(n_hens) * 100, 2),\n         pct_eggs = round(n_eggs / sum(n_eggs) * 100, 2)) %>%\n  ungroup() %>%\n  arrange(ymon)\n\ndf%>%head\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>%\n  ggplot(aes(ymon,n_hens))+\n  geom_line(aes(group=prod_type))+\n  facet_wrap(~prod_process,scales = \"free\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>%\n  filter(!prod_process==\"all\")%>%\n  ggplot()+\n  geom_line(aes(ymon,n_hens,group=prod_type),\n            lineend = \"butt\",\n            arrow = arrow(length = unit(0.05,\"inches\"),\n                          type=\"closed\"))+  \n  facet_wrap(~prod_process,scales = \"free_y\")+\n  scale_y_log10()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>%\n  filter(!prod_process==\"all\")%>%\n  ggplot(aes(x=ymon))+\n  geom_line(aes(y=n_hens/sum(n_hens)*100,\n                group=prod_type),\n            lineend = \"butt\",\n            arrow = arrow(length = unit(0.05,\"inches\"),\n                          type=\"closed\"))+\n  geom_line(aes(y=n_eggs/sum(n_eggs)*100,\n                group=prod_type),\n            lineend = \"butt\",\n            arrow = arrow(length = unit(0.05,\"inches\"),\n                          type=\"closed\"))+\n  facet_wrap(~prod_process,scales = \"free_y\")+\n  scale_y_continuous(labels = scales::label_percent(decimal.mark = \",\",suffix = \" %\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>%\n  filter(!prod_process==\"all\")%>%\n  ggplot()+\n  geom_line(aes(ymon,percent_eggs,group=prod_type),\n            lineend = \"butt\",\n            arrow = arrow(length = unit(0.05,\"inches\"),\n                          type=\"closed\"))+  \n  geom_line(aes(ymon,percent_hens,group=prod_type),\n            lineend = \"butt\",\n            arrow = arrow(length = unit(0.05,\"inches\"),\n                          type=\"closed\"))\n```\n:::\n\n\n\n\n### Fill missing values\n\nyou can fill in the data with two approaches:\n\n- Up - While filling the missing values, you have to specify the direction of filling of values. If you choose Up, then the filling process will be bottom-up.\n- Down - In this method, you have to set the direction of filling to down.\n\nsource: [https://www.digitalocean.com/community/tutorials/fill-missing-values-in-tidyr-r](https://www.digitalocean.com/community/tutorials/fill-missing-values-in-tidyr-r)\n\n\nUse `.direction = \"downup\"` to fill missing values in both directions\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>%\n  filter(!prod_process==\"all\")%>%\n  tidyr::fill(percent_eggs, .direction = 'downup') %>% # View()\n  mutate(percent_eggs=ifelse(is.na(percent_eggs),25,percent_eggs))%>% #View\n  ggplot()+\n  geom_line(aes(ymon,percent_eggs,group=prod_type),\n            color=\"red\",\n            lineend = \"butt\",\n            arrow = arrow(length = unit(0.05,\"inches\"),\n                          type=\"closed\"))+  \n  geom_line(aes(ymon,percent_hens,group=prod_type),\n            lineend = \"butt\",\n            arrow = arrow(length = unit(0.05,\"inches\"),\n                          type=\"closed\"))+\n  ggthemes::theme_fivethirtyeight()\n```\n:::\n\nAug 2016 - Feb 2021\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>%\n  filter(!prod_process==\"all\")%>% # count(ymon)\n  tidyr::fill(percent_eggs, .direction = 'downup') %>% # View()\n  mutate(percent_eggs=ifelse(is.na(percent_eggs),25,percent_eggs))%>% #View\n  pivot_longer(cols = c(\"percent_eggs\",\"percent_hens\"))%>%\n  mutate(name=ifelse(name==\"percent_eggs\",\"eggs (%)\",\"hens (%)\")) %>%\n  ggplot()+\n  geom_line(aes(ymon,value,group=name,color=name),\n            linewidth= 1,\n            arrow = arrow(length = unit(0.1,\"inches\"),\n                          angle = 30,\n                          type=\"closed\"))+ \n  labs(title=\"US Egg Production Aug 2016 - Feb 2021\",\n       subtitle=\"Hens & Eggs down/upwards\",\n       color=\"\",\n       caption=\"DataSource: #TidyTuesday Week 15 US Egg Production\\n #30DayChartChallenge Day 21 down/upwards | DataViz: Federica Gazzelloni\")+\n  ggthemes::scale_color_fivethirtyeight()+\n  ggthemes::theme_fivethirtyeight()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave(\"w15_UEPD.png\",width = 7,height = 5,bg=\"white\")\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}