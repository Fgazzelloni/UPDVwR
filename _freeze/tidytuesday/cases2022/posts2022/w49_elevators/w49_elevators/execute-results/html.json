{
  "hash": "da0b832de589e5dcb2786cec6d2763d5",
  "result": {
    "markdown": "---\ntitle: 'Elevators'\nsubtitle: 'Welcome to TidyTuesday 2022 week 49'\ndate: '2022-12-06'\nimage: \"w49_elevators.png\"\nimage-alt: ''\ndescription: 'Networks'\noutput: html_document\nexecute: \n   eval: false\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntuesdata <- tidytuesdayR::tt_load('2022-12-06')\nelevators <- tuesdata$elevators\nelevators%>%names\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nelevators%>%DataExplorer::profile_missing()%>%\n  mutate(pct_missing=round(pct_missing,2))%>%\n  arrange(pct_missing)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nelevators1%>%head\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nelevators1 <- elevators%>%\n  janitor::clean_names()%>%\n  mutate(date=as.Date(as.character(dv_status_date), format='%Y%m%d',tz=\"UTC\")) %>%\n  select(zip_code,borough,device_type,latitude,longitude,\n         date)%>% # dim 76088     8\n  na.omit() %>% # dim 66789     8\n  mutate(zip_code=as.numeric(sub(\"\\\\D*(\\\\d{5}).*\", \"\\\\1\", zip_code)))%>%\n  arrange(date)%>%\n  filter(!zip_code==0 & !zip_code== 99999,\n         longitude> -75)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nelevators1 %>%\n  ggplot(aes(longitude,latitude)) +\n  geom_point(aes(color=factor(device_type)))+\n  coord_equal()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggnewscale)\nggnewscale::new_scale_color()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nusdata::county_complete%>%names\nlibrary(zipcodeR)\nzipcodeR::zip_code_db%>%head\nelevators1%>%count(zip_code)%>%dim # 185\nzipcodeR::zip_code_db%>%\n  filter(zipcode%in%elevators1$zip_code)\nzipcodeR::geocode_zip(elevators1$zip_code) # 183\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nus_county_map <- map_data(\"county\")\n\nggplot()+\n  geom_polygon(data=us_county_map,aes(x=long,y=lat,group = group),\n               fill=NA,color = \"lightblue\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nus_county_map%>%head\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nus_county_map_centroids <- us_county_map%>%\n  group_by(subregion) %>%\n  mutate(long=mean(range(long)),lat=mean(range(lat)))%>%\n  ungroup()%>%\n  select(-order,-region)%>%\n  distinct()\nus_county_map_centroids\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nelevators1_centroids <- elevators1%>%\n  group_by(borough) %>%\n  mutate(long=mean(range(longitude)),lat=mean(range(latitude)))%>%\n  ungroup()%>%\n  select(borough,zip_code,long,lat)%>%\n  distinct()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nelevators1 %>%\n  ggplot(aes(longitude,latitude)) +\n   geom_polygon(data = us_county_map,\n                aes(x=long,y=lat,group = group,fill=subregion),\n                color = \"lightblue\",alpha=0.1)+\n  geom_point(aes(color=factor(borough)),\n             shape=21,stroke=0.1,size=0.5)+\n  scale_color_discrete()+\n  guides(color=guide_legend(title=\"Borough\"),fill=\"none\")+\n  ggnewscale::new_scale_color()+\n  geom_point(aes(color=zip_code),shape=\".\",alpha=0.2) +\n  scale_color_continuous(type = \"viridis\")+\n  geom_text(data = elevators1_centroids,\n             aes(x=long,y=lat,label=borough)) +\n  coord_map(xlim = range(elevators1$longitude),ylim = range(elevators1$latitude))+\n  labs(title = \"\",\n       subtitle = \"\",\n       color=c(\"zip code\",\"Borough\"))+\n  ggthemes::theme_map()+\n  theme(legend.position = c(-0.2,0),\n        legend.background = element_blank())+\n  facet_wrap(vars(device_type))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nelevators1 %>% # count(device_type)\n  filter(device_type==\"Passenger Elevator (P)\") %>%\n  ggplot(aes(longitude,latitude)) +\n   geom_polygon(data = us_county_map,\n                aes(x=long,y=lat,group = group,fill=subregion),\n                color = \"lightblue\",alpha=0.1)+\n  geom_point(aes(color=factor(borough)),\n             shape=21,stroke=0.1,size=0.5)+\n  scale_color_discrete()+\n  guides(color=guide_legend(title=\"Borough\"),fill=\"none\")+\n  ggnewscale::new_scale_color()+\n  geom_point(aes(color=zip_code),shape=\".\",alpha=0.2) +\n  scale_color_continuous(type = \"viridis\")+\n  geom_point(data = elevators1 %>% filter(device_type==\"Handicap Lift (H)\"),\n             aes(longitude,latitude),color=\"red\",size=0.3)+\n  geom_text(data = elevators1_centroids,\n             aes(x=long,y=lat,label=borough),\n            color=\"white\",family=\"Roboto Condensed\") +\n  coord_map(xlim = range(elevators1$longitude),ylim = range(elevators1$latitude))+\n  labs(title = \"New York City Handicap Lifts availability\",\n       subtitle = \"Registered Passenger Elevator devices from the Department of Buildings 2015\",\n       caption=\"DataSource: #TidyTuesday 2022 week49 Elevators by @emilhvitfeldt | Graphics: Federica Gazzelloni\",\n       color=c(\"zip code\",\"Borough\"))+\n  ggthemes::theme_map()+\n  theme(text = element_text(color=\"white\",family=\"Roboto Condensed\"),\n        plot.title = element_text(size=14),\n        plot.caption = element_text(size=10.5),\n        legend.position = \"none\", # c(-0.2,0),\n        legend.background = element_blank()) +\n  annotate(\"text\", \n           x = -74, y = 40.52, \n           label = \"How to read it:\\nPassenger Elevators are colored by borough and zip code,\\nwhile red dots indicate the presence of Handicap Lifts\",color=\"white\",size=3,family=\"Roboto Condensed\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave(\"w49_elevators.png\",bg=\"black\")\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}