{
  "hash": "6bccceae71e671d03704b6f10ad116f8",
  "result": {
    "markdown": "---\ntitle: 'Web page metrics'\nsubtitle: 'Welcome to TidyTuesday 2022 week 46'\ndate: '2022-11-15'\nimage: \"w46_web_page_metrics.png\"\nimage-alt: ''\ndescription: 'Networks'\noutput: html_document\nexecute: \n   eval: false\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n# install.packages(\"ggsci\")\nlibrary(ggsci)\nlibrary(ggnewscale)\n# ggnewscale::new_scale_fill()\nlibrary(ggtext)\nlibrary(lubridate)\n\n# set the fonts\nlibrary(showtext)\nlibrary(sysfonts)\nlibrary(extrafont)\nshowtext::showtext_auto()\nshowtext::showtext_opts(dpi=320)\nfont_add_google(name=\"Roboto Condensed\",\n                family=\"Roboto Condensed\")  \nfont_add_google(name=\"Zen Dots\",\n                family=\"Zen Dots\") \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntheme_set(theme_void(base_family = \"Roboto Condensed\", base_size = 9))\ntheme_update(\n  axis.text.x = element_text(color = \"grey60\", margin = margin(t = 4)),\n  axis.ticks.x = element_line(color = \"grey60\"),\n  axis.ticks.length.x = unit(.4, \"lines\"),\n  panel.spacing = unit(1.5, \"cm\"),\n  legend.position = \"none\",\n  panel.grid = element_blank(),\n  # t,r,b,l\n  plot.margin = margin(5, 70, 5, 20),\n  plot.background = element_rect(fill = \"grey98\", color = \"grey98\"),\n  plot.title = element_text(family = \"Zen Dots\",size=14),\n  plot.caption = element_text(family = \"Roboto Condensed\", color = \"grey60\", \n                              size = 8, margin = margin(t = 30, r = 50)),\n  strip.text = element_text(family = \"Zen Dots\")\n)\n```\n:::\n\n::: {.cell paged.print='false'}\n\n```{.r .cell-code}\n# image_alt <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-11-15/image_alt.csv')\n# color_contrast <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-11-15/color_contrast.csv')\n# ally_scores <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-11-15/ally_scores.csv')\nbytes_total <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-11-15/bytes_total.csv')\n\nspeed_index <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-11-15/speed_index.csv')\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbytes_total%>%head\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nspeed_index%>%head\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncenter <- function(x) {\n  (x-min(x))/(max(x)-min(x))\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- speed_index %>%\n  inner_join(bytes_total,by=c(\"client\",\"date\",\"timestamp\")) %>%\n  select(-timestamp,-measure.x,-measure.y) %>%\n  mutate(date= ymd(date),\n         ym=zoo::as.yearmon(date),.after=date) %>%\n  group_by(client) %>%\n  arrange(client,date) %>%\n  ungroup() %>%\n  group_by(ym) %>%\n  mutate(speed_ym=sum(p50.x),\n         bytes_ym=sum(p50.y),.after=ym) %>%\n  ungroup() %>%\n  pivot_longer(cols = c(\"p10.x\",\"p25.x\",\"p50.x\",\"p75.x\",\"p90.x\"),names_to=\"sp_quantiles\",values_to = \"speed\") %>%\n  pivot_longer(cols = c(\"p10.y\",\"p25.y\",\"p50.y\",\"p75.y\",\"p90.y\"),names_to=\"by_quantiles\",values_to = \"bytes\") %>%\n  mutate(sp_quantiles=gsub(\".x\",\"\",sp_quantiles),\n         by_quantiles=gsub(\".y\",\"\",by_quantiles)) %>%\n  distinct() %>%\n  mutate(speed_ctr=center(speed),\n         bytes_ctr=center(bytes),\n         alpha= center(speed_ym),\n         bytes_seconds=bytes/speed)\n\n\ndf\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlabels <- df %>% \n  filter(date==max(date)) %>%\n  select(client,date,by_quantiles,bytes, bytes_ctr,speed,speed_ctr) %>%\n  group_by(by_quantiles,date,client) %>%\n  summarize(avg_bytes=mean(bytes),\n         avg_speed=mean(speed),\n         avg_bytes_ctr=mean(bytes_ctr),\n         avg_speed_ctr=mean(speed_ctr),.groups = \"drop\") %>%\n  ungroup() %>%\n  distinct() %>%\n  mutate(bts_sec=round(avg_bytes/avg_speed,2),\n         by_quantiles=paste0(gsub(\"p\",\"\",by_quantiles),\"%\"))\n\nlabels\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(df$alpha)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>%\n  ggplot(aes(x = date)) +\n  geom_area(aes(y = bytes_ctr,\n                group=by_quantiles,\n                alpha=speed_ctr,\n                color=by_quantiles,\n                fill=by_quantiles)) +\n  ggsci::scale_fill_futurama() +\n  ggsci::scale_color_futurama() +\n  geom_richtext(data = labels,\n                aes(x = date, y = avg_bytes_ctr, group = by_quantiles,\n                    label = glue::glue(\"<b style='font-size:7.5pt;'>{by_quantiles}</b><b style='font-size:6pt;'> {round(bts_sec, 2)} Bps<br>\"),\n                    color = by_quantiles,# nudge_x = 1,\n                    hjust = 0.05,\n                    vjust = 0.7),\n                inherit.aes = FALSE,\n                position = \"stack\",\n                family = \"Roboto Condensed\",\n                size = 2.3,\n                label.colour = NA,\n                fill = NA) +\n  facet_wrap(vars(client),\n             labeller = labeller(client=c(\"desktop\"=\"Desktop\",\"mobile\"=\"Mobile\"))) +\n  scale_alpha(range = c(.5, 0.8)) +\n  scale_x_date(date_labels = \"%Y\",\n               date_breaks = \"1 year\",\n               expand = c(0,0)) +\n  scale_y_continuous(expand = c(0,0)) +\n  coord_cartesian(clip = \"off\") +\n  guides(alpha=\"none\",color=\"none\",fill=\"none\") +\n  labs(title=\"Speed Index\\n\\n\",\n       #subtitle=\"Desktop vs Mobile Bps\",\n       caption=\"Data provides informations about median values of bytes loaded per second by type of device used\\n#TidyTuesday 2022 week 46 | Data: Web Page metrics by httparchive.org | Viz: Federica Gazzelloni\") \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave(\"w46_web_page_metrics.png\",\n       dpi=300,\n       width = 9,height = 6)\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}