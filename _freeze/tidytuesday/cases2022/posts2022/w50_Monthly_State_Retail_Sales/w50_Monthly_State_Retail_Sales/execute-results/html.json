{
  "hash": "1ff92cf5df5e701cb3447a248591ff26",
  "result": {
    "markdown": "---\ntitle: 'Monthly State Retail Sales'\nsubtitle: 'Welcome to #TidyTuesday 2022 day 50'\ndate: '2022-12-13'\nimage: 'https://raw.githubusercontent.com/Fgazzelloni/TidyTuesday/main/data/2022/w50_retail_sales/w50_retail_sales.png'\nimage-alt: ''\ndescription: 'Networks'\noutput: html_document\nexecute: \n   eval: false\n---\n\n\n\n\nLoad libraries\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(fuzzyjoin)\nlibrary(ggstream)\nlibrary(colorspace)\n```\n:::\n\n\nSet the theme\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntheme_set(theme_minimal(base_family = \"Roboto Condensed\",\n                        base_size = 12))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntheme_update(\n  plot.title = element_text(\n    size = 20,\n    face = \"bold\",\n    hjust = .5,\n    margin = margin(10, 0, 30, 0)\n  ),\n  plot.caption = element_text(\n    size = 9,\n    color = \"grey40\",\n    hjust = .5,\n    margin = margin(20, 0, 5, 0)\n  ),\n  axis.text.y = element_blank(),\n  axis.title = element_blank(),\n  plot.background = element_rect(fill = \"grey88\", color = NA),\n  panel.background = element_rect(fill = NA, color = NA),\n  panel.grid = element_blank(),\n  panel.spacing.y = unit(0, \"lines\"),\n  strip.text.y = element_text(angle = 0),\n  legend.position = \"bottom\",\n  legend.text = element_text(size = 9, color = \"grey40\"),\n  legend.box.margin = margin(t = 30),\n  legend.background = element_rect(\n    color = \"grey40\",\n    linewidth = .3,\n    fill = \"grey95\"\n  ),\n  legend.key.height = unit(.25, \"lines\"),\n  legend.key.width = unit(2.5, \"lines\"),\n  plot.margin = margin(rep(20, 4))\n)\n```\n:::\n\n\n\nAnd the color palette\n\n::: {.cell}\n\n```{.r .cell-code}\npal <- c(\"#FFB400\",\n         \"#C20008\",\n         \"#13AFEF\",\n         \"#8E038E\")\n```\n:::\n\n\n\nLoad the data\n\n::: {.cell}\n\n```{.r .cell-code}\ntuesdata <- tidytuesdayR::tt_load(2022, week = 50)\ncoverage_codes <- tuesdata$coverage_codes\nstate_retail <- tuesdata$state_retail\n```\n:::\n\n\nAdd the states' names\n\n::: {.cell}\n\n```{.r .cell-code}\nfipcodes <- tigris::fips_codes %>%\n  select(state, state_name)\n```\n:::\n\n\nJoin all sets\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_df <- state_retail %>%\n  left_join(fipcodes, by = c(\"state_abbr\" = \"state\")) %>%\n  mutate(state_name = ifelse(state_abbr == \"USA\", \"USA\", state_name)) %>%\n  distinct() %>%\n  merge(coverage_codes, by = \"coverage_code\") %>%\n  arrange()\n\nmy_df %>% head\n```\n:::\n\n\n\nData wrangling\n  \n\n::: {.cell}\n\n```{.r .cell-code}\nmy_df1 <- my_df %>%\n  select(-naics) %>%\n  mutate(\n    coverage = case_when(\n      coverage == \"non-imputed coverage is greater than or equal to 10% and less than 25% of the state/NAICS total\" ~\n        \"greater than or equal 10% and less than 25% of the state/NAICS total\",\n      coverage == \"non-imputed coverage is greater than or equal to 25% and less than 50% of the state/NAICS total\" ~\n        \"greater than or equal to 25% and less than 50% of the state/NAICS total\",\n      coverage == \"non-imputed coverage is greater than or equal to 50% of the state/NAICS total.\" ~\n        \"greater than or equal to 50% of the state/NAICS total\",\n      coverage == \"non-imputed coverage is less than 10% of the state/NAICS total.\" ~\n        \"less than 10% of the state/NAICS total\",\n      TRUE ~ coverage\n    ),\n    month = as.character(month),\n    year = zoo::as.yearmon(paste0(year, \"-\", month)),\n    change_yoy = ifelse(change_yoy == \"S\", 0, change_yoy),\n    change_yoy_se = ifelse(change_yoy_se == \"S\", 0, change_yoy_se),\n    change_yoy = as.numeric(change_yoy),\n    change_yoy_se = as.numeric(change_yoy_se),\n    coverage = as.factor(coverage),\n    coverage = paste(coverage_code, \"-\", coverage)\n  ) %>%\n  filter(state_abbr %in% c(\"USA\", \"PA\", \"MD\", \"MT\")) %>%\n  filter(!coverage_code == \"S\") %>%\n  group_by(state_name, coverage, year) %>%\n  summarise_if(is.numeric, sum, na.rm = TRUE) %>%\n  mutate(change_yoy = scale(change_yoy, center = FALSE)) %>%\n  ungroup() %>%\n  mutate(year = as.POSIXct(year),\n         year = as.Date(year))\n```\n:::\n\n\n\nMake the plot\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_df1 %>%\n  ggplot(aes(\n    x = year,\n    y = change_yoy,\n    color = coverage,\n    fill = coverage\n  )) +\n  geom_stream(\n    geom = \"contour\",\n    color = \"white\",\n    linewidth = 1.25,\n    bw = .45 # Controls smoothness\n  ) +\n  geom_stream(geom = \"polygon\",\n              bw = .45,\n              linewidth = 0.2) +\n  facet_grid(state_name ~ .,\n             scales = \"free_y\",\n             space = \"free\") +\n  scale_y_continuous(trans = scales::modulus_trans(0.1, 1)) +\n  scale_x_date(date_breaks = \"6 months\",\n               date_labels = \"%b-%Y\",\n               expand = c(0, 0)) +\n  scale_color_manual(expand = c(0, 0),\n                     values = pal,\n                     guide = \"none\") +\n  scale_fill_manual(values = pal,\n                    name = NULL) +\n  labs(title = \"Total Year-Over-Year percent change\\nin monthly retail sales value\",\n       subtitle = \"North American Industry Classification System (NAICS) top YoY states\",\n       caption = \"DataSource: #TidyTuesday 2022 Week50 | Monthly State Retail Sales | DataViz: Fgazzelloni\") +\n  theme(legend.direction = \"vertical\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave(\"w50_retail_sales.png\")\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}