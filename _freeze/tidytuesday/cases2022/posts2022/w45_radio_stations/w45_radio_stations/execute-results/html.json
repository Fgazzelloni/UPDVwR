{
  "hash": "d5add40d7b822ce222c8e5c9162acddf",
  "result": {
    "markdown": "---\ntitle: 'Radio Stations'\nsubtitle: 'Welcome to TidyTuesday 2022 week 45'\ndate: '2022-11-08'\nimage: \"w45_radio_stations.png\"\nimage-alt: ''\ndescription: 'Networks'\noutput: html_document\nexecute: \n   eval: false\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n# unzip(\"data/FM_service_contour_current.zip\")\n```\n:::\n\nSource of data: https://www.fcc.gov/media/radio/fm-service-contour-data-points\n\nthis contour data is only generated once for each application ID number\nuse https://www.fcc.gov/media/radio/fm-query to associate specific service contour records with the proper station or application data, match the application ID number or LMS application ID the record with the corresponding data in the LMS database. \n\n::: {.cell}\n\n```{.r .cell-code}\nraw_contour <- read_delim(\n  \"data/FM_service_contour_current.txt\",\n  delim = \"|\"\n)\n# save(raw_contour,file=\"data/raw_contour.RData\")\n# load(\"data/raw_contour.RData\")\n\nraw_contour%>%names\n#  [1] \"application_id\"     \"service\"           \n#  [3] \"lms_application_id\" \"dts_site_number\"   \n#  [5] \"transmitter_site\" \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nconv_contour <- raw_contour |>\n  select(-last_col()) |>\n  set_names(nm = c(\n    \"application_id\", \"service\", \"lms_application_id\", \"dts_site_number\", \"transmitter_site\",\n    glue::glue(\"deg_{0:360}\")\n  ))\n\n# save(conv_contour,file= \"data/conv_contour.RData\")\n\nlng_lat <- conv_contour |>\n  separate(\n    transmitter_site, \n    into = c(\"site_lat\", \"site_long\"), \n    sep = \" ,\")\n\n# save(lng_lat,file= \"data/lng_lat.RData\")\nload(\"data/lng_lat.RData\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlng_lat%>%count(site_lat,site_long,sort=T)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_coords <- lng_lat%>%\n  select(-dts_site_number) %>%\n  distinct() %>%\n  drop_na() %>%\n  mutate_all(trimws)%>%\n  mutate(application_id=as.numeric(application_id),\n         site_lat=as.numeric(site_lat),\n         site_long=as.numeric(site_long))\n\ndf_coords %>%count(service)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_coords1 <- df_coords %>%\n  as.data.frame() %>%\n  #slice(1:30) %>%\n  arrange(service) %>%\n  filter(service==\"FM\") \n\ndf_coords1%>%head()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(sf) # spatiotemporal\nworld <- sf::st_as_sf(maps::map(\"world\", plot = FALSE, fill = TRUE))\nstates <- sf::st_as_sf(maps::map(\"state\", plot = FALSE, fill = TRUE))\nstates\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_coords1 %>%\n  st_as_sf(coords=c(4,3),crs=4326)%>%\n  st_bbox()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(world) +\n  geom_sf(fill=NA) +\n  geom_point(data = df_coords1,\n             mapping = aes(site_long,site_lat),\n             shape=\".\",color=\"red\",\n             inherit.aes = F) +\n  coord_sf(xlim = c(-171.73031,-25),ylim = c(10,71.29194))+\n  theme_classic() +\n  theme(axis.line = element_blank(),\n        axis.text = element_blank(),\n        axis.ticks = element_blank(),\n        axis.title = element_blank())\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_coords <- lng_lat%>%\n  select(-dts_site_number) %>%\n  distinct() %>%\n  drop_na() %>%\n  mutate_all(trimws)%>%\n  mutate(application_id=as.numeric(application_id),\n         site_lat=as.numeric(site_lat),\n         site_long=as.numeric(site_long))\n\n\ndf_coords %>% count(service)\n  \ndf_coords1 <- df_coords %>%\n  as.data.frame() %>%\n  #slice(1:30) %>%\n  arrange(service) %>%\n  filter(service==\"FM\") \n\ndf_coords2 <- df_coords1 %>%\n  pivot_longer(cols = deg_0:deg_360,\n    names_to = \"angle\",\n    values_to = \"values\") \n\ndf_coords3 <- df_coords2 %>%\n  mutate(angle = str_remove(angle, \"deg_\"),\n         angle = as.integer(angle))\n\n# lms_application_id\ndf_coords3[361,]\ndf_coords3%>%\n  filter(angle==360)%>%head\n\n\n\ndf_coords4 <- df_coords3 %>%\n  separate(values,\n    into = c(\"deg_lat\", \"deg_lng\"),\n    sep = \" ,\")\n\n\ndf_coords5 <- df_coords4 %>%\n  mutate(deg_lat= ifelse(is.na(deg_lng),site_lat,deg_lat),\n         deg_lng= ifelse(is.na(deg_lng),site_long,deg_lng))\n  \n# save(df_coords5,file=\"rdata/df_coords5.RData\")\n\ndf_coords5%>%\n  DataExplorer::profile_missing()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_coords5%>%dim # 4550766\ndf_coords5%>%head\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_coords5%>%count(application_id)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_coords_750_2037197 <- df_coords5%>%\n  filter(application_id%in%c(750,2037197)) # dim # 361\n  \n\ndf_coords_750_2037197%>%count(application_id)\ndf_coords_750_2037197%>%\n  filter(application_id==750)\nst_bbox(world)\n\n  ggplot() +\n  #geom_sf(fill=NA) +\n  geom_point(data = df_coords_750_2037197,\n             mapping = aes(deg_lng,deg_lat),\n             #shape=\".\",\n             color=\"red\",\n             inherit.aes = F) \n    coord_sf(xlim = c(-180.00000,190.27084),ylim = c(-85.19218,83.59961))+\n  #coord_sf(xlim = c(-171.73031,-25),ylim = c(10,71.29194))+\n  theme_classic() \n  theme(axis.line = element_blank(),\n        axis.text = element_blank(),\n        axis.ticks = element_blank(),\n        axis.title = element_blank())\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_coords_selected_id <- df_coords5%>% \n  arrange(application_id) %>% \n  count(application_id) %>% \n  slice(1:10) %>%\n  select(-n) %>% \n  unlist()\n\ndf_coords5_selection <- df_coords5 %>%\n  filter(application_id%in%df_coords_selected_id) %>%\n  distinct() # dim # 361\ndf_coords5%>%dim  \ndf_coords5_selection%>%names\n\ndf_coords5_selection_sf<- df_coords5_selection%>%\n  st_as_sf(coords=c(8,7),crs=4326) \n\ndf_coords51 <- df_coords5%>%\n  st_as_sf(coords=c(8,7),crs=4326) \n\n  ggplot(world) +\n    geom_sf(fill=NA) +\n    geom_sf(data = df_coords51, \n            aes(color=application_id),\n            shape=21,stroke=0.01,\n            #shape=\".\",\n            alpha=0.2,\n            inherit.aes = F) +\n    coord_sf(xlim = c(-171.73031,-25),ylim = c(10,71.29194))+\n      theme_classic() +\n  theme(axis.line = element_blank(),\n        axis.text = element_blank(),\n        axis.ticks = element_blank(),\n        axis.title = element_blank())\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_coords5%>%count(application_id)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_coords5_all_sf <- df_coords5 %>%\n   st_as_sf(coords=c(7,6),crs=4326) \n\nggplot(world) +\n    geom_sf(fill=NA) +\n    geom_sf(data = df_coords5_all_sf, \n            #aes(color=application_id),\n            shape=21,stroke=0.01,\n            #shape=\".\",\n            alpha=0.2,\n            inherit.aes = F) +\n    coord_sf(xlim = c(-171.73031,-25),ylim = c(10,71.29194))+\n      theme_classic() +\n  theme(axis.line = element_blank(),\n        axis.text = element_blank(),\n        axis.ticks = element_blank(),\n        axis.title = element_blank())\n\nmap\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nstate_stations <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-11-08/state_stations.csv')\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nstate_stations%>%names\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nstate_stations1 <- state_stations%>%\n  select(call_sign,frequency,state,city,format)\n\nstate_stations1%>%head\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nstate_stations%>%DataExplorer::profile_missing()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nstate_stations%>%dim\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntuesdata <- tidytuesdayR::tt_load(2022, week = 45)\nstation_info <- tuesdata$station_info\n\n\nstation_info%>%dim\nstation_info%>%DataExplorer::profile_missing()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nstation_info%>%count(service)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nstation_info1 <- station_info%>%\n  select(call_sign,facility_id) \nstation_info1%>%head\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nstation_info1%>%DataExplorer::profile_missing()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_coords2 <- df_coords1 %>%\n  mutate(application_id=as.numeric(application_id))# 12604\n\nstation_info1 %>% distinct() %>%dim # 2065\n\n\njoin <- state_stations1 %>% # 17186\n  inner_join(station_info1,by=\"call_sign\")\n\n\nstate_stations1 %>% # 17186\n  inner_join(station_info1,by=\"call_sign\") %>% head # left 17186 # right 2065 # inner 2037 # full 17214\n  right_join(df_coords5,by=c(\"facility_id\"=\"application_id\")) %>%DataExplorer::profile_missing()\n\n  df_coords5%>%distinct()%>%dim # 4551127\n  join %>%distinct()%>%dim # 2037\nsetdiff(df_coords5$application_id,join$facility_id)  %>%length() # 12551\nsetdiff(join$facility_id,df_coords5$application_id)  %>%length() # 2049 # 2021\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfull_join<-join %>%\n  inner_join(df_coords5,by=c(\"facility_id\"=\"application_id\"))\n  \n\nfull_join%>% # dim # 5776\n  relocate(call_sign,facility_id,lms_application_id)%>%\n  distinct()%>%dim # 5776\n  # DataExplorer::profile_missing()\n  \n  \nfull_join %>%head\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfull_join%>%names\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfull_join%>%head\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfull_join1<- full_join%>%\n  mutate(format=str_to_title(format)) # %>%\n    #filter(format==\"Alternative Rock\")\n  # count(format,sort=T)\nfull_join1%>%dim\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfull_join1%>%\n  group_by(state) %>%\n  mutate()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfull_join_sf <- full_join1 %>%\n   st_as_sf(coords=c(13,12),crs=4326) \n\n\nfull_join_sf_centr <- full_join1 %>%\n  group_by(city,format)%>%\n  summarize(site_lat=mean(range(site_lat)),site_long=mean(range(site_long)),.groups=\"drop\")%>% \n  ungroup() %>%\n   st_as_sf(coords=c(4,3),crs=4326) \n\n\nggplot(world) +\n    geom_sf(fill=NA) +\n  geom_sf_text(data = full_join_sf_centr,\n            aes(label=format),\n            #label.padding = unit(0.01, \"lines\"),\n            size=2,\n            inherit.aes = F) +\n    geom_sf(data = full_join_sf, \n            aes(color=factor(format)),\n            shape=21,stroke=0.01,\n            #shape=\".\",\n            alpha=0.2,\n            inherit.aes = F) +\n    coord_sf(xlim = c(-171.73031,-25),ylim = c(10,71.29194))+\n      theme_classic() +\n  theme(axis.line = element_blank(),\n        axis.text = element_blank(),\n        axis.ticks = element_blank(),\n        axis.title = element_blank())\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave(\"test.png\")\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}