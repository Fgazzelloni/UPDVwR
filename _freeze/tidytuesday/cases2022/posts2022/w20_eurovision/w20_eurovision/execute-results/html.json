{
  "hash": "ab5edad895ad08a79f74fcccdbcd25b1",
  "result": {
    "markdown": "---\ntitle: 'Eurovision'\nsubtitle: 'Welcome to TidyTuesday 2022 week 20'\ndate: '2022-05-17'\nimage: \"w20_eurovision.png\"\nimage-alt: ''\ndescription: 'Networks'\noutput: html_document\nexecute: \n   eval: false\n---\n\n::: {.cell}\n\n```{.r .cell-code}\n# Remove everything (houskeeping)\nrm(list=ls())\n# Set the working directory (useful if you are in a .R script)\nsetwd(dirname(rstudioapi::getActiveDocumentContext()$path))\n\n# Load the libraries\nlibrary(tidyverse)\nlibrary(showtext)\nlibrary(countrycode)\nlibrary(ggpattern)\nlibrary(cowplot)\n\n# Set the font\nshowtext_auto(enable = T)\n# sysfonts::font_families_google()\nsysfonts::font_add_google(\"Oregano\", \"Oregano\")\n\n# Read the data\neurovision <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-05-17/eurovision.csv')\n\n# Manipulate the data as needed\ndf <- eurovision %>%\n  group_by(host_country) %>% \n  count(year,artist,song,artist_country,running_order,total_points,rank,qualified,winner) %>%\n  ungroup() %>%   \n  filter(!is.na(song),\n         year>=1971,\n         rank<=15) %>% \n  arrange(year)%>%\n  mutate(rank_dsc=factor(desc(rank)))%>%\n  filter(!host_country%in%c(\"Serbia & Montenegro\", \"Yugoslavia\")) %>%\n  mutate(host_country=case_when(host_country==\"United Kingdom\"~\"UK\",\n                                host_country==\"Bosnia & Herzegovina\"~\"Bosnia and Herzegovina\",\n                                TRUE~host_country)) %>%\n  mutate(country_code_h = countrycode(host_country, \n                                      origin = 'country.name', \n                                      destination = 'iso2c'),\n         country_code_h=tolower(country_code_h))%>%\n  group_by(rank) %>%\n  mutate(tot=sum(total_points))%>%\n  arrange(tot)%>%\n  ungroup() %>%\n  filter(rank==1) %>%\n  group_by(host_country,country_code_h) %>%\n  summarize(tot=sum(total_points),.groups=\"drop\")%>%\n  arrange(tot) %>%\n  ungroup() \n\n# Add the flags' image\n# Source for flags' image https://github.com/lipis/flag-icons\n\n# Take the vector with the countries for setting the flags' image vector\nmy_codes<-df$country_code_h\n# Set the vector with flags' image\nflags <- paste0(\"https://raw.githubusercontent.com/lipis/flag-icons/main/flags/1x1/\",my_codes,\".svg\")\n\n# Add the image vector to the df\nmydf <- cbind(df,image=flags)\n\n# Adjust the order of the host country total points and create an id vector for the angles\nmydf1 <- mydf%>%\n  mutate(host_country=fct_reorder(host_country,-tot))%>%\n  mutate(id=seq(1, nrow(mydf)))%>%\n  relocate(id) \n\n# Set the angles\nangle <- 90 - 360*(mydf2$id - 0.5)/nrow(mydf2)\n\n# Add a vector with angles  \nmydf1$angle <- ifelse(angle< -90, angle + 180, angle)\n\n# Make the circular plot\nmydf1 %>%\n  ggplot(aes(x=host_country,y=tot)) +\n  ggpattern::geom_col_pattern(aes(pattern_filename= rev(host_country)),\n                   inherit.aes = T,\n                   pattern         = 'image',\n                   width                = 1, \n                   pattern_type    = 'none',\n                   fill            = '#1e88f7', \n                   colour          = 'white',\n                   pattern_scale        = -1,\n                   pattern_aspect_ratio = 1,\n                   pattern_key_scale_factor = 1,\n                   pattern_filter  = 'box',\n                   pattern_gravity = mydf2$angle) +\n  ylim(-800,2418)+\n  coord_polar(start = 0,theta = \"x\",direction = 1) +\n  ggpattern::scale_pattern_filename_discrete(choices = flags) +\n  theme_void()+\n  theme(legend.position = \"none\",\n        plot.background = element_rect(fill=NA,color=NA),\n        panel.background = element_rect(fill=NA,color=NA))\n\n# Save the circular plot\nggsave(\"circular.png\",\n       dpi=320,\n       bg = \"black\",\n       width = 6,\n       height = 6)\n\n# Frame the plot and add annotations\nggdraw() +\n  draw_image(\"circular.png\")+\n  # add the eurovision logo\n  draw_image(\"Logo-ESC-Generico.jpeg\",scale=0.1) +\n  draw_label(\"Eurovision\",\n             color=\"white\",fontfamily = \"Oregano\",\n             x=0.25,y=0.92,size=180) +\n  draw_label(\"Host Countries\",\n             color=\"white\",fontfamily = \"Oregano\",\n             x=0.3,y=0.8,size=94) +\n  draw_label(\"The highest total points first from 1971 to 2020\\nDataSource: #TidyTueday Week20 - Eurovision TV\\nDataViz: Federica Gazzelloni (@fgazzelloni)\",\n             x=0.5,y=0.1,size=41,lineheight = 0.3,\n             color=\"white\",fontfamily = \"Oregano\")\n\n# Save the final version\nggsave(\"w20_eurovision.png\",\n       dpi=320,\n       bg = \"black\",\n       width = 6,\n       height = 6)\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}