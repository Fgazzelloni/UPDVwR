{
  "hash": "43e5fae7841009c9d9cf78c68fe1cad3",
  "result": {
    "markdown": "---\ntitle: 'UK Museums'\nsubtitle: 'Welcome to TidyTuesday 2022 week 47'\ndate: '2022-11-22'\nimage: \"w47_uk_museums.png\"\nimage-alt: ''\ndescription: 'Networks'\noutput: html_document\nexecute: \n   eval: false\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\ntuesdata <- tidytuesdayR::tt_load(2022, week = 47)\nmuseums <- tuesdata$museums\nmuseums %>% head\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmuseums %>%\n  DataExplorer::profile_missing()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# https://stackoverflow.com/questions/54560369/png-of-static-map-using-r-and-mapdeck\nlibrary(tidyverse)\ndf = read.csv(\"https://git.io/geocompr-mapdeck\")\n\ndf\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(mapdeck)\n\nset_token(\"MAPBOX_TOKEN\")\nms = mapdeck_style(\"dark\")\n\ndf <- df[!is.na(df$lat), ]\n\nmapdeck(style = ms, pitch = 45) %>%\n  add_grid(data = df, lat = \"lat\", lon = \"lng\", \n           cell_size = 1000,\n           elevation_scale = 50, \n           layer_id = \"grid_layer\",\n           colour_range = colourvalues::colour_values(1:6, palette = \"plasma\")) \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmapdeck(style = mapdeck_style('dark'),zoom = 1) %>% \n    add_grid(data = df, \n             lat = \"lat\", \n             lon = \"lng\", \n             cell_size = 1000,\n             elevation_scale = 50, \n             layer_id = \"grid_layer\",\n             colour_range = colourvalues::colour_values(1:6, palette = \"plasma\")) %>%\n  add_scatterplot(data = museums,\n                  lat = \"Latitude\",\n                  lon = \"Longitude\",\n                  radius = 0.5,\n                  legend = TRUE,\n                  fill_colour = \"Accreditation\",\n                  layer_id = \"scatter_layer\",\n                  palette = \"viridis\") \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntable <- museums %>%\nselect(museum_id,`Village,_Town_or_City`,Accreditation,Size,Subject_Matter) %>%\n  janitor::clean_names() %>%\n  group_by(accreditation) %>%\n  count(size) %>%\n  mutate(pct=round(n/sum(n)*100,2)) %>%\n   ungroup() %>%\n  pivot_wider(names_from = size,values_from = pct) %>%\n  select(-n) %>%\n  pivot_longer(cols = 2:6,names_to = \"Type\",values_to = \"pct\")%>%\n  na.omit() %>%\n  pivot_wider(names_from = accreditation,values_from = pct) %>%\n  gt::gt()\n\ntable\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(cowplot)\n\nggdraw() +\n  draw_image(\"base_map.png\") +\n  draw_image(\"table.png\",\n             scale=0.25,\n             x=-0.3,y=0)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot2::ggsave(\"test.png\",\n       dpi=320)\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}