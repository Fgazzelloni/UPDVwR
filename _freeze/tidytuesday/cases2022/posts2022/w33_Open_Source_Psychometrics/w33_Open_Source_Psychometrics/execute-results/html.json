{
  "hash": "1f381830306eb77809f5f4c93bfdfb6d",
  "result": {
    "markdown": "---\ntitle: 'Open Source Psychometrics'\nsubtitle: 'Welcome to #TidyTuesday 2022 day 33'\ndate: '2022-08-16'\nimage: 'https://raw.githubusercontent.com/Fgazzelloni/TidyTuesday/main/data/2022/w33_psychometrics/w33_psychometrics.png'\nimage-alt: ''\ndescription: 'Networks'\noutput: html_document\nexecute: \n   eval: false\n---\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npsych_stats <- read_csv(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-08-16/psych_stats.csv\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npsych_stats%>%head\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_df <- psych_stats%>%\n  arrange(rank)%>%\n  select(char_name,uni_name,personality,avg_rating,rank,rating_sd) %>%\n  filter(uni_name==\"Friends\")\nmy_df\n```\n:::\n\n\nUse {tidytext} to select the personality variables to be used in the visualization. In this case a list of encoded variables, such as */U000..* were filtered out, to leave just words in the vector.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidytext)\nmy_df1 <- my_df %>% \n  mutate(personality=gsub(\"[^A-z]\",\"unknown\",personality))%>%\n  filter(!personality==\"unknown\") %>%\n  #count(personality) %>%\n  unnest_tokens(word, personality) %>%\n  inner_join(get_sentiments(\"bing\")) %>%\n  distinct(char_name,word,sentiment,avg_rating) \n```\n:::\n\n\nFurther wrangling activity on the dataset is done to select only the personality words which are in common and with highest avg rating values for all of the protagonists in **Friends** TV show.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nby_names <- my_df1%>%\n  group_by(word)%>%\n  summarize(char_name,avg_rating=mean(avg_rating),.groups=\"drop\")%>%\n  ungroup()%>%\n  pivot_wider(names_from=char_name,values_from=word)%>%\n  drop_na()%>%\n  pivot_longer(cols=2:7,names_to=\"names\",values_to=\"values\")%>%\n  unnest(values)%>%\n  arrange(values) %>%\n  count(values) %>%\n  group_by(values) %>%\n  filter(!n<6 & !n>6) %>%\n  ungroup() %>%\n  left_join(my_df3,by=c(\"values\"=\"word\"))%>%\n  select(-n) %>%\n  pivot_wider(names_from=char_name,values_from=values) %>%\n  pivot_longer(cols=3:8,names_to=\"names\",values_to=\"word\")%>%\n  distinct()%>%\n  drop_na()%>%\n  mutate(word=str_to_title(word)) %>%\n  mutate(id_sentiment=ifelse(sentiment==\"positive\",1,0))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(extrafont)\n# loadfonts()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\np <-by_names%>%\n  ggplot(aes(x=avg_rating,y=fct_reorder(word,-avg_rating)))+\n  geom_col(aes(fill=names), position = position_fill(),color=\"black\")+\n  ggthemes::scale_fill_tableau()+\n  guides(fill=guide_legend(nrow = 1,reverse = T,keywidth = 0))+\n  labs(fill=\"\",\n       subtitle=\"\\nordered by common high-rating personality\",\n       caption=\"DataSource: Open Source Psychometrics | #TidyTuesday 2022 week33\\nDataViz: Federica Gazzelloni (@fgazzelloni)\",\n       title=\"Friends: positive and negative personality ratings\")+\n  ggthemes::theme_fivethirtyeight()+\n  theme(text=element_text(color=\"grey90\",family=\"Public Sans Medium\"),\n        plot.title = element_text(size=22),\n        legend.position = \"top\",\n        legend.background = element_rect(fill=\"black\",color=\"black\"),\n        legend.text = element_text(size=12),\n        strip.background = element_blank(),\n        axis.text.x = element_blank(),\n        axis.text.y = element_text(size=12),\n        panel.grid = element_line(size=3),\n        plot.background = element_rect(fill=\"black\",color=\"black\"),\n        panel.background = element_rect(fill=\"black\",color=\"black\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(cowplot)\nggdraw(p)+\n  draw_image(\"logo.png\",scale=0.25,\n             x=-0.35,\n             y=0.45)\nggsave(\"w33_psychometrics.png\",\n       dpi=320,\n       height = 7,\n       width = 9)\n```\n:::\n\n\nOther visualization not to be used.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nby_names %>%\n  ggplot(aes(fct_reorder(word,avg_rating),avg_rating,\n             fill=sentiment,color=sentiment))+\n  geom_point()+\n  geom_text(aes(label=word),size=3)+\n  # ggimage::geom_image(x=0.2,y=0.2,image=image)+\n  geom_line(aes(group=sentiment))+\n  #geom_col()+\n  facet_wrap(~fct_reorder(names,-avg_rating),scale=\"free\")+\n  ggthemes::scale_color_tableau()\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}