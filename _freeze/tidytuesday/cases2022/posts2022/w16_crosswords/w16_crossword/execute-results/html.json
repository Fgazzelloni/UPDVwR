{
  "hash": "77643279ee835dfcf37ba51267e4aa24",
  "result": {
    "markdown": "---\ntitle: 'Crossword Puzzles and Clues'\nsubtitle: 'Welcome to TidyTuesday 2022 week 16'\ndate: '2022-04-19'\nimage: \"w16_crossword.gif\"\nimage-alt: ''\ndescription: 'Networks'\noutput: html_document\nexecute: \n   eval: false\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbig_dave <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-04-19/big_dave.csv')\ntimes <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-04-19/times.csv')\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbig_dave%>%glimpse\nbig_dave%>%arrange(-rowid)%>%head\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbig_dave1 <- big_dave%>% # DataExplorer::profile_missing()\n  select(answer,puzzle_date,puzzle_name) %>%\n  filter(!is.na(answer)) %>%\n  mutate(puzzle_bigdave=gsub(\"[[:punct:][:blank:]]\\\\d*\",\"\",puzzle_name))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbig_dave1%>%count(answer)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntimes%>%glimpse\ntimes%>%head\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntimes1 <- times%>%\n  select(answer,puzzle_date,puzzle_name) %>% #DataExplorer::profile_missing()\n  filter(!is.na(answer))%>%\n  mutate(puzzle_times=gsub(\"[[:punct:][:blank:]]\\\\d*\",\"\",puzzle_name))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntimes1 %>%count(answer)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- big_dave1 %>%\n  inner_join(times1,by=c(\"answer\",\"puzzle_date\")) %>%\n  arrange(puzzle_date) %>% # \n  mutate(answer=as.factor(answer)) %>% #DataExplorer::profile_missing()\n  select(-puzzle_name.x,-puzzle_name.y) %>%\n  mutate(year=lubridate::year(puzzle_date),.after=answer,\n         year=as.integer(year))\n \ndf \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf%>%\n  ggplot(aes(x=year,y=puzzle_bigdave))+\n  geom_col()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(gganimate)\ncolors<- colorRampPalette(RColorBrewer::brewer.pal(12, \"Paired\"))(161)\nlibrary(extrafont)\nloadfonts()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(showtext)\n# \nfont_add_google(\"Gentium Book Basic\",\"gbb\")\nfont_add_google(\"Nanum Gothic\",\"ng\")\nshowtext_auto()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\np <- df %>%\n    pivot_longer(cols=c(\"puzzle_bigdave\",\"puzzle_times\"),\n               names_to=\"names\",values_to=\"values\")%>%\n  #count(year)\n  ggplot(aes(puzzle_date, fct_reorder(values,puzzle_date), color = values)) +\n  geom_jitter(show.legend = F,shape=\".\",color=\"white\")+\n  geom_text(aes(label=answer),\n            size=9,\n            check_overlap = T,family=\"gbb\")+\n  scale_color_manual(values=colors)+\n  labs(title = \"\\nSame Answers! Year: {closest_state}\\nBigDave & Times puzzles\\n\",  \n       subtitle=\"\\nwords are randomized\",\n       caption=\"#30DayChartChallenge 2022 #Day22\\n DataSource: #TidyTuesday week16 - Crossword \\n DataViz: Federica Gazzelloni\\n\\n\")+\n  theme_void() +\n  theme(text = element_text(family = \"ng\", face=\"bold\",color=\"#F0F8FF\"),\n        plot.title = element_text(size=28),\n        plot.subtitle = element_text(size=18),\n        plot.caption = element_text(size=14,vjust=2,hjust=0.5),\n        plot.background = element_rect(fill=\"grey10\",color=\"grey20\"),\n        panel.background = element_rect(fill=\"grey10\",color=\"grey20\"),\n    legend.position = \"none\")+\n   coord_polar(theta = \"x\") +\n  transition_states(year, \n                    transition_length = 2,\n                    state_length = 1,\n                    wrap = F) +\n  shadow_wake(wake_length = 0.5,wrap=F)\n\n\nanim_save(animate(p,res=100,\n                  renderer = gifski_renderer(\"animation3.gif\"),\n                  height = 710, width = 610))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>%\n  pivot_longer(cols=c(\"puzzle_bigdave\",\"puzzle_times\"),\n               names_to=\"names\",values_to=\"values\")%>%\nggplot(aes(year, fct_reorder(values,year), fill = values)) +\n  geom_col() +\n  scale_fill_viridis_d() +\n  theme_minimal() +\n  theme(legend.position = \"none\",\n    panel.grid = element_blank(),\n    panel.grid.major.y = element_line(color = \"white\"),\n    panel.ontop = TRUE\n  )+\n  coord_polar()+\n  facet_wrap(vars(names))+\n  transition_states(year, wrap = FALSE) +\n  shadow_mark()+\n  enter_grow() +\n  enter_fade()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf%>%\n  group_by(puzzle_times)%>%\n  count(year,sort=T)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbd_id <- df%>%\n  arrange(puzzle_date)%>%\n  count(puzzle_bigdave)%>%\n  mutate(bd_id=row_number())#%>%\n  #select(-n)\n\ntm_id <- df%>%\n  arrange(puzzle_date)%>%\n  count(puzzle_times)%>%\n  mutate(tm_id=row_number())#%>%\n  #select(-n)\n\ndf1 <- df %>%\n  left_join(bd_id,by=c(\"puzzle_bigdave\"))%>%\n  left_join(tm_id,by=\"puzzle_times\")\ndf1\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(viridis)\nlibrary(patchwork)\nlibrary(hrbrthemes)\nlibrary(igraph)\nlibrary(ggraph)\nlibrary(colormap)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlinks <-df1%>%\n  mutate(label=paste0(puzzle_bigdave,\"-\",puzzle_times))%>%\n  rename(source=bd_id,target=tm_id)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggbump)\n```\n:::\n\n::: {.cell paged.print='false'}\n\n```{.r .cell-code}\nggplot(links,aes(x=source-2,xend=source+5 ,y=target,yend=target+5,\n                 group=label)) +\n  ggbump::geom_sigmoid(aes(color=puzzle_bigdave),show.legend = F)+\n  geom_text(aes(x=source-2,label=puzzle_bigdave),size=3,\n            vjust=\"bottom\",hjust=\"right\",check_overlap = T,show.legend = F)+\n  geom_text(aes(x=source+5,y=target+5,label=puzzle_times),size=3,\n            vjust=\"bottom\",hjust=\"left\",check_overlap = T,show.legend = F)+\n  geom_text(aes(label=answer,color=answer),size=3,\n            vjust=\"bottom\",hjust=\"left\",check_overlap = T,show.legend = F)\n    coord_flip()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlot(df, aes(x=year, y= fct_reorder(puzzle_bigdave,year)))+\n  geom_col()+\n  #scale_x_continuous(breaks=seq(2014,2021,1))\n  labs(title=\"Big Dave\")\n\nggplot(df, aes(x=puzzle_date, y= puzzle_times))+\n  geom_col()+\n  labs(title=\"Times\")\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}