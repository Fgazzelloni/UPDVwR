{
  "hash": "1fa7a4045b1c9fb888ee9b0135adbb59",
  "result": {
    "markdown": "---\ntitle: 'Starbucks drinks'\nsubtitle: 'Welcome to TidyTuesday 2021 week 52'\ndate: '2021-12-21'\nimage: 'w52_starbucks.png'\nimage-alt: ''\ndescription: 'Networks'\noutput: html_document\nexecute: \n   eval: false\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\nstarbucks <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-12-21/starbucks.csv')\n\n\nhead(starbucks)\n\n\nmy_coffee<-starbucks%>%count(product_name,sort=T)%>%slice(1:10)%>%select(-n)%>%unlist()\n\n\n\nlibrary(extrafont)\nlibrary(showtext)\nshowtext::showtext_auto()\nshowtext::showtext_opts(dpi=110)\nlibrary(sysfonts)\nfont_add_google(name =\"Black Han Sans\" ,family = \"my_font\")\nfont_add_google(name =\"Odibee Sans\" ,family = \"my_font1\")\n\nfamily = \"my_font\"\nfamily1 = \"my_font1\"\n\n\nimage <- \"w52/cup.png\"\n\ndata<- starbucks%>%\n  mutate(trans_fat_g=as.numeric(trans_fat_g),fiber_g=as.numeric(fiber_g))%>%\n  select(-size,-milk,-serv_size_m_l)%>%\n  filter(product_name%in%my_coffee)%>%\n  arrange(product_name)%>%\n  mutate(product_name =fct_reorder(product_name,-calories)) %>%\n  group_by(product_name)%>%\n  summarise_all(.funs = mean)%>%\n  ungroup()%>%\n  tibble::column_to_rownames(\"product_name\")%>%\n  as.matrix()%>%\n  scale()%>%\n  as.data.frame()%>% \n  rownames_to_column()%>%\n  rename(product=rowname)%>%\n  mutate(product=as.factor(product))%>%\n  pivot_longer(cols=-product,names_to=\"names\",values_to=\"values\")%>%\n  mutate(names=gsub(\"_g|_mg\",\"\",names),\n         names=gsub(\"_\",\" \",names),\n         names=gsub(\"total \",\"\",names))%>%\n  mutate(names=ifelse(names==\"saturated fat\",yes = \"satur fat\",no = names))%>%\n  mutate(names=tools::toTitleCase(names),\n         values=round(values,5))%>%\n  mutate(img = image)%>%\n  group_by(product)%>%\n  mutate(values2 =ifelse(values==max(values),values,NA),\n         values3 =ifelse(values==min(values),values,NA))%>%\n  ungroup()%>%\n  mutate(imagemax=ifelse(!is.na(values2),img,NA),\n         imagemin=ifelse(!is.na(values3),img,NA))\n\nlibrary(RColorBrewer)\n  my_hmap<- data%>%\n    ggplot(mapping=aes(x=fct_reorder(names,values),y=fct_reorder(product,values),\n           fill=factor(values)))+\n  geom_tile(show.legend = F) +\n  ggimage::geom_image(aes(image=imagemax,scale=values),\n                      asp = 1.5, size = 0.1, by = \"width\") +\n  ggimage::geom_image(aes(image=imagemin,scale=values),\n                      asp = 1.5, size = 0.1, by = \"width\") +\n  labs(title=\" \")+\n  scale_fill_manual(values=colorRampPalette(brewer.pal(5, \"BrBG\"))(98))+\n  scale_color_manual(values=colorRampPalette(brewer.pal(5, \"BrBG\"))(98))+\n  theme_void()+\n  theme(text = element_text(family=family1,color=\"#F5F5F5\"),\n        axis.title = element_blank(),\n        axis.text.y = element_text(vjust=0,hjust=0.95,size=16),\n        axis.text.x = element_text(size=11),\n        plot.background = element_blank(),\n        panel.background = element_blank())\n  \n\n\n# build a nice legend\nlibrary(circlize)\ncol_fun = circlize::colorRamp2(c(0, 0.5, 1), c(\"#A6611A\", \"#F5F5F5\", \"#018571\"))\nlgd = ComplexHeatmap::Legend(at = c(0, 0.5, 1),\n                             labels = c(\"  Low\", \"\", \"  High\"),\n                             col_fun = col_fun, \n                             grid_width = unit(3.4, \"cm\"),\n                             labels_gp = gpar(col = \"#F5F5F5\", \n                                              fontsize=11,\n                                              fontface=\"bold\"))\n \nComplexHeatmap::draw(lgd)\ndev.off()\n\nlibrary(cowplot)\nlibrary(grid)\nleg<-grid.grabExpr(ComplexHeatmap::draw(lgd))\nlegend<-plot_grid(leg)\nclass(legend)\n\n# remove bg from pictures\n# https://www.remove.bg/upload\n\n # assemble all the pieces\n library(cowplot)\nfinal<- ggdraw()+\n  draw_image(image=\"w52/bg.jpg\",scale=1.5,x=0)+\n  draw_image(\"w52/title.png\",x=-0.05,y=0.35,scale=0.9)+\n  draw_plot(my_hmap,scale=0.83,x=0.05,y=-0.05)+\n  draw_label(\"STARBUCKS 10' COFFEE\",x=0.48,y=0.9,size=55,color=\"black\",\n             fontfamily = family,fontface = \"bold\")+\n  draw_image(\"w52/cup.png\",scale=0.5,x=-0.435,y=-0.25)+\n  draw_plot(legend,x=-0.422,y=-0.28)+\n  draw_label(\"STARBUCKS\",x=0.067,y=0.17,\n             size=9,color=\"black\",fontfamily = family)+\n  draw_label(\"DataSource: Starbucks Coffee Company | DataViz: Federica Gazzelloni\",\n             x=0.3,y=0.03,size=11,color=\"#F5F5F5\",\n             fontfamily = family1)+\n  draw_image(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/static/plot_logo.png\",\n             x=0.45,y=0.45,scale=0.09)\n\n####### SAVING ######################################\nragg::agg_png(here::here(\"w52/starbucks.png\"),\n              #res = 320, \n              width = 1200, \n              height = 675, \n              units = \"px\",\n              #pointsize = 12,\n              background = \"white\",\n              scaling = 1)\nfinal\n\ndev.off()\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}