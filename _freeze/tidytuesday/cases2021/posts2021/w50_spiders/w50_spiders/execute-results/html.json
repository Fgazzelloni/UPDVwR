{
  "hash": "a804c87e4c574c7196eaf3da3b50ede7",
  "result": {
    "markdown": "---\ntitle: 'Spiders'\nsubtitle: 'Welcome to TidyTuesday 2021 week 50'\ndate: '2021-12-07'\nimage: 'w50_spiders.png'\nimage-alt: ''\ndescription: 'Networks'\noutput: html_document\nexecute: \n   eval: false\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nspiders <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-12-07/spiders.csv')\n\n# spiders%>%View\nsp_family_graph<-spiders%>%\n  count(family,genus,species,sort=T)%>%\n  select(-n)\n\n# https://stackoverflow.com/questions/24173194/remove-parentheses-and-text-within-from-strings-in-r\nmy_spider_countries<- spiders%>%\n  separate(distribution,into=c(\"country\",\"region\"),sep=\",|;\",remove = FALSE)%>%\n  mutate(country=stringi::stri_trans_totitle(country))%>%\n  mutate(country2=gsub(\"\\\\s*\\\\([^\\\\)]+\\\\)*\",\"\",country))%>%\n  mutate(country2=gsub(\"^D.r.|Dr.\",\"Dem. Rep. \",country2))%>%\n  \n  mutate(country2=gsub(\"^ \",\"\",country2))%>%\n  \n  mutate(country2=gsub(\" To .*$\",\"\",country2))%>% \n  \n  mutate(country2=gsub(\" Or .*$\",\"\",country2))%>% \n  \n  mutate(country2=gsub(\"Is.$\",\"Islands\",country2))%>%\n  \n  mutate(country2=gsub(\"\\\\?$\",\"\",country2))%>%\n  mutate(country2=gsub(\" And .*$\",\"\",country2))%>%#\n  \n  mutate(country2=gsub(\". Introduced$\",\"\",country2))%>%\n  \n  mutate(country2=case_when(str_detect(country2,\"Austral\")~\"Australia\",\n                            #str_detect(country2,\"Rep.\")~\"Republic\",\n                            str_detect(country2,\"Bahama\")~\"Bahamas\",\n                            str_detect(country2,\"Brazi\")~\"Brazil\",\n                            str_detect(country2,\"Brezi\")~\"Brazil\",\n                            str_detect(country2,\"Bosnia Herzegovina\")~\"Bosnia and Herz.\",\n                            #str_detect(country2,\"Canary\")~\"Canary Islands\",\n                            str_detect(country2,\"Caribbean\")~\"Caribbean\",\n                            str_detect(country2,\"Czechia\")~\"Czech Rep.\",\n                            str_detect(country2,\"Cina\")~\"China\",\n                            str_detect(country2,\"Central Africa\")~\"Central African Rep.\",\n                            str_detect(country2,\"Asia\")~\"Asia\",\n                            str_detect(country2,\"Cape Verde\")~\"Cape Verde\",\n                            str_detect(country2,\"Colombia\")~\"Colombia\",\n                            str_detect(country2,\"Columbia\")~\"Colombia\",\n                            str_detect(country2,\"Europ\")~\"Europe\",\n                            str_detect(country2,\"Himalaya\")~\"Himalayas\",\n                            str_detect(country2,\"Indonesia\")~\"Indonesia\",\n                            str_detect(country2,\"Guinea\")~\"Guinea\",\n                            str_detect(country2,\"Usa\")~\"United States\",\n                            str_detect(country2,\"Britain\")~\"United Kingdom\",\n                            str_detect(country2,\"Ecuador\")~\"Ecuador\",\n                            str_detect(country2,\"Ghana\")~\"Ghana\",\n                            str_detect(country2,\"Greece\")~\"Greece\",\n                            str_detect(country2,\"Guadeloupe\")~\"Guadaloupe\",\n                            str_detect(country2,\"Kyrgystan\")~\"Kyrgyzstan\",\n                            str_detect(country2,\"Laos\")~\"Laos\",\n                            str_detect(country2,\"Malaysia\")~\"Malaysia\",\n                            str_detect(country2,\"Spain\")~\"Spain\",\n                            str_detect(country2,\"Reunion\")~\"Réunion\",\n                            str_detect(country2,\"Saint Lucia\")~\"Saint Lucia\",\n                            str_detect(country2,\"São Tomé\")~\"São Tomé Príncipe\",\n                            str_detect(country2,\"Kerguelen\")~\"Kerguelen Islands\",\n                            str_detect(country2,\"St. Vincent\")~\"St. Vincent\",\n                            str_detect(country2,\"Virgin Islands\")~\"Virgin Islands\",\n                            str_detect(country2,\"Mexic\")~\"Mexico\",\n                            TRUE~country2))%>%\n  filter(!str_detect(country2,\"Unknown|West|North|Western|East|Poss|prob|Pres|Prob\"))\n\n\nit_to_from<-my_spider_countries%>%\n  filter(country2==\"Italy\")%>%\n  mutate(region=trimws(region))%>%filter(!is.na(region))%>% #count(region)%>%View\n  mutate(region=gsub(\"\\\\?$\",\"\",region))%>%\n  mutate(region=gsub(\"Central Europe to \",\"\",region))%>%#count(region)%>%View\n  filter(!str_detect(region,\"Central to \"),\n         !region==\"south-eastern Europe\")%>%#count(region)%>%View\n  mutate(region=gsub(\" and|to*$\",\"\",region))%>%\n  mutate(region=case_when(str_detect(region,\"Greece\")~\"Greece\",\n                          str_detect(region,\"Ukraine\")~\"Ukraine\",\n                          str_detect(region,\"Russia\")~\"Russia\",\n                          TRUE~region))%>%\n  mutate(region=gsub(\"\\\\)$\",\"\",region))%>%\n  rename(from=country2,to=region)\n\n#it_to_from%>%count(to)\n\n# library(ggraph)\n# library(igraph)\n# library(tidyverse)\n\nspiders_Balkans <-  c(\"Bulgaria\",\"Albania\",\"Greece\",\"Bosnia\",\"Kosovo\",\"Macedonia\",\n                      \"Montenegro\",\"Romania\",\"Serbia\")%>%as_tibble()%>%\n  rename(to=value)\n\nitaly_to<-it_to_from%>%count(to)%>%select(-n)\nitaly_to<- italy_to%>%filter(!to==\"Balkans\")\nitaly_to <- rbind(italy_to,spiders_Balkans)%>%unlist()\n\n\nworld <- map_data(\"world\")%>%\n  filter(!region==\"Antarctica\")\n\nitaly<- world%>%\n  filter(region==\"Italy\")\n\n\nlibrary(sf)\n# centroids and coords with spData::world-----\nworld2_geo<- spData::world\n# library(countrycode)\n# countrycode::codelist\n\n# italy centroids\nit_centroids<- world2_geo%>%\n  filter(name_long==\"Italy\")%>%\n  st_centroid()%>%\n  st_coordinates()%>%\n  as.data.frame()%>%\n  mutate(from=\"Italy\")%>%\n  rename(long_from=X,lat_from=Y)\n\n# extrapolate the centroids for italy_to countries\nto_country_geom<- world2_geo%>%\n  filter(name_long%in%italy_to) %>% #22 out of  28\n  st_centroid()%>%select(name_long)# %>%count(name_long) \n\n# check missing values\nas.data.frame(italy_to)%>% # count(italy_to) # 28\n  anti_join(to_country_geom,by=c(\"italy_to\"=\"name_long\")) # missing values (\"Malta\",\"North Macedonia\",\"Russia\",\"Sardinia\",\"Sicily\",\"Bosnia\")\n\n\nto_centroids<- to_country_geom%>%\n  st_coordinates()%>%\n  as.data.frame()%>%\n  rename(long_to=X,lat_to=Y)\n\n\n\nto_df<-cbind(to=to_country_geom$name_long,to_centroids)%>%\n  filter(!to%in%c(\"Kosovo\",\"France\"))    \n# 46.261157084423814, 2.3345436786735583\n\n\n\n\nto_and_from<- it_to_from%>%\n  count(family,genus,species,subspecies,year,from,to)%>%\n  select(-n)%>%\n  filter(to%in%to_df$to) %>%\n  left_join(it_centroids,by=\"from\") %>%#count(to)\n  left_join(to_df,by=\"to\")#%>%count(to,long_to,lat_to)\n\n\nbalkans_to<- to_df%>%\n  filter(to%in%c(\"Serbia\",\"Montenegro\",\"Macedonia\",\"Albania\"))%>%\n  merge(it_centroids)\n\n\nlng_rng <- range(to_and_from$long_to)\nlat_rng <- range(to_and_from$lat_to)\n\nlibrary(extrafont)\nloadfonts()\nlibrary(showtext)\nfont_add(family = \"Blackwidow\", regular = \"Blackwidow-o6ga.ttf\") # https://www.fontspace.com/blackwidow-font-f23155\n#font_add(family = \"Montserrat\", regular = \"Montserrat-Regular.ttf\") # https://fonts.google.com/specimen/Montserrat?category=Sans+Serif\nshowtext_auto()\nshowtext_opts(dpi = 320)\n\n# map--------\n\nitaly_map<-ggplot(world)+\n  # rest of the countries ploygons\n  geom_polygon(aes(x=long,y=lat,group=group),\n               alpha=0.5,fill=\"darkcyan\",color=\"grey58\") +\n  # italy polygon\n  geom_polygon(data=italy,\n               aes(x=long,y=lat,group=subregion),\n               color=\"azure4\",fill=\"darkgoldenrod3\") +\n  # name of the countries (to)\n  geom_text(data= to_df,\n            aes(x=long_to,y=lat_to,label=to),\n            color=\"black\",nudge_y = 0.5,nudge_x=0.5,\n            family=\"Blackwidow\",size=6) +\n  # to points\n  geom_point(data= to_df,\n             aes(x=long_to,y=lat_to),\n             color=\"#D16296\",size=4,alpha=0.9,shape=21,stroke=2)+\n  # points connections\n  geom_curve(data= to_and_from,\n               aes(x = long_from, y = lat_from, \n                   xend = long_to, yend = lat_to),\n             curvature = 0.2,size=0.3,\n             color=\"dodgerblue4\",\n             alpha=0.4,\n             arrow = arrow(length = unit(0.25, \"cm\"))) +\n  # adding balkans countries points connections\n  geom_curve(data= balkans_to,\n             aes(x = long_from, y = lat_from, \n                 xend = long_to, yend = lat_to),\n             curvature = 0.2,size=0.3,\n             color=\"dodgerblue4\",\n             alpha=0.4,\n             arrow = arrow(length = unit(0.25, \"cm\"))) +\n  # stroke of centre point of italy\n  geom_point(data= it_centroids,\n             aes(x=long_from,y=lat_from),\n             color=\"#D16296\",size=3,shape=21,stroke=2,alpha=0.9) +\n  # center point of italy\n  geom_point(data= it_centroids,\n             aes(x=long_from,y=lat_from),\n             color=\"yellow2\",size=1) +\n  geom_text(data= it_centroids,\n             aes(x=long_from,y=lat_from,\n                 label=\"Italy\"),\n            family=\"Blackwidow\",nudge_y = 1,\n             color=\"black\",size=10) +\n  geom_curve(aes(x = 12.1, y = 42.8, \n            xend = 2.3345436786735583, yend = 46.261157084423814),\n             curvature = 0.2,size=0.3,\n             color=\"dodgerblue4\",\n             alpha=0.4,\n             arrow = arrow(length = unit(0.25, \"cm\"))) +\n  geom_text(aes(x = 2.3345436786735583, y = 46.261157084423814,\n                label=\"France\"),\n            family=\"Blackwidow\",nudge_y = 1,\n            color=\"black\",size=8)+\n  coord_cartesian(xlim=c(-8.42048,54.28545),ylim=c(28.18548,49.14882))+\n  labs(caption=\"Datasource: World Spiders Database | Majer et al, 2015 | #TidyTuesday week50\\nDataViz: Federica Gazzelloni\")+\n  ggthemes::theme_map()+\n  theme(text = element_text(family=\"Roboto Condensed\"),\n        plot.caption = element_text(size=11))\n\n# export the radial plot and save it as .png\n\n# gt table -----------\n# https://gt.rstudio.com/reference/tab_options.html\nlibrary(gt)\nlibrary(tidyverse)\nlibrary(glue)\n\nspiders_italy <-  filter(my_spider_countries, grepl(\"Italy\", country2))\nspiders_italy<- spiders_italy%>%filter(!is.na(subspecies))\n\ntax_tb<-spiders_italy %>%\n  arrange(year)%>%\n  select(Year=year,Family=family,Genus=genus,Species=species,Subspecies=subspecies) %>%\n  gt() %>%\n  tab_header(\n    title = md(\"**Italy-Spiders Taxonomy**\"),\n    subtitle = glue(\"1907 to 1973\")\n  ) %>%\n  tab_source_note(\n    source_note = md(\"Datasource: **World Spiders Database** | Majer et al, 2015\")\n  )  %>%\n  tab_options(table.background.color=\"#D16296\")%>%\n  bstfun::as_ggplot()\n\n\n# final touches----------\nlibrary(cowplot)\nfinal_plot<- ggdraw(italy_map)+\n  draw_label(\"Spiders from Italy to?\",x=0.55,y=0.1,\n             fontfamily = \"Blackwidow\",size=65)+\n draw_line(x=c(0.715,0.985),y=c(0.52,0.52),size=45,\n           color=\"#D16296\")+\n  \n draw_label(\"The history of Italian spiders formally begins in 1868,\\na list of 404 species were reported at the time.\\nThere were unbalanced discoveries between \\nnorthen and southern Italy.\\nKnowledge on Italian spiders increased rapidly, \\nbetween 1901-1951\\nSpiders are mostly found in Alto-Adige, Valle D'Aosta,\\nLombardia,Veneto,Calabria and Sardegna.\",\n             x=0.85,y=0.52,size=10,color=\"white\",\n            fontfamily=\"Roboto Condensed\")+\n  draw_plot(tax_tb,scale=0.37,x=0.35,y=0.3)+\n  draw_image(\"w50/arages_small.png\",scale=0.1, x=-0.44,y=0.35)+\n  draw_image(\"w50/ESA.jpg\",scale=0.08,x=-0.44,y=0.25)+\n  draw_image(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/static/plot_logo.png\",\n             scale=0.1,x=-0.44,y=0.45) \n\n####### SAVING ######################################\nragg::agg_png(here::here(\"w50/spiders2.png\"),\n              res = 320, width = 12, height = 8, units = \"in\")\nfinal_plot\n\ndev.off()\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}