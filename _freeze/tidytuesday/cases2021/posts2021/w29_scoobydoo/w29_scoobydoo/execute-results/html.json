{
  "hash": "7f51a7f35d8fcd4616ccc153d6802990",
  "result": {
    "markdown": "---\ntitle: \"Scoobydoo\"\nsubtitle: \"Welcome to TidyTuesday 2021 week 29\"\ndate: \"2021-07-13\"\nimage: \"w29_scoobydoo.png\"\nimage-alt: \"\"\ndescription: \"Networks\"\noutput: html_document\nexecute: \n  eval: false\n---\n\n\n\n- [scooby doo font](https://fonts2u.com/scooby-doo.font)\n- [fonts](https://www.r-bloggers.com/2019/03/adding-custom-fonts-to-ggplot-in-r/)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(gistfo)\nlibrary(carbonate)\n\nlibrary(tidyverse)\nlibrary(ggthemes)\nlibrary(ggtext)\nlibrary(viridis)\nlibrary(extrafont)\nlibrary(patchwork)\nlibrary(cowplot)\nlibrary(ggpubr)\nlibrary(png)\nlibrary(grid)\nlibrary(magick)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntuesdata <- tidytuesdayR::tt_load(2021, week = 29)\nscoobydoo <- tuesdata$scoobydoo\nhead(scoobydoo)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nscoobydoo_long <- scoobydoo%>%\nselect(-imdb,-engagement,-run_time,-trap_work_first,-c(if_it_wasnt_for:door_gag),\n-c(jeepers:rooby_rooby_roo),-c(fred_va:scooby_va),-c(split_up:set_a_trap))%>%\nmutate(caught_other=as.character(caught_other),\ncaught_not=as.character(caught_not),\nunmask_other=as.character(unmask_other))%>%\npivot_longer(cols=contains(\"caught\"),names_to=\"caught\",values_to=\"caught_value\")%>%\npivot_longer(cols=contains(\"captured\"),names_to=\"captured\",values_to=\"captured_value\")%>%\npivot_longer(cols=contains(\"unmask\"),names_to=\"unmask\",values_to=\"unmask_value\")%>%\npivot_longer(cols=contains(\"snack\"),names_to=\"snack\",values_to=\"snack_value\")%>%\npivot_longer(cols=c(non_suspect,arrested),names_to=\"investigate\",values_to=\"investigate_value\")%>%\npivot_longer(cols=c(batman:blue_falcon),names_to=\"super_hero\",values_to=\"super_hero_value\")\n\n\nhead(scoobydoo_long)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nnames(scoobydoo_long)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(scoobydoo_long)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nscoobydoo_long %>% \n  select(date_aired,caught,caught_value) %>%\n  mutate(year=lubridate::year(date_aired)) %>%\n  filter(caught_value==\"TRUE\") %>%\n  ggplot(aes(x=(year/1969)/100000,y=factor(caught),group=caught)) +\n  geom_col(aes(fill=caught)) +\n  guides(fill=\"none\") + \n  labs(title=\"Who caught more within the years?\") +\n  theme_fivethirtyeight() +\n  theme(axis.text.x = element_text(angle=0))\n```\n:::\n\n\n\nPlotting final:\n\n::: {.cell}\n\n```{.r .cell-code}\nscooby_family <- \"Scooby Doo\"\n\ncolors <- c(\"Fred\"=\"#0000CD\",\n            \"Scooby\"=\"#8B3E2F\",\n            \"Shaggy\"=\"#228B22\",\n            \"Daphnie\"=\"#FFD700\",\n            \"Velma\"=\"#FF7F00\")\n\ncaught <- scoobydoo_long %>% \n  select(date_aired,caught,caught_value) %>%\n  mutate(year=lubridate::year(date_aired)) %>%\n  filter(caught_value==\"TRUE\",year==\"1969\") %>%\n  ggplot(aes(caught,fill=caught)) +\n  geom_histogram(aes(y = after_stat(count / max(count))),stat=\"count\") + \n  scale_y_continuous(labels = scales::percent) +\n  scale_x_discrete(labels=c(\"Fred\",\"Scooby\", \"Shaggy\")) +\n  scale_fill_manual(values=c(\"#0000CD\",\"#8B3E2F\",\"#228B22\")) +\n  guides(fill=\"none\") +\n  labs(title=\"Caught\",y=\"\") +\n  theme_fivethirtyeight() +\n  theme(text=element_text(size=16,  family=scooby_family),\n        axis.text.x = element_text(size=10),\n        axis.title.x = element_blank())\n\ncaptured <- scoobydoo_long %>% \n  select(date_aired,captured,captured_value) %>%\n  mutate(year=lubridate::year(date_aired)) %>%\n  filter(captured_value==\"TRUE\",year==\"1969\") %>%\n  ggplot(aes(captured,fill=captured)) +\n  geom_histogram(aes(y = after_stat(count / max(count))),stat=\"count\") + \n  scale_y_continuous(labels = scales::percent) +\n  scale_x_discrete(labels=c(\"Daphnie\",\"Fred\",\"Scooby\", \"Shaggy\",\"Velma\")) +\n  scale_fill_manual(values=c(\"#FFD700\", \"#0000CD\",\"#8B3E2F\",\"#228B22\",\"#FF7F00\")) +\n  guides(fill=\"none\") +\n  labs(title=\"Captured\") +\n  theme_fivethirtyeight() +\n  theme(text=element_text(size=16,  family=scooby_family),\n        axis.text.x = element_text(size=10),\n        axis.title.y = element_blank(),\n        axis.title.x = element_blank())\n\nunmask <- scoobydoo_long %>% \n  select(date_aired,unmask,unmask_value) %>%\n  mutate(year=lubridate::year(date_aired)) %>%\n  filter(unmask_value==\"TRUE\",year==\"1969\") %>%\n  ggplot(aes(unmask,fill=unmask)) +\n  geom_histogram(aes(y = after_stat(count / max(count))),stat=\"count\") + \n  scale_y_continuous(labels = scales::percent) +\n  scale_x_discrete(labels=c(\"Fred\",\"Scooby\", \"Shaggy\",\"Velma\")) +\n  scale_fill_manual(values=c(\"#0000CD\",\"#8B3E2F\",\"#228B22\",\"#FF7F00\")) +\n  guides(fill=\"none\") +\n  labs(title=\"Unmask\",y=\"\") +\n  theme_fivethirtyeight() +\n  theme(text=element_text(size=16,  family=scooby_family),\n        axis.text.x = element_text(size=10),\n        axis.title.x = element_blank() )\n\nsnack <- scoobydoo_long %>% \n  select(date_aired,snack,snack_value) %>%\n  mutate(year=lubridate::year(date_aired)) %>%\n  filter(snack_value==\"TRUE\",year==\"1969\") %>%\n  ggplot(aes(snack,fill=snack)) +\n  geom_histogram(aes(y = after_stat(count / max(count))),stat=\"count\") + \n  scale_y_continuous(labels = scales::percent) +\n  scale_x_discrete(labels=c(\"Daphnie\",\"Fred\",\"Shaggy\",\"Velma\")) +\n   scale_fill_manual(values=c(\"#FFD700\", \"#0000CD\",\"#228B22\",\"#FF7F00\")) +\n  guides(fill=\"none\") +\n  labs(title=\"Snack\") +\n  theme_fivethirtyeight() +\n  theme(text=element_text(size=16,  family=scooby_family),\n        axis.text.x = element_text(size=10),\n        axis.title.y = element_blank(),\n        axis.title.x = element_blank())\n\nrequire(patchwork)\naction_plot <- caught+captured+unmask+snack\n\nimg <- png::readPNG('all5.png')\n\n lealeft <- ggplot()+\n  theme_void() +\n  theme(plot.background = element_rect(fill = \"#87cf80\")) + \n  background_image(img) +\n  action_plot \n \n\ngraphics <- ggarrange(lealeft) \n\nfinal_plot <- annotate_figure(graphics,\n               top = text_grob(\"Scooby-Doo 1969: Percent of \", \n                               color = c(\"#778899\"), face = \"bold\", size = 35,family=\"Scooby Doo\"),\n               bottom = text_grob(\"DataViz: @fgazzelloni DataSource: \\n TidyTuesday week29, Scooby-Doo,Kaggle,ScoobyPedia\",\n                                  color = \"#6C7B8B\",family=\"Scooby Doo\",\n                                  hjust = 0.5, x = 0.5, face = \"bold.italic\", size = 10),\n               left = text_grob(\"\", color = c(\"#778899\"), rot = 90,size=10),\n               right = text_grob(bquote(\"\"), color=c(\"#778899\"),rot = 90,size=10),\n               fig.lab = \"TidyTuesday week29\", fig.lab.face = \"bold.italic\",fig.lab.size=8,\n               fig.lab.pos=\"bottom.right\"\n)\n\nfinal_plot <- final_plot +\n  annotate(geom = \"text\", label=\"Scooby-Doo and Guess Who?\",x = 0.24, y = 0.87, \n           colour = \"#BF3EFF\", size = 9,family=scooby_family) +\n  annotate(geom = \"text\", label=\"Velma\",x = 0.10, y = 0.71, colour = \"#FF7F00\", size = 7,family=scooby_family) +\n  annotate(geom = \"text\", label=\"Shaggy\",x = 0.13, y = 0.82, colour = \"#228B22\", size = 7,family=scooby_family) +\n  annotate(geom = \"text\", label=\"Scooby\",x = 0.23, y = 0.67, colour = \"#8B3E2F\", size = 7,family=scooby_family) +\n  annotate(geom = \"text\", label=\"Fred\",x = 0.33, y = 0.78, colour = \"#0000CD\", size = 7,family=scooby_family) +\nannotate(geom = \"text\", label=\"Daphnie\",x = 0.40, y = 0.72, colour = \"#FFD700\", size = 7,family=scooby_family) \n\n  \nrequire(cowplot)\n\nimg2 <- png::readPNG('car_all5.png')\nimg3 <- png::readPNG('scooby.png')\n\n\nfinal <- ggdraw() +\n  draw_image(img2,  x = 0.4, y = 0.41, scale = .2) +\n  draw_image(img3,  x = -0.41, y = 0.45, scale = .15) +\n  draw_plot(final_plot)\nfinal\n```\n:::\n\n\nSaving:\n\n::: {.cell}\n\n```{.r .cell-code}\nragg::agg_png(here::here(\"w29\", \"w29_scoobidoo.png\"),\n              res = 320, width = 14, height = 8, units = \"in\")\nfinal\n\ndev.off()\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}