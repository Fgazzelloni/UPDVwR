{
  "hash": "3d1b9861db7c0095ad4379dd9e50fc7c",
  "result": {
    "markdown": "---\ntitle: \"Survivors\"\nsubtitle: \"Welcome to TidyTuesday 2021 week 23\"\ndate: \"2021-06-01\"\nimage: \"w23_survivor.png\"\nimage-alt: \"\"\ndescription: \"Networks\"\noutput: html_document\nexecute: \n  eval: false\n---\n\n\n# TidyTuesdat Week 23 ##############################\n\n::: {.cell}\n\n```{.r .cell-code}\n# Survivor TV Show \n# survivoR Package\n# https://github.com/doehm/survivoR\n\n# http://gradientdescending.com/survivor-data-from-the-tv-series-in-r/\n\n\n# install.packages(\"survivoR\")\n\n\n# source of inspiration: \n# https://github.com/TIvanDijk/TidyTuesday/blob/main/Week%2023/survivors.R\n# https://cran.r-project.org/web/packages/ggtext/vignettes/plotting_text.html\n\nlibrary(survivoR)\n\nlibrary(tidytuesdayR)\ntuesdata <- tidytuesdayR::tt_load(2021, week = 23)\n\nchallenges <- tuesdata$challenges\nhead(challenges);dim(challenges)\nviewers <- tuesdata$viewers\nhead(viewers);dim(viewers)\njury_votes <- tuesdata$jury_votes\ncastaways <- tuesdata$castaways\nsummary <- tuesdata$summary\nhead(summary);dim(summary)\n\n#########################\n\n\nhead(castaways);dim(castaways)\n\nlibrary(tidyverse)\nlibrary(ggthemes)\nlibrary(extrafont)\nlibrary(patchwork)\nlibrary(ggtext)\nlibrary(forcats)\nlibrary(ggrepel)\nlibrary(showtext)\nlibrary(cowplot)\nlibrary(magick)\n# fonts()\n\nfont_add_google(\"Roboto\", \"roboto\")\nfont_add_google(\"Roboto Condensed\", \"roboto condensed\")\n\n\n##############################################\n\nlabels <-\n  tibble(\n    labels = c(\n      \"**The 4 Cognitive Functions dealing with '*How Processing Information*'**\",\n      \"Extroverted Sensing = ESTP, ESFP, ISTP, and ISFP                   \",\n      \"Introverted Sensing = ISTJ, ISFJ, ESTJ, and ESFJ                   \",\n      \"Extroverted Intuition = ENTP, ENFP, INTP, and INFP                 \",\n      \"Introverted Intuition = INTJ, INFJ, ENTJ, and ENFJ                 \"\n      ),\n    x = rep(3.5, 5),\n    y = c(0.8,0.7,0.6,0.5,0.4)#rep(1, 5)\n    )\n\npersonality_codes <-ggplot(labels, aes(x, y)) +\n  annotate(\"text\", x = 3, y = 1.45,\n           label = \"Survivor personality code explained\",\n           size = 14,color=\"#A91727\",\n           fontface = \"bold\",\n           family =  \"Roboto Condensed\" ) +\n  geom_text(aes(x=2.8,y=1,family= \"Roboto Condensed\" ),\n            label=\"The Myers-Briggs Personality Type Indicator is a personality classification system that breaks personalities into 16 different categories. \\nEach personality type has specific preferences in how they 1.) perceive the world and how they 2.) make decisions\",\n            color = 'black', size = 4,face=\"bold\")+\n  geom_richtext(aes(label = labels,family= \"Roboto Condensed\"),\n                label.color = NA,\n                vjust = 0.8,hjust=0.2,color=\"#A91727\",size=4,fill=NA) +\n  annotate(geom = \"curve\", x = 1.8, y = 0.6, xend = 2.5, yend = 0.75, curvature = -.2, arrow = arrow(length = unit(2, \"mm\")))+\n  annotate(geom = \"rect\",xmin=0.2,ymin=0.35,xmax =1.8 ,ymax =0.81, color=\"#FEED01\",fill=\"#FEED01\")+\n  annotate(geom = \"text\",x=1,y=0.6,\n           label=\"Each personality type has four cognitive functions:\\n1. dominant\\n2. auxiliary or secondary\\n3. tertiary\\n4. inferior or least developed\",\n           size = 3,color=\"black\",\n           family =  \"Roboto Condensed\")+\n  annotate(\"text\",x=1,y=0.25,\n           label=\"Each of the 16 personality types will have a unique combination of 4 out of 8 cognitive functions\",\n           size = 3,color=\"black\",\n           family =  \"Roboto Condensed\")+\n  scale_x_continuous(limits = c(0, 6.1)) +\n  scale_y_continuous(limits =  c(0.2, 1.5)) +\n  labs(title=\"Survivor (American TV series)\")+\n  theme_void()+\n  theme(plot.title = element_text(hjust=1,vjust=-0.5,face=\"bold\",family = \"Roboto Condensed\"),\n        plot.background = element_rect(fill = \"#EFCC24\"),\n        panel.border = element_blank(),\n        plot.margin = unit(c(1,1,0,1), \"cm\"))\n\n\npersonality_plot <- castaways%>%\n  group_by(personality_type)%>%\n  summarize(avg_age=mean(age),n=n())%>%\n  ungroup()%>%\n  arrange(desc(n))%>%\n  drop_na()%>%\n  ggplot(aes(x=reorder(round(avg_age),avg_age),y=n,\n             color=personality_type,fill=personality_type))+\n  geom_col()+\n  geom_label(aes(y=n,label=paste(personality_type),fill=personality_type),\n            #direction = \"y\",\n            color=\"white\",\n            position= position_stack(vjust=0.5))+\n  scale_fill_survivor(12)+\n  scale_colour_survivor(12)+#8\n  labs(title=\"Personality type by Age group\",\n       x=\"Survivor's Age\",y=\"Group(n)\",\n       fill=\"Personality Type\",color=\"\",\n       caption = \"Viz @fgazzelloni Source: TidyTuesday week 23 & Survivor TV Show, more info @Daniel's Oehm's Website\")+\n  guides(color=FALSE)+\n theme_base()+\n  theme(\n    legend.position = \"none\",\n    plot.background = element_rect(fill=\"#EFCC24\"),\n    plot.title = element_text(color=\"#784937\",family=\"Roboto Condensed\"),\n    plot.caption = element_text(color=\"#784937\",family=\"Roboto Condensed\",size=9,face=\"bold\"),\n    panel.background = element_blank(),\n    panel.border = element_blank(),\n    axis.line = element_line(),\n    axis.title = element_text(family=\"Roboto Condensed\"))\n\n\n\np<-personality_codes / personality_plot\n\n\nimg <- image_read(\"hex-torch.png\")\n\n# Set the canvas where you are going to draw the plot and the image\nfinal <-ggdraw() +\n  # Draw the plot in the canvas setting the x and y positions, which go from 0,0\n  # (lower left corner) to 1,1 (upper right corner) and set the width and height of\n  # the plot. It's advisable that x + width = 1 and y + height = 1, to avoid clipping \n  # the plot\n  draw_plot(p,x = 0, y = 0, width = 1, height = 1) +\n  # Draw image in the canvas using the same concept as for the plot. Might need to \n  # play with the x, y, width and height values to obtain the desired result\n  draw_image(img,x = -0.85, y = 0.8, width = 1.85, height = 0.2)\n\n\n\n\n###################### SAVING ############################\n\n\nragg::agg_png(here::here(\"w23\",\"w23_survivor.png\"),\n              res = 320, width = 14, height = 8, units = \"in\")\nfinal\n\ndev.off()\n\n\n\n#### ATTACHING LOGO ############################\nlibrary(ggimage)\nlibrary(magick)\n\n\ntidy_logo<-image_read(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/static/plot_logo.png\") %>%\n  image_resize(\"300x300\")\n\n\nfinal_plot <- image_read(\"w23_survivor.png\")\n\nattached_logo <- image_composite(final_plot, tidy_logo,\n                                 operator=\"atop\",\n                                 gravity=\"northeast\") # tell R where to put the logo\n\n\nimage_write(attached_logo, path = \"w23_survivor.png\",\n            format = \"png\") # save final plot\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}