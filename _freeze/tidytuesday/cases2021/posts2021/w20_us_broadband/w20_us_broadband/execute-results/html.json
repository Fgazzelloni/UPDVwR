{
  "hash": "929966bf5a89084fec76b08a457d72c6",
  "result": {
    "markdown": "---\ntitle: \"US Broadband\"\nsubtitle: \"Welcome to TidyTuesday 2021 week 20\"\ndate: \"2021-05-11\"\nimage: \"w20_us_broadband.png\"\nimage-alt: \"\"\ndescription: \"Networks\"\noutput: html_document\nexecute: \n  eval: false\n---\n\n::: {.cell}\n\n```{.r .cell-code}\n# Week 20 US Broadband\n# source of data:\n# https://github.com/rfordatascience/tidytuesday/blob/master/data/2021/2021-05-11/readme.md\n# https://github.com/microsoft/USBroadbandUsagePercentages\n\n# load libraries ------------------------------------\nlibrary(tidytuesdayR)\nlibrary(tidyverse)\nlibrary(DataExplorer)\n\nlibrary(zipcodeR)\nlibrary(janitor)\nlibrary(stringr)\n\n\n# load data -----------------------------------\ntuesdata <- tidytuesdayR::tt_load(2021, week = 20)\n\nbroadband <- tuesdata$broadband\nbroadband_zipcode <- tuesdata$broadband_zip\n\n#broadband_zipcode<-read.csv(\"https://raw.githubusercontent.com/microsoft/USBroadbandUsagePercentages/master/dataset/broadband_data_zipcode.csv\")\n# contains mean absolute error (MAE), mean signed deviation (MSD)\n\n# check missing data and str------------------------------\nprofile_missing(broadband);head(broadband)\nprofile_missing(broadband_zipcode);head(broadband_zipcode)\n\nstr(broadband);dim(broadband)\nstr(broadband_zipcode);dim(broadband_zipcode)\n\n\n# data wrangling -------------------------------\nnames(broadband)<-make.names(tolower(names(broadband)))\nnames(broadband_zipcode)<-make.names(tolower(names(broadband_zipcode)))\n\nbroadband%>%filter(str_detect(\"-\",broadband$broadband.availability.per.fcc))\nbroadband$broadband.availability.per.fcc[broadband$broadband.availability.per.fcc==\"-\"]<-\"0\"\nbroadband$broadband.availability.per.fcc<-as.double(broadband$broadband.availability.per.fcc)\n\nbroadband%>%arrange(broadband.usage)\nbroadband$broadband.usage[broadband$broadband.usage==\"-\"]<-\"0\"\nbroadband$broadband.usage<-as.double(broadband$broadband.usage)\n\n###########################################################\n\nbroadband <- broadband %>%\n  mutate(county.name=sub(\" County\",\"\",county.name)) %>%\n  separate(county.id,into=c(\"state.id\",\"county.id\"),sep=-3) %>%\n  mutate(county.name = case_when(\n    county.name==\"LaSalle Parish\" ~ \"La Salle Parish\",\n    TRUE~county.name))\n\n# separate the county.id by state and county---------------\n  broadband_zipcode <- broadband_zipcode %>%\n  separate(county.id,into=c(\"state.id\",\"county.id\"),sep=-3)\n\n\n#####################################\n# in broadband_zipcode\n# some postal codes are made of 4 digits, to use \"geocode_zip\"\n# need 5 digits, so add a zero at the begin of the string\n\n# plyr::count(sprintf(\"%05d\", broadband_zipcode$postal.code))\n\nbroadband_zipcode$postal.code<-sprintf(\"%05d\", broadband_zipcode$postal.code)\n\n# broadband%>%filter(str_detect(county.name,\"Bedford\"))\n\n\n##################################################\n# make a unified dataset with broadband, postal codes and geodada------------------------------\nmy_df <- broadband%>%\n  full_join(broadband_zipcode, by= c(\"st\",\"state.id\",\"county.id\"))%>%\n  select(1,2,3,7,8,5,6,9:12) %>%\n  drop_na()\n\n\nnames(my_df)<-c(\"st\",\"state.id\",\"county.id\",\"county.name\",\"postal.code\",\"brd.available\",\"usage.1119\",\"usage.1020\",\"mae\",\"alpha\",\"msd\")\n\nhead(my_df);dim(my_df)\n\n\n#########################################\n# check of the counties in the data sets ----------\nc$county.name.x[!c$county.name.x%in%d$county.name.y]\nd$county.name.y[!d$county.name.y%in%c$county.name.x]\n\nss<-broadband%>%\n  full_join(broadband_zipcode, by= c(\"st\",\"state.id\",\"county.id\")) %>%\n  filter(county.name.x %in% c(\"Bedford city\",\n                              \"Covington city\",\n                              \"Emporia city\",\n                              \"Fairfax city\",\n                              \"Kusilvak Census Area\",\n                              \"Lexington city\",\n                              \"Manassas Park city\",\n                              \"Martinsville city\",\n                              \"Oglala\",\n                              \"Otter Tail\")) %>%\n  group_by(st,state.id,county.id) %>%\n  summarize(unique(county.name.x),unique(county.name.y),unique(postal.code))\n####################################\n\n\n# make a new column with y/n broadband in the county\nmy_df <- my_df %>%\n  mutate(broadband.id=ifelse(brd.available==0,\"no\",\"yes\"))\n\n\n# find the geocodes with postal codes -------------------\ngeocode_zip<-geocode_zip(my_df$postal.code)\n\n\n# add the geocodes------------------------------\ns<-my_df%>%\n  inner_join(geocode_zip,by=c(\"postal.code\"=\"zipcode\"))%>%\n  unite(\"id\",state.id:county.id,sep= \"\")\n\n\n# load the libraries for plotting ---------------------\nlibrary(sf)\nlibrary(raster)\nlibrary(spData)\nlibrary(spDataLarge)\n\nlibrary(maps)\nlibrary(viridis)\nlibrary(ggthemes)\nlibrary(RColorBrewer)\n\n# add font to mac---\nlibrary(showtext)\nlibrary(extrafont)\n#font_import(pattern=\"world of water\")\nloadfonts()\nfonts()\n\n# mapping --------------------------------\n\nmypalette<-display.brewer.pal(7,\"BrBG\")\nus_county_map <- map_data(\"county\")\n\nfinal_plot<-ggplot()+\n  geom_polygon(data=us_county_map,aes(x=long,y=lat,group = group),\n               fill=NA,color = \"lightblue\")+\n  geom_point(data=subset(s,lat>25&lat<50),\n             aes(x=lng,y=lat, group =st,color=brd.available),\n             alpha=0.3,size=0.5)+\n  scale_color_viridis(labels = scales::percent)+\n  labs(title=\"America's Broadband\",\n       subtitle=\"available values by County\",\n       caption=\"Viz. Federica Gazzelloni | US Broadband,Microsoft GitHub,The Verge | TidyTuesday week20\",\n       color=\"\")+\n  theme_map()+\n  theme(plot.title =element_text(size=40,face=\"bold\",family =\"Courier New\",color=\"black\"),\n        plot.subtitle =element_text(size=25,face=\"bold\",family =\"Courier New\"),\n        plot.caption =element_text(size=9,face=\"bold\",family =\"Courier New\"),\n        plot.title.position = \"panel\",\n        plot.margin = margin(5,5,5,5),\n        legend.text = element_text(size=8,family =\"Courier New\"))\n\n\n################################################################################\n\n\n####### SAVING ######################################\nragg::agg_png(here::here(\"tidytuesday_Broadband.png\"),\n              res = 320, width = 14, height = 8, units = \"in\")\nfinal_plot\n\ndev.off()\n\n\n\n#### ATTACHING LOGO ############################ \nlibrary(ggimage)\nlibrary(magick)\n\n\ntidy_logo<-image_read(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/static/plot_logo.png\") %>%\n  image_resize(\"300x300\")\n\n\nfinal_plot <- image_read(\"tidytuesday_Broadband.png\")\n\nattached_logo <- image_composite(final_plot, tidy_logo,\n                                 operator=\"atop\",\n                                 gravity=\"northeast\") # tell R where to put the logo\n\n\nimage_write(attached_logo, path = \"tidytuesday_Broadband.png\", format = \"png\") # save final plot\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}