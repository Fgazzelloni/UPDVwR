{
  "hash": "f77fec98eaeda273df307bbca2ad6104",
  "result": {
    "markdown": "---\ntitle: \"Billboard\"\nsubtitle: \"Welcome to TidyTuesday 2021 week 38\"\ndate: \"2021-09-14\"\nimage: \"w38_billboard.png\"\nimage-alt: \"\"\ndescription: \"Networks\"\noutput: html_document\nexecute: \n  eval: false\n---\n\n\nLoad libraries:\n\n\n::: {.cell paged.print='false'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n\n\nLoad data:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbillboard <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-09-14/billboard.csv')\naudio_features <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-09-14/audio_features.csv')\n```\n:::\n\n\n\nData wrangling and saving data on a csv file:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_df <- billboard %>%left_join(audio_features,by=c(\"song\",\"song_id\",\"performer\"))%>%\n  select(-url,-instance,-key,-mode,-valence,-tempo,-time_signature,-previous_week_position,-starts_with(\"spotify\"))\n\n#write_csv(my_df,here::here(\"w38/my_df.csv\"))\nmy_df <- read.csv(here::here(\"w38/my_df.csv\"))\n\nmy_df\n```\n:::\n\n\n\nI'd like to study the \"speackness\" variable:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(my_df$speechiness)\n\nDataExplorer::profile_missing(my_df)\n```\n:::\n\n\nSome values are missing (about 13% of the total), we leave them out for this visualization.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_df <- my_df%>%drop_na(speechiness)\n```\n:::\n\n\nLoad fonts to use in the `theme()`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(extrafont)\n#fonts()\n```\n:::\n\n\nMake a plot:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot <- my_df %>%#pull(peak_position)%>%summary(peak_position)\n  mutate(speechiness_class=case_when(speechiness<=0.33~\"Most likely music\",\n                                            speechiness>0.33&speechiness<=0.66~\"Contain music and speech\",\n                                            speechiness>0.66&speechiness<=0.75~\"Probably spoken words\",\n                                            speechiness>0.75~\"Exclusively speech-like\"))%>%\n  mutate(peak_position_class=case_when(peak_position<=15~\"low\",\n                                            peak_position>15&peak_position<=30~\"medium\",\n                                            peak_position>30&peak_position<=50~\"high\",\n                                            peak_position>=50~\"top\"))%>%\n  \n  ggplot(aes(x=-log10(speechiness)))+ #aes(x=speechiness))+\n  geom_histogram(binwidth=0.03,aes(color=factor(peak_position_class),fill=factor(peak_position_class)))+\n  #guides(color=\"none\",fill=\"none\")+\n  #scale_x_reverse()+\n  labs(subtitle=\"The Billboard Hot 100 is the music industry standard record chart in the United States for songs, \\npublished weekly by Billboard magazine. (Billboard Top 100 - Wikipedia)\\nCharts show the `Speechiness` distributions based on peak positions on radio play, and online streaming in the United States.\\n\",\n       color=\"Peak position\",fill=\"Peak position\",\n       x=\"Speechiness values (Log10-tranformation)\",y=\"\")+\n  facet_wrap(~speechiness_class,scales=\"free\")+\n  theme(text = element_text(family=\"Luminari\",color=\"midnightblue\",face = \"bold\"),\n        plot.subtitle = element_text(family=\"Luminari\",color=\"midnightblue\",size=14,vjust=-0.5),\n        legend.position = \"top\", #c(0.1,0.85),\n        legend.background = element_blank(),\n        legend.text = element_text(face = \"bold\",color=\"midnightblue\",size=14),\n        plot.background = element_blank(),\n        panel.background = element_blank(),\n        strip.background = element_blank(),\n        strip.text = element_text(face = \"bold\",color=\"midnightblue\",size=14),\n        axis.text = element_text(face = \"bold\",color=\"midnightblue\",size=14)\n        )\n```\n:::\n\n\n\nAdd some features such as phrases of explanation, add some logos and other little information:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggpubr)\ngraphics <- ggarrange(plot)+\n  theme(plot.background = element_rect(fill=NA, color = NA))\n\nfinal_plot <- annotate_figure(graphics,\n                              top = text_grob(\"Top 100 Billboard\",\n                                              color = \"#9A32CD\", face = \"bold\", size = 45,\n                                              family = \"Luminari\"),\n                              bottom = text_grob(\"Infographics Federica Gazzelloni DataSource: Top 100 Billboard from Data.World\",\n                                                 color = \"black\",family = \"Luminari\",\n                                                 hjust = 0.5, x = 0.5, face = \"bold.italic\", size = 15),\n                              left = text_grob(\"#TidyTuesday week38: Top 100 Billboard\", color = c(\"#778899\"), rot = 90,size = 30),\n                              right = text_grob(bquote(\"Top 100 Billboard MUSIC ðŸŽ¼\"), color = c(\"#778899\"),rot = 90,size = 30),\n                              fig.lab = \"TidyTuesday week38\", fig.lab.face = \"bold.italic\",fig.lab.size = 12,\n                              fig.lab.pos = \"bottom.right\"\n)\n\n\n\nfinal_plot <-\n  final_plot +\n\n  annotate(geom = \"text\", label = \"The Billboard Hot 100 \\nwas first released in August 1958\",\n           x = 0.11, y = 0.74,colour = \"#00D2BE\",size = 4,family = \"Luminari\") +\n  annotate(geom = \"curve\", x = 0.07, xend = 0.09, y = 0.85, yend = 0.78, colour = \"#00D2BE\", curvature = .3, arrow = arrow(length = unit(2, \"mm\")),family = \"Luminari\",size=1.5) +\n\n  \n  \n  annotate(geom = \"text\", label = \"a good balance hits \\nin all positions\",\n           x = 0.3, y = 0.6,colour =\"#6B8E23\",size = 4,family = \"Luminari\") +\n  annotate(geom = \"curve\", x = 0.25, xend = 0.28, y = 0.53, yend = 0.69, colour = \"#6B8E23\", curvature = -.3, arrow = arrow(length = unit(2, \"mm\")),family = \"Luminari\",size=1.5) +\n\n  \n  \n  annotate(geom = \"text\", label = \"Peak positions high \\nare most likely found with \\n`Most likely music`\",\n           x = 0.18, y = 0.63,colour = \"#FF4040\",size = 4,family = \"Luminari\") +\n  annotate(geom = \"curve\", x = 0.11, xend = 0.10, y = 0.63, yend = 0.70, colour = \"#FF4040\", curvature = -.3, arrow = arrow(length = unit(2, \"mm\")),family = \"Luminari\",size=1.5) +\n  \n  \n\n  annotate(geom = \"text\", label = \"all music hits \\nthe top high with higher frequency\",x = 0.22, y = 0.25, colour = \"#9A32CD\", size = 5,family = \"Luminari\") +\n\n  annotate(geom = \"text\", label = \"MUSIC ðŸŽ¼\", x = 0.18, y = 0.03, colour = \"red\", size = 7,family = \"Luminari\")+\n\n\n  annotate(geom = \"text\", label = \"worthy speech hit \\nthe top-high\\n without music \\nvery rarely\", x = 0.62, y = 0.34, colour = \"#FF7256\", size = 5,family = \"Luminari\") +\n  annotate(geom = \"curve\", x = 0.68, xend = 0.64, y = 0.52, yend = 0.41, colour = \"#FF7256\", curvature = -.3, arrow = arrow(length = unit(2, \"mm\")),family = \"Luminari\",size=1.5)\n\nlibrary(ggimage)\nlibrary(magick)\nlibrary(cowplot)\n\n\nimg <- image_read(here::here(\"w38/colored_Billboard_logo.png\"))\nimg2 <- image_read(here::here(\"w38/Billboard_Hot_100_logo.png\"))\n\nfinal <- ggdraw() +\n  draw_plot(final_plot) +\n  draw_image(img, x = 0.85, y = 0.39,width = 0.12)+\n  draw_image(img2, x = 0.1, y = -0.2,width = 0.12)\n```\n:::\n\n\nSave final plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nragg::agg_png(here::here(\"w38/w38_billboard.png\"),\n              res = 320, width = 16, height = 8, units = \"in\")\nfinal\n\ndev.off()\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}