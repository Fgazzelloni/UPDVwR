{
  "hash": "3a5cf63c477d8a590337186bb20ed4e9",
  "result": {
    "markdown": "---\ntitle: \"Emmy Awards\"\nsubtitle: \"Welcome to TidyTuesday 2021 week 39\"\ndate: \"2021-09-21\"\nimage: \"w39_emmy_awards.png\"\nimage-alt: \"\"\ndescription: \"Networks\"\noutput: html_document\nexecute: \n  eval: false\n---\n\n\n\n# TidyTuesday\n# week 39 nominees EMMYS'\n\n# load libraries --------------\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\nlibrary(extrafont)\nlibrary(showtext)\n#font_families_google()\nfont_add_google(\"Roboto Condensed\",\"Roboto Condensed\")\n\nlibrary(patchwork)\nlibrary(cowplot)\n\n# load the data ------\n\nnominees <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-09-21/nominees.csv')\nhead(nominees)\n\n# data wrangling -------\n# arrange the set to have the count of the types\n# add a column with the icons for types\n\nmy_df <-\n  nominees %>%\n  filter(year>=2015) %>%\n  filter(distributor==c(\"HBO\")) %>%\n  count(year,distributor,type,sort=T) %>%\n  mutate(distributor_lab=paste0(\"HBO_\",year))%>%\n  mutate(img = if_else(\n      type == \"Winner\",\n      \"<img src='w39/emmy_winner.png' width='12'/>\",\n      \"<img src='w39/emmy_nom.png' width='12'/>\"\n    ))\n\n\n\n# set a special vector for the facet strip names with the type counts\n\ntype_c <- c(\"HBO_2015\"= \"219 to 140\",\n            \"HBO_2016\"= \"198 to 75\",\n            \"HBO_2017\"= \"216 to 118\",\n            \"HBO_2018\"= \"302 to 96\",\n            \"HBO_2019\"= \"297 to 146\",\n            \"HBO_2020\"= \"217 to 124\",\n            \"HBO_2021\"= \"261 to 66\") \n\n\n# make the plot -------\n\nlibrary(waffle)\nlibrary(ggtext)\nlibrary(ggthemes)\n\n\nplot <- ggplot(my_df, aes(fill = type, values = n,label = img)) +\n  facet_wrap(distributor_lab~year, nrow = 1, strip.position = \"bottom\",\n             labeller = labeller(distributor_lab  = as_labeller(type_c))) +\n  stat_waffle(geom = \"richtext\", fill = NA, label.color = NA, flip = TRUE, n_rows = 10) +\n  scale_x_discrete() + \n  scale_y_continuous(labels = function(x) x * 10, expand = c(0,0)) +\n  ggthemes::scale_fill_fivethirtyeight(name=NULL) +\n  coord_equal() +\n  labs(title=\"\\n\",subtitle=\"\\n\",\n    caption=\"Source: The data this week comes from emmys.com\") +\n  theme_minimal(base_family = \"Roboto Condensed\") +\n  theme(text=element_text(family = \"Roboto Condensed\"),\n        axis.ticks.y = element_blank(),\n        axis.title.y = element_blank(),\n        axis.title.x = element_blank(),\n        axis.text.y = element_blank(),\n        axis.text.x = element_blank(),\n        strip.text = element_text(family = \"Roboto Condensed\",size=22,face=\"bold\"),\n        legend.position = \"top\",\n        panel.grid.major.x = element_line(color=\"grey50\",size=10),\n        panel.grid.minor.x = element_line(color=\"grey50\",size=10),\n        plot.margin = margin(5,5,1,5,unit = \"pt\"),\n        plot.background = element_rect(color=\"#F0F8FF\", fill=\"#F0F8FF\"),\n        plot.caption.position = \"panel\",\n        plot.caption = element_text(family = \"Roboto Condensed\",color= \"grey40\", face=\"bold\",size=30, hjust=0,vjust=-1)) \n\n\n#------------finish touches\n\nlibrary(ggimage)\nlibrary(magick)\nlibrary(cowplot)\n\n\nlibrary(ggpubr)\n\ngraphics <- ggarrange(plot) +\n  theme(plot.background = element_rect(fill = \"#F0F8FF\", color = \"#F0F8FF\"))\n\n\n# annotate the plot\n\nfinal_plot <- annotate_figure(graphics,\n                              top = text_grob(\"EMMY AWARD WINNERS AND NOMINEES\",\n                                              color = c(\"grey28\"), face = \"bold\", size = 34,\n                                              family = \"Roboto Condensed\"),\n                              bottom = text_grob(\"Infographics Federica Gazzelloni DataSource: TidyTuesday week39\",\n                                                 color = \"grey28\",family = \"Roboto Condensed\",\n                                                 hjust = 0.5, x = 0.5, face = \"bold.italic\", size = 24),\n                              left = text_grob(\"\", color = c(\"#778899\"), rot = 90,size = 12),\n                              right = text_grob(bquote(\"\"), color = c(\"#778899\"),rot = 90,size = 10),\n                              fig.lab = \"\", fig.lab.face = \"bold.italic\",fig.lab.size = 8,\n                              fig.lab.pos = \"bottom.right\"\n)\n\nfinal_plot <-\n  final_plot +\n\n  annotate(geom = 'segment',y = 0.78, yend = 0.93, x = 0.1,xend = 0.1, color=\"#8A2BE2\", size = 9) +\n\n  annotate(geom = \"text\", label = \"HBO RECORD AT THE EMMYS \\nAWARDS AND NOMINEES\",\n           x = 0.44, y = 0.875,colour = \"black\",size = 16,family = \"Roboto Condensed\",fontface=\"bold\") +\n\n  annotate(geom = \"text\", label = \"Number of Emmy nominations and wins for HBO\",\n           x = 0.44, y = 0.79,colour = \"grey40\",size = 10,family = \"Roboto Condensed\") +\n  \n  annotate(geom = \"text\", label = \"Winner\",\n         x = 0.5, y = 0.1,colour = \"grey50\",size = 8,family = \"Roboto Condensed\") +\n  annotate(geom = \"text\", label = \"Nominee\",\n         x = 0.32, y = 0.1,colour = \"grey50\",size = 8,family = \"Roboto Condensed\") \n\n\n# add the images for the legend keys \n\nimgWin <- image_read(here::here(\"w39/emmy_winner.png\"))\nimgNom <- image_read(here::here(\"w39/emmy_nom.png\"))\nimgHBO <- image_read(here::here(\"w39/hbo.png\"))\n\nfinal <- ggdraw() +\n  draw_plot(final_plot) +\n  draw_image(imgWin, x = 0.55, y = -0.4,width = 0.06)+\n  draw_image(imgNom, x = 0.37, y = -0.4,width = 0.06)+\n  draw_image(imgHBO, x = 0.1, y = -0.1,width = 0.12)\n\n\n\n## save final plot ----\n\nragg::agg_png(here::here(\"w39/w39_nominees.png\"),\n              res = 320, width = 12, height = 14, units = \"in\")\nfinal\n\ndev.off()\n\n\n\n# read the image, attach the Tidytuesday logo and save it --------------------------\n\n\ntidy_logo <- image_read(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/static/plot_logo.png\") %>%\n  image_resize(\"300x300\")\n\ntidy_final <- image_read(here::here(\"w39/w39_nominees.png\"))\nattached_logo <- image_composite(tidy_final, tidy_logo,\n                                 operator = \"atop\",\n                                 gravity = \"southeast\")\n\nimage_write(attached_logo, path = \"w39_nominees.png\", format = \"png\")\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}