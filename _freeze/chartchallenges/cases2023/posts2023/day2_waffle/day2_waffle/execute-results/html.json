{
  "hash": "cb012cb3d35d8475fe50dbdad5f31ea0",
  "result": {
    "markdown": "---\ntitle: 'Waffle'\nsubtitle: 'Welcome to #30DayChartChallenge 2023 day 2'\ndate: '2023-04-02'\nimage: 'day2_waffle.png'\nimage-alt: ''\ndescription: 'Networks'\noutput: html_document\nexecute: \n   eval: false\n---\n\n\n\n\nLoad the libraries\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntuesdata <- tidytuesdayR::tt_load(2022, week = 52)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n--- Compiling #TidyTuesday Information for 2022-12-27 ----\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n--- There are 2 files available ---\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n--- Starting Download ---\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tDownloading file 1 of 2: `tlBooks.csv`\n\tDownloading file 2 of 2: `tlFootnotes.csv`\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n--- Download complete ---\n```\n:::\n\n```{.r .cell-code}\ntlBooks <- tuesdata$tlBooks\ntlFootnotes<-tuesdata$tlFootnotes\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntlBooks%>%names\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"year\"               \"title\"              \"series\"            \n [4] \"anthology\"          \"format\"             \"number\"            \n [7] \"novelization\"       \"setting\"            \"stardate_start\"    \n[10] \"stardate_end\"       \"detailed_date\"      \"section\"           \n[13] \"primary_entry_year\" \"footnote\"          \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntlFootnotes%>%names\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"footnote\" \"text\"    \n```\n:::\n:::\n\n\nJoin the two sets by `footnote`\n\nThe new dataset combines, year, title, ... with the footnote of the `Star Trek Timelines`.\nThe data comes from the {rtrek} package by Georgios Karamanis.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- tlBooks %>%\n  inner_join(tlFootnotes,by=\"footnote\")\n\ndf%>%DataExplorer::profile_missing()%>%arrange(pct_missing)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 15 × 3\n   feature            num_missing pct_missing\n   <fct>                    <int>       <dbl>\n 1 year                         0      0     \n 2 title                        0      0     \n 3 format                       0      0     \n 4 novelization                 0      0     \n 5 setting                      0      0     \n 6 footnote                     0      0     \n 7 text                         0      0     \n 8 series                      28      0.0568\n 9 section                    265      0.538 \n10 number                     302      0.613 \n11 anthology                  325      0.659 \n12 primary_entry_year         367      0.744 \n13 stardate_start             406      0.824 \n14 detailed_date              425      0.862 \n15 stardate_end               464      0.941 \n```\n:::\n:::\n\n\n## How to make a `Waffle`\n\nThis is a little example from: [https://r-charts.com/part-whole/waffle-chart-ggplot2/](https://r-charts.com/part-whole/waffle-chart-ggplot2/)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# install.packages(\"waffle\", repos = \"https://cinc.rud.is\")\nlibrary(waffle)\n\n# Vector\nx <- c(30, 25, 20, 5)\n\n# Waffle chart\nwaffle(x, rows = 8)\n```\n\n::: {.cell-output-display}\n![](day2_waffle_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\nIn this dataset there are three formats: book, episode and story\n\n::: {.cell}\n\n```{.r .cell-code}\ndf%>%\n  count(format)%>%\n  waffle(rows=20)\n```\n:::\n\n\n### Using `ggplot2`\n\nThis `Waffle` is made of 12 different colors for identifying the `SSeries`. Here are used many colors from the `trekcolors` package for coloring the `series` of different colors. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# install.packages(\"trekcolors\")\nlibrary(trekcolors)\n# trekcolors::lcars_colors()\n```\n:::\n\n\n\nThe fonts are from the `trekfont` package.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# install.packages(\"trekfont\")\nlibrary(trekfont)\n# trekfont::show_trekfonts()\nlibrary(showtext)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: sysfonts\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: showtextdb\n```\n:::\n\n```{.r .cell-code}\nfont <- c(\"Khan\", \"StarNext\", \"FederationDS9Title\", \"Federation\", \"Klingon\", \"ModernVulcan\", \"TNGcast\", \"FederationStarfleet\")\npath <- system.file(paste0(\"fonts/\", font, \".ttf\"), package = \"trekfont\")\nfor(i in seq_along(font)) font_add(font[i], path[i])\nfont_families()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"sans\"                \"serif\"               \"mono\"               \n [4] \"wqy-microhei\"        \"Khan\"                \"StarNext\"           \n [7] \"FederationDS9Title\"  \"Federation\"          \"Klingon\"            \n[10] \"ModernVulcan\"        \"TNGcast\"             \"FederationStarfleet\"\n```\n:::\n\n```{.r .cell-code}\nshowtext_auto(enable = TRUE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(waffle)\ndf%>%\n  count(series)%>%\n  drop_na()%>%\n  waffle(rows = 20, size = 0.5)+\n  scale_fill_manual(values =as.character(lcars_colors())) +\n  # Waffle plot\n  #ggplot(aes(fill = series, values = n)) +\n  #geom_waffle(n_rows = 20, size = 0.5, colour = \"white\") +\n  #scale_fill_manual(values =as.character(lcars_colors())) +\n  coord_equal() +\n  scale_x_continuous(expand = c(0, 0))+\n  labs(title=\"Star Trek Timelines Series\",\n       subtitle = \"\",\n       caption=\"DataSource: #TidyTuesday 2022 week52 - Star Trek Timelines\\nDataViz: Federica Gazzelloni #30DayChartChallenge 2023 Day2 - Waffle\\n\")+\n  theme_void()+\n  theme(text = element_text(family= \"StarNext\",size=14),\n        #legend.position = \"bottom\",\n        plot.title = element_text(size=50,hjust = 0.3,vjust = 0),\n        plot.caption = element_text(size=20,hjust = 0.4,family=\"FederationDS9Title\"),\n        panel.background = element_rect(fill=\"#9977AA\",color=\"#9977AA\"),\n        plot.background = element_rect(fill=\"#9977AA\",color=\"#9977AA\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nScale for fill is already present.\nAdding another scale for fill, which will replace the existing scale.\nCoordinate system already present. Adding new coordinate system, which will\nreplace the existing one.\nScale for x is already present.\nAdding another scale for x, which will replace the existing scale.\n```\n:::\n\n::: {.cell-output-display}\n![](day2_waffle_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave(\"ss.png\",\n       width = 6,height = 5.5,\n       bg=\"#9977AA\",\n       dpi=200)\n```\n:::\n",
    "supporting": [
      "day2_waffle_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}