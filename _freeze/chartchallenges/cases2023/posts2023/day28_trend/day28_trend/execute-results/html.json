{
  "hash": "7f0383b506c713c6069a6a0f68ca385a",
  "result": {
    "markdown": "---\ntitle: 'Trend'\nsubtitle: 'Welcome to #30DayChartChallenge 2023 day 28'\ndate: '2023-04-28'\nimage: 'day28_trend.gif'\nimage-alt: ''\ndescription: 'Networks'\noutput: html_document\nexecute: \n   eval: false\n---\n\n\n\n> Gazzelloni F. (2023), Data Visualization: Australia GDP per capita Trend\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(fpp3)\nlibrary(tidyverse)\naus_economy <- global_economy |>\n  filter(Code == \"AUS\") |>\n  mutate(Pop = Population / 1e6,\n         GDP=GDP/Population)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\naus_economy |>\nautoplot(GDP) +\n  labs(y = \"Millions\", title = \"Australian population\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfit <- aus_economy |>\n  model(\n    AAN = ETS(Pop ~ error(\"A\") + trend(\"A\") + season(\"N\"))\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfc <- fit |> forecast(h = 10)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(fable)\nlibrary(tsibbledata)\n\nalpha_range <- seq(0.1, 0.9, by = 0.1)\n\nfits <- list() # create an empty list to store the model fits\nfor (alpha in alpha_range) {\n  fit <- aus_economy %>%\n    model(ETS(GDP ~ error(\"A\") +\n                trend(\"A\", alpha = alpha) +\n                season(\"N\")))\n  fits[[as.character(alpha)]] <- fit\n  # store the fit in the list using alpha as the key\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(purrr)\npred <-\n  map2_dfr(fits, \n           alpha_range, \n           ~ as_tibble(.x %>% augment() %>% mutate(alpha = .y))) %>%\n  select(Year,GDP,.fitted,alpha)\n\npred%>%head\n```\n:::\n\n\nAnimate\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolors=scales::hue_pal(l = 90)(9)\nmy_colors <- c(\"#4E79A7\", \"#F28E2B\", \"#E15759\", \"#76B7B2\", \"#59A14F\", \"#EDC948\", \"#B07AA1\", \"#FF9DA7\", \"#9C755F\")\n\n\noptions(scipen = 999)\nlibrary(gganimate)\np <- aus_economy |>\n  autoplot(GDP,linewidth=1) +\n  geom_line(aes(\n    y = .fitted,\n    group = alpha,\n    col = factor(alpha)\n  ),\n  linewidth=1,\n  data = pred) +  \n  geomtextpath::geom_texthline(yintercept = mean(aus_economy$GDP),\n                               hjust=0.3,\n                               label=\"Avg value\")+\n transition_states(alpha,\n                   transition_length = 2,\n                   state_length = 1) +\n ease_aes('linear') +\n  scale_y_continuous(expand = c(0,0),\n                     labels = scales::label_number(suffix = \"K\", scale = 1e-3))+\n  scale_x_continuous(n.breaks = 6)+\n  scale_color_manual(values=my_colors)+\n  labs(y = \"GDP per capita\",\n       x=\"Year\",\n       color=\"Alpha\",\n       title=\"Australia's GDP Exponential Smoothing model\\nAlpha {closest_state}\",\n       caption=\"#30DayChartChallenge Day 28 Trend | DataSource: {fpp3} global_economy\\nDataViz: Federica Gazzelloni\")+\n  ggthemes::theme_economist_white()+\n  theme(text=element_text(family=\"Roboto Condensed\"),\n        plot.background = element_rect(color=\"gold\",fill=\"gold\"),\n        panel.background = element_rect(color=\"#efdaa0\",fill=\"#efdaa0\"))+\n    guides(color=\"none\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\np\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nanim_save(\"day28_trend.gif\", \n          animate(p, fps = 10, duration = 10))\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}