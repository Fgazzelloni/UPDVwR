{
  "hash": "80ef9f1790a3fd494db6c18d7eafb290",
  "result": {
    "markdown": "---\ntitle: 'Slope'\nsubtitle: 'Welcome to #30DayChartChallenge 2023 day 5'\ndate: '2023-04-05'\nimage: 'day5_slope.png'\nimage-alt: ''\ndescription: 'Networks'\noutput: html_document\nexecute: \n   eval: false\n---\n\n\n\n\nLooking at making **slopes** for the **#30DayCahrtChallenge 2023 - day 5**\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\ntuesdata <- tidytuesdayR::tt_load(2023, week = 03)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nartists <- tuesdata$artists\nartists%>%head\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nartists%>%DataExplorer::profile_missing()%>%arrange(-pct_missing)\n```\n:::\n\n\n\n\n413 Artistis,\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(artists)+\n  geom_point(aes(x = artist_unique_id,y=artist_nationality))+\n  facet_wrap(~artist_race)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(artists,aes(x = year, y = space_ratio_per_page_total, group = artist_unique_id)) +\n  geom_line()+\n  facet_wrap(~artist_gender)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nartists %>%\n  filter(artist_gender==\"Female\") %>%\nggplot(aes(x = year, y = space_ratio_per_page_total, group = artist_unique_id)) +\n  geom_line()+\n  facet_wrap(~artist_nationality)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nartists %>%\n  filter(artist_gender==\"Female\",\n         artist_nationality==\"French\",\n         artist_race==\"White\") %>%\nggplot(aes(x = year, y = space_ratio_per_page_total, group = artist_unique_id)) +\n  geom_line()+\n  facet_wrap(~book)\n```\n:::\n\n\n\n**Giorgio de Chirico** space_ratio_per_page_total along the time.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nartists%>%\n  filter(artist_name==\"Giorgio de Chirico\") %>%\n  ggplot(\n       aes(x = year, y = space_ratio_per_page_total, group = artist_unique_id)) +\n  geom_point()+\n  geom_smooth(method = \"lm\")\n  geom_abline(slope=-0.000050,intercept = mean(artists$space_ratio_per_page_total))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(artists,\n       aes(x = year, y = space_ratio_per_page_total, group = artist_unique_id)) +\n  geom_line()+\n  facet_wrap(vars(artist_nationality))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nartists%>%\n  filter(artist_nationality==\"Italian\")%>%#count(year)\n  mutate(year=as.integer(year)) %>%\nggplot(\n       aes(x = year, y = space_ratio_per_page_total, \n           group = artist_name,\n           fill=artist_name,\n           color=artist_name,\n           label=artist_name)) +\n  geom_point(shape=21,\n             stroke=0.5,\n             alpha=0.5,\n             show.legend = FALSE)+\n  geomtextpath::geom_textsmooth(method = \"lm\",\n                                se=FALSE,\n                                family=\"Roboto Condensed\",\n                                show.legend = FALSE)+\n  scale_color_viridis_d()+\n  scale_x_continuous(limits = c(1945,2035),n.breaks = 5,expand = c(0,0))+\n  facet_wrap(~book,scales = \"free\") +\n  labs(y=\"Space Ratio per Page Total\",\n       x=\"Year\",\n       title=\"Male Italian Artists\",\n       subtitle=\"how much space their work took up in each textbook\",\n       caption = \"DataSource: #TidyTuesday 2023 week3 Art history\\nDataViz: Federica Gazzelloni #30DayChartChallenge 2023 Day5 - slope\\n\")+\n  hrbrthemes::theme_ipsum_rc(plot_title_size = 28,\n                             caption_face = \"bold\",\n                             caption_family = \"Roboto Condensed\",\n                             base_family = \"Roboto Condensed\"\n                              )+\n    theme(strip.background = element_blank(),\n          strip.placement = \"outside\",\n          strip.clip = \"off\",\n          strip.text = element_text(hjust=0.5,size=20),\n          plot.margin = unit(c(5,10,5,5),units = \"pt\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave(\"w3_Arhd.png\",\n       bg=\"white\",\n       width = 9,height = 5)\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}