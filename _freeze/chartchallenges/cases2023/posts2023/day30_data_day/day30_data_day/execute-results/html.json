{
  "hash": "f830889890b167fc46125c5e0d8cfdb6",
  "result": {
    "markdown": "---\ntitle: 'Data day'\nsubtitle: 'Welcome to #30DayChartChallenge 2023 day 30'\ndate: '2023-04-30'\nimage: 'day30_data_day.png'\nimage-alt: ''\ndescription: 'Networks'\noutput: html_document\nexecute: \n   eval: false\n---\n\n\n\n> Gazzelloni F. (2023), Data Visualization: World Bank\n\nSource: [World Bank](https://data.worldbank.org)\n\nWorld Bank: <https://datacatalog.worldbank.org/>\n\nTo download the data from the World Bank we need {wbstats} package <https://gshs-ornl.github.io/wbstats/>.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(rnaturalearth)\nlibrary(leaflet)\nlibrary(DT)\n\n# remotes::install_github(\"nset-ornl/wbstats\")\nlibrary(wbstats)\n```\n:::\n\n\nThis function helps locating the data from the database, we need to specify the language of the data.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlist <- wb_cache(\"en\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwb_search(pattern = \"poverty\")%>%\n  filter(str_detect(indicator,\"poverty\"))\n```\n:::\n\n\n**Multidimensional poverty index (scale 0-1)** Updated data `2023-03-30`\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <- wb_data(indicator=\"SI.POV.MDIM.XQ\")\ndata %>%pull(date)%>%range()\n```\n:::\n\n\nCheck missing values:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata %>% DataExplorer::profile_missing()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- data %>%\n  group_by(iso2c,iso3c,country)%>%\n  reframe(index=round(mean(as.numeric(SI.POV.MDIM.XQ),na.rm = TRUE),2))%>%\n  mutate(index=ifelse(is.nan(index),NA,index),\n         index_cat=cut_interval(index,5))\n\ndf <- df%>%as.data.frame()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmap <- ne_countries()\nmap$index <- df[match(map$iso_a3, df$iso3c), \"index\"] \nmap$index_cat <- df[match(map$iso_a3, df$iso3c), \"index_cat\"]\n```\n:::\n\n\n### Map\n\n\n::: {.cell}\n\n```{.r .cell-code}\npal <- colorFactor(\n  palette = c(\"#dfd1bf\",\"#e1a95f\",\"orange\",\"#FF7F7F\",\"dark red\"), \n  domain = map$index_cat,\n  na.color = NA,\n  reverse = FALSE\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nm <- leaflet(map,\n        options = leafletOptions(zoomControl = FALSE,\n                                 minZoom = 2, maxZoom = 2,\n                                 dragging = FALSE)) %>%\n  addTiles() %>%\n  setView(lng = 0, lat = 0, zoom = 2) %>%\n  addPolygons(stroke = TRUE,\n              weight = 0.2,\n              smoothFactor = 0.1, \n              fillOpacity = 0.8,\n              fillColor = ~ pal(index_cat),\n              label = labels,\n              color = ~ pal(index_cat))%>%\n  leaflet::addLegend(\"bottomright\",\n                     pal = pal, \n                     values = ~index_cat,\n                     na.label = \"missing\",\n                     opacity = 0.9, \n                     title = \"Index\"\n  )%>%\n  addControl(\"Multidimensional poverty index (scale 0-1)<br>Updated data 2023-03-30\", \n             position = \"topleft\")%>%\n  addControl(\"Source: WorldBank {wbstats}: SI.POV.MDIM.XQ<br>#30DayChartChallenge Day 30: WorldBank | Map: Federica Gazzelloni\", \n             position = \"bottomleft\")\n  \nm\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(htmlwidgets)\nlibrary(webshot)\n\n\n\n## save html to png\nsaveWidget(m, \"temp.html\", selfcontained = FALSE,\n           title = \"#30DayChartChallenge World Bank\")\nwebshot(\"temp.html\", \n        vheight = 500,\n        vwidth = 800,\n        zoom = 3,\n        expand = c(10, 50, 0, 50),\n        file = \"day30_worldbank.png\",\n        cliprect = \"viewport\")\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}