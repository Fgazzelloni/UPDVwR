{
  "hash": "b3579ebfe2fc1bbbf736f92bce111265",
  "result": {
    "markdown": "---\ntitle: 'Historical'\nsubtitle: 'Welcome to #30DayChartChallenge 2023 day 4'\ndate: '2023-04-04'\nimage: 'day4_historical.png'\nimage-alt: ''\ndescription: 'Networks'\noutput: html_document\nexecute: \n   eval: false\n---\n\n\n\nResources: \n\n- [https://github.com/rfordatascience/tidytuesday/tree/master/data/2023/2023-01-10](https://github.com/rfordatascience/tidytuesday/tree/master/data/2023/2023-01-10)\n- [https://feederwatch.org/explore/raw-dataset-requests/](https://feederwatch.org/explore/raw-dataset-requests/)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\ntuesdata <- tidytuesdayR::tt_load(2023, week = 02)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntuesdata$PFW_2021_public%>%head\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntuesdata$PFW_count_site_data_public_2021%>%head\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nd <- tuesdata$PFW_2021_public %>% janitor::clean_names()\n\n\nd%>% \n  count(year)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nworld <- map_data(\"world\")\nstates <- map_data(\"state\")\n\nprop_df <- d %>%\n  filter(longitude < -50) %>%\n  group_by(longitude, latitude, year) %>%\n  reframe(prop_many = how_many / sum(how_many) * 100)\n\n\nggplot(data = world, mapping = aes(long, lat, group = group)) +\n  geom_polygon(color = \"grey\", fill = NA) +\n  geom_polygon(data = states,\n               linewidth=0.1,\n               color = \"grey\",\n               fill = NA) +\n  geom_point(\n    data = prop_df,\n    mapping = aes(x = longitude, y = latitude, fill = factor(year)),\n    inherit.aes = FALSE,\n    key_glyph = \"rect\",\n    size=0.5,\n    shape = 21,\n    stroke = 0.3,\n    color = \"black\"\n  ) +\n  scale_fill_manual(values=c(\"#fc1c3c\",\"#9189c1\"))+\n  coord_sf(xlim = c(-157.94932, -50),\n           ylim = c(20 , 65.51989)) +\n  #facet_wrap(vars(year),nrow = 2) +\n  labs(title = \"Maximum number of individuals seen at one time during observation period\",\n       subtitle=\"total proportion (%)\",\n       caption=\"DataSource: #TidyTuesday 2023 week2 - BFW data\\nDataViz: Federica Gazzelloni #30DayChartChallenge 2023 Day4 - historical\\n\",\n       fill = \"Year\") +\n  ggthemes::theme_map(base_size = 10, base_family = \"Roboto Condensed\") +\n  theme(plot.background = element_rect(color=\"black\",fill=\"black\"),\n        panel.background = element_rect(color=\"black\",fill=\"black\"),\n        plot.title = element_text(color=\"#9189c1\",size=14),\n        plot.subtitle = element_text(color=\"#9189c1\",size=12),\n        plot.caption = element_text(color=\"#fc1c3c\"),\n        legend.position = c(0.85,0.1))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave(\"images/map.png\",\n       width = 7,height = 4)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nd%>%count(species_code,sort=TRUE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(fpp3)\ndata <- d %>%\n  mutate(date=paste0(month,\"-\",day,\"-\",year),.after =obs_id )%>%\n  mutate(date=as.Date(date,\"%m-%d-%Y\"))%>%\n  select(year,month,day,date,how_many)%>%\n  distinct()%>%\n  group_by(date)%>%\n  reframe(how_many=sum(how_many))\n\nts <- data%>%\n  as_tsibble()\n\nts %>%\n  #autoplot()\n  gg_season(y = how_many,period = \"week\")+\n  scale_colour_steps2() +\n  labs(title=\"Feeder Birds seasonality\",\n       subtitle=\"Exploring Daily Seasonal Patterns of Feeder Bird Sightings\",\n       y=\"number of individuals seen\",x=\"Day of the week (2020-2021)\" )+\n  theme_linedraw(base_size = 12,\n                 base_family = \"Roboto Condensed\")+\n  theme(plot.title = element_text(size=18),\n        plot.subtitle = element_text(size=14))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave(\"images/daily.png\",width = 7,height = 4)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nts %>%\n  autoplot()+\n  scale_colour_steps2() +\n  labs(title=\"Feeder Birds seasonality\",\n       subtitle=\"Exploring Monthly Seasonal Patterns of Feeder Bird Sightings\",\n       y=\"number of individuals seen\",x=\"Months (2020-2021)\" )+\n  theme_linedraw(base_size = 12,\n                 base_family = \"Roboto Condensed\")+\n  theme(plot.title = element_text(size=18),\n        plot.subtitle = element_text(size=14))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave(\"images/monthly.png\",width = 7,height = 4)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(cowplot)\n\nggdraw()+\n  draw_image(\"images/map.png\")+\n  draw_image(\"images/daily.png\",scale = 0.25,x=-0.36,y=-0)+\n  draw_image(\"images/monthly.png\",scale = 0.25,x=-0.36,y=-0.27)+\n  draw_label(\"Map of locations from which Project FeederWatch participants have submitted data\\nbetween 2020 and 2021. The inset plots provides detail of an example of seasonality.\",x=0.02,y=0.07,size=6,color=\"grey\",fontfamily = \"Roboto Condensed\",hjust = 0)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave(\"w2_BFWd.png\",width = 7,height = 4,dpi=320)\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}