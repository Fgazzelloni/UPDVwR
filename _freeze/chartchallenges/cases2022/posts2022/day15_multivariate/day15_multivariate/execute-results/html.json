{
  "hash": "3b95d8520385575619a9dae4eb9e9d92",
  "result": {
    "markdown": "---\ntitle: 'Multivariate'\nsubtitle: 'Welcome to #30DayChartChallenge 2022 day 15'\ndate: '2022-04-15'\nimage: 'day15_multivariate.png'\nimage-alt: ''\ndescription: 'Networks'\noutput: html_document\nexecute: \n   eval: false\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ISLR2)\n# data()\n```\n:::\n\n\nMid-Atlantic Wage Data\n\nWage and other data for a group of 3000 male workers in the Mid-Atlantic region.\n\n::: {.cell}\n\n```{.r .cell-code}\nWage%>%names\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(Wage)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwage1 <- Wage %>%\n  mutate(across(where(is.factor),as.character)) %>% #count(region)\n  mutate(maritl_id=gsub(\"\\\\D\",\"\",maritl),\n         race_id=gsub(\"\\\\D\",\"\",race),\n         education_id=gsub(\"\\\\D\",\"\",education),\n         jobclass_id=gsub(\"\\\\D\",\"\",jobclass),\n         health_id=gsub(\"\\\\D\",\"\",health),\n         health_ins_id=gsub(\"\\\\D\",\"\",health_ins)) %>%\n  select(-maritl,-race,-education,-region,-jobclass,-health,-health_ins) %>%\n  mutate(across(where(is.character),as.integer)) \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntmwr_cols <- colorRampPalette(c(\"#91CBD765\", \"#CA225E\"))\nwage1 %>%\n  cor() %>% \n  corrplot::corrplot(col = tmwr_cols(200), tl.col = \"black\") +\n  ggplot2::facet_wrap(~wage)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidymodels)\ntidymodels_prefer()\n\nlibrary(corrplot)\nlibrary(ggforce)\nlibrary(bestNormalize)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1701)\nsplit <- initial_split(wage1, strata = wage, prop = 3/4)\n\ntrain <- training(split)\ntest  <- testing(split)\n\nset.seed(1702)\nval <- validation_split(train, strata = wage, prop = 4/5)\nval$splits[[1]]\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrec <-\n  # Use the training data from the val split object\n  recipe(wage ~ ., data = analysis(val$splits[[1]])) %>%\n  step_select(-logwage)%>%\n  step_zv(all_numeric_predictors()) %>%\n  step_orderNorm(all_numeric_predictors()) %>% \n  step_normalize(all_numeric_predictors())\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrec_trained <- prep(rec)\n\nshow_variables <- \n  rec %>% \n  prep(log_changes = TRUE)\n\nvalidation <- val$splits %>% pluck(1) %>% assessment()\nval_processed <- bake(rec_trained, new_data = validation)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrec%>%prep()%>%bake(new_data=NULL) %>%\n  broom::tidy()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggdist)\nlibrary(distributional)\nrec%>%prep()%>%bake(new_data=NULL) %>%\n  broom::tidy() %>%\n  filter(!column==\"wage\")%>%\n  ggplot(aes(x=column))+\n  geom_col(aes(y=mean))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggdist)\nlibrary(distributional)\n\nWage_age_cat <- Wage %>%#count(age)\n  mutate(age_cat=cut(age,breaks = 5)) %>% #count(race)\n  select(-age,-logwage) \n\n# average calculation\nmod <- glm(wage~ education+race+age_cat+maritl-1,family = \"gaussian\",data=Wage_age_cat)\n\n\nmod%>%\n  tidy() %>% \n  mutate(term0=case_when(str_detect(term,\"education\")~\"education\",\n                         str_detect(term,\"race\")~\"race\",\n                         str_detect(term,\"maritl\")~\"maritl\",\n                         str_detect(term,\"age_cat\")~\"age_cat\",\n                         TRUE~term)) %>%\n  mutate(term1=gsub(\"^[A-z]+\\\\d. \",\"\",term)) %>%\n  ggplot(aes(y = fct_reorder(term1,estimate),\n             xdist = dist_student_t(df = df.residual(mod), \n                               mu = estimate, \n                               sigma = std.error))\n             ) +\n  ggdist::stat_halfeye()+\n  stat_dots(position = \"dodge\")+ # , color = \"pink\"\n  facet_wrap(vars(term0),scales = \"free\")+\n  tvthemes::scale_color_hilda()+\n  tvthemes::theme_theLastAirbender()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmod%>%\n  tidy() %>% \n  mutate(term0=case_when(str_detect(term,\"education\")~\"education\",\n                         str_detect(term,\"race\")~\"race\",\n                         str_detect(term,\"maritl\")~\"maritl\",\n                         str_detect(term,\"age_cat\")~\"age_cat\",\n                         TRUE~term)) %>%\n  mutate(term1=gsub(\"^[A-z]+\\\\d. \",\"\",term)) %>%\n  \n  ggplot(aes(y = fct_reorder(term1,estimate),\n             xdist = dist_student_t(df = df.residual(mod), \n                               mu = estimate, \n                               sigma = std.error))\n             ) +\n  ggdist::stat_halfeye()+\n  stat_dots(position = \"dodge\")+ # , color = \"pink\"\n  facet_wrap(vars(term0),scales = \"free\")+\n  tvthemes::scale_color_hilda()+\n  tvthemes::theme_theLastAirbender()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nWage%>%\n  mutate(race=as.character(race)) %>%\nggplot()+\n  aes(x=wage,y=race)+\n  ggdist::geom_dotsinterval(layout=\"weave\",side=\"bottom\")+\n ggdist::stat_halfeye()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(extrafont)\nloadfonts()\n\nWage %>%\n  mutate(education=gsub(\"\\\\d. \",\"\",education)) %>% #count(year)\n  group_by(education)%>%\n  mutate(mean=mean(wage),\n         sd=sd(wage)) %>%\n  ungroup() %>% # pull(mean)%>%summary\n  select(education,mean,sd) %>%\n  distinct()%>%\n  ggplot(aes(y=fct_reorder(education,mean),\n             xdist = dist_normal(mean, sd),\n             layout = \"weave\",\n             fill = stat(x < 111.70))) + \n  stat_dots(position = \"dodge\", color = \"grey70\")+\n  geom_vline(xintercept = 111.70, alpha = 0.25) +\n  scale_x_continuous(breaks = c(20,60,90,112,140,180,220)) +\n  tvthemes::scale_fill_hilda()+\n  labs(x=\"Wage values from 2003 to 2009\",\n       y=\"\",color=\"Race\",fill=\"wage < avg\",\n       title=\"Wage distribution vs education 2003-2009\",\n       subtitle=\"Normalized values\",\n       caption=\"#30DayChartChallenge 2022 #day9 - Distribution/Statistics - v2\\nDataSource: {ISLR2} Wage dataset | DataViz: Federica Gazzelloni\")+\n  tvthemes::theme_avatar()+\n  theme(text = element_text(family=\"Chelsea Market\"),\n        legend.background = element_blank(),\n        legend.box.background = element_blank(),\n        legend.key = element_blank(),\n        legend.key.width = unit(0.5,units=\"cm\"),\n        legend.direction = \"horizontal\",\n        legend.position = c(0.8,0.1))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave(\"education.png\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nWage %>%\n  mutate(education=gsub(\"\\\\d. \",\"\",education)) %>% #count(year)\n  group_by(education)%>%\n  mutate(mean=mean(wage),\n         sd=sd(wage)) %>%\n  ungroup() %>%\n  ggplot(aes(x = wage, \n             y =fct_reorder(education,wage),color=race)) +\n  stat_dots(side = \"both\",size=2.5)+\n  scale_color_brewer(palette = \"Dark2\") +\n  xlim(20,200)+\n  labs(x=\"Wage values from 2003 to 2009\",\n       y=\"\",color=\"Race\")+\n  tvthemes::theme_theLastAirbender()+\n  theme(legend.background = element_blank(),\n        legend.box.background = element_blank(),\n        legend.key = element_blank(),\n        legend.key.width = unit(0.5,units=\"cm\"),\n        legend.direction = \"horizontal\",\n        legend.position = c(0.2,0.97))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_validation_results <- function(recipe, \n                                    dat = assessment(val$splits[[1]])) {\n  recipe %>%\n    # Estimate any additional steps\n    prep() %>%\n    # Process the data (the validation set by default)\n    bake(new_data = dat) %>%\n    # Create the scatterplot matrix\n    ggplot(aes(x = .panel_x, y = .panel_y, col = wage, fill = wage)) +\n    geom_point(alpha = 0.4, size = 0.5) +\n    geom_autodensity(alpha = .3) +\n    facet_matrix(vars(-wage), layer.diag = 2) +\n    viridis::scale_color_viridis(option = \"A\") + \n     viridis::scale_fill_viridis(option = \"A\")\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrec_trained %>%\n  step_pca(all_numeric_predictors(), num_comp = 4) %>%\n  plot_validation_results() + \n  ggtitle(\"Principal Component Analysis\")+\n  tvthemes::theme_theLastAirbender()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrec_trained %>%\n  step_pls(all_numeric_predictors(), outcome = \"wage\", num_comp = 4) %>%\n  plot_validation_results() + \n  ggtitle(\"Partial Least Squares\")+\n  tvthemes::theme_theLastAirbender()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrec_trained %>%\n  step_ica(all_numeric_predictors(), num_comp = 4) %>%\n  plot_validation_results() + \n  ggtitle(\"Independent Component Analysis\")+\n  tvthemes::theme_theLastAirbender()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nWage%>%\n  mutate(age1=cut(age,5),.after=age)%>%\n  mutate(year=as.factor(year))%>%\n  ggplot(aes(year,wage,group=year))+\n  geom_violin()+\n # facet_wrap(~age1)+\n  tvthemes::theme_theLastAirbender()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\np1 <- Wage%>%#names\n  ggplot(aes(age,logwage,color=maritl,fill=maritl))+\n    geom_jitter(size=0.5,alpha=0.5,shape=21,stroke=0.5)+\n  geom_smooth(size=0.5,se=F)+#,color=\"darkred\")+\n  labs(title=\"\\n\")+\n  scale_color_hilda(palette = \"Day\",n=6, type = \"discrete\",reverse=T) +\n  tvthemes::theme_theLastAirbender(text.font = \"Times\", title.font = \"Times\",\n                    legend.font = \"Times\")+\n  theme(axis.text.x = element_blank(),\n        legend.position = \"top\")\np1\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(extrafont)\nloadfonts()\nlibrary(hrbrthemes)\nlibrary(tvthemes)\nlibrary(ggthemes)\nlibrary(geomtextpath)\ngeomtextpath::geom_textpath()\n\np2 <-Wage%>%\n  pivot_longer(cols = c(\"year\",\"age\",\"wage\"),names_to=\"names\",values_to=\"values\")%>%\nggplot(aes(values))+\n    geom_textdensity(aes(label=names,color=\"red\"),size = 6, \n                     fontface = 2, #fontfamily= \"Chelsea Market\",\n                     hjust = 0.2, vjust = 0.3,\n                     show.legend = F) +\n  facet_wrap(~names,scales = \"free\")+\n   scale_color_hilda(palette = \"Day\",n=6, type = \"discrete\",reverse=T) +\n  tvthemes::theme_theLastAirbender(text.font = \"Times\", title.font = \"Times\",\n                    legend.font = \"Times\")+\n  theme(axis.text.x = element_blank())\np2\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggdist)\nWage%>%\n  pivot_longer(cols = c(\"year\",\"age\",\"wage\"),names_to=\"names\",values_to=\"values\")%>%\nggplot(aes(values))+\ngeom_slabinterval()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(cowplot)\nfinal <- ggdraw()+\n  draw_plot(p1) +\n  draw_plot(p2,scale=0.5)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggpubr::annotate_figure(\n  final,\n  top = \"Ciao\",\n  bottom = \"addio\",\n  left = \"align\",\n  right = \"ok\",\n  fig.lab = \"a\",\n  fig.lab.pos = c(\"top.left\", \"top\", \"top.right\", \"bottom.left\", \"bottom\",\n    \"bottom.right\"),\n  fig.lab.size=2,\n  fig.lab.face=\"bold\"\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nWage%>%#names\n  ggplot(aes(race,wage))+\n    geom_col()+\n  coord_polar(theta = \"y\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nWage%>%#names\n  ggplot(aes(education,wage))+\n    geom_col()+\n  coord_polar(theta = \"x\")\n```\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nWage%>%\n  mutate(maritl=gsub(\"\\\\d. \",\"\",maritl))%>%\nggplot(aes(maritl))+\n    geom_textdensity(aes(label=maritl,color=maritl),size = 6, \n                     fontface = 2, #fontfamily= \"Chelsea Market\",\n                     hjust = 0.2, vjust = 0.3,\n                     show.legend = F) +\n # facet_wrap(~names,scales = \"free\")+\n   scale_color_hilda(palette = \"Day\",n=6, type = \"discrete\",reverse=T) +\n  tvthemes::theme_theLastAirbender(text.font = \"Times\", title.font = \"Times\",\n                    legend.font = \"Times\")+\n  theme(axis.text.x = element_blank())\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nWage%>%\n  mutate(race=gsub(\"\\\\d. \",\"\",race))%>%\nggplot(aes(race))+\n    geom_textdensity(aes(label=race,color=race),size = 6, \n                     fontface = 2, #fontfamily= \"Chelsea Market\",\n                     hjust = 0.2, vjust = 0.3,\n                     show.legend = F) +\n # facet_wrap(~names,scales = \"free\")+\n  scale_color_hilda(palette = \"Day\",n=6, type = \"discrete\",reverse=T) +\n  tvthemes::theme_theLastAirbender(text.font = \"Times\", title.font = \"Times\",\n                    legend.font = \"Times\")+\n  theme(axis.text.x = element_blank())\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nWage%>%#count(education)\n  mutate(education=gsub(\"\\\\d. \",\"\",education),\n         education=case_when(education==\"< HS Grad\"~\"Under graduate\",\n                             education==\"Advanced Degree\"~\"Degree\",\n                             TRUE~\"Graduate\"))%>%\nggplot(aes(race))+\n    geom_textdensity(aes(label=education,color=education),\n                     size = 6, \n                     fontface = 2,\n                     hjust = 0.2, vjust = 0.3,\n                     show.legend = F) +\n # facet_wrap(~names,scales = \"free\")+\n  scale_color_hilda(palette = \"Day\",n=6, type = \"discrete\",reverse=T) +\n  facet_wrap(~education)+\n  tvthemes::theme_theLastAirbender(text.font = \"Times\", title.font = \"Times\",\n                    legend.font = \"Times\")+\n  theme(axis.text.x = element_blank())\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(hrbrthemes)\nlibrary(ggthemes)\nlibrary(extrafont)\nextrafont::loadfonts()\nfonts()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntvthemes::import_chelseaMarket()\nWage%>%\n  select(wage,age,race)%>%\n  distinct()%>%\n  ggplot(aes(x=wage,y=age,shape=race))+\n         geom_point(aes(size=wage,color=race))+\n         geom_smooth(method=lm,se=FALSE,\n                     fullrange=TRUE,\n                  aes(color=race))+\n  scale_x_log10()+\n  scale_y_log10()+\n  xlim(20,250)+\n  labs(title=\"Multivariate Wage Analysis - age and race\",\n       subtitle=\"Years: 2003 to 2009\",\n       caption=\"#30DayChartChallenge 2022 #day15 - Multivariate\\nDataSource: {ISLR2} Wage dataset | DataViz: Federica Gazzelloni\",\n       shape=\"Race\",color=\"Race\",size=\"Wage\",\n       x=\"Wage\",y=\"Age\")+\n  ggthemes::scale_shape_tableau()+\n  ggthemes::scale_color_tableau()+\n  ggthemes::theme_pander()+\n  theme(text = element_text(family=\"Chelsea Market\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave(\"day15_multivariate.png\",\n       dpi=320,\n       width = 9,\n       height = 6)\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}