{
  "hash": "389367d51e4c2e801b1065b8f703214f",
  "result": {
    "markdown": "---\ntitle: 'Storytelling'\nsubtitle: 'Welcome to #30DayChartChallenge 2022 day 29'\ndate: '2022-04-29'\nimage: 'day29_storytelling.png'\nimage-alt: ''\ndescription: 'Networks'\noutput: html_document\nexecute: \n   eval: false\n---\n\n::: {.cell}\n\n```{.r .cell-code}\ncapacity <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-05-03/capacity.csv')\naverage_cost <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-05-03/average_cost.csv')\n\n# calculate the numbers\ncapacity%>%\n  arrange(-year) %>%\n  group_by(type)%>%\n  mutate(pct_change = ifelse(round((total_gw/lead(total_gw) - 1) * 100)>100,100,round((total_gw/lead(total_gw) - 1) * 100)))%>%\n  ungroup() %>%\n  filter(!is.na(pct_change))%>%\n  group_by(type)%>%\n  summarize(avg_pct_change=round(mean(pct_change)))\n\naverage_cost%>% # count(year)\n  drop_na() %>%\n  pivot_longer(cols=c(2,3,4),names_to=\"type\",values_to=\"mwh\")%>%\n  mutate(type=gsub(\"_mwh\",\"\",type)) %>%\n  arrange(-year) %>%\n  group_by(type) %>%\n  mutate(pct_change = ifelse(round((mwh/lead(mwh) - 1) * 100)>100,100,round((mwh/lead(mwh) - 1) * 100)))%>%\n  ungroup() %>%\n  filter(!is.na(pct_change))%>%\n  group_by(type)%>%\n  summarize(avg_pct_change=round(mean(pct_change)))\n\n\nplot1 <- capacity%>% \n  filter(!type==\"Storage\")%>%\n  mutate(tot_cum=cumsum(total_gw))%>%\n  arrange(-year) %>%\n  group_by(type)%>%\n  mutate(pct_change = ifelse(round((total_gw/lead(total_gw) - 1) * 100)>100,100,round((total_gw/lead(total_gw) - 1) * 100)))%>%\n  ungroup() %>%\n  ggplot(aes(x=factor(year),y=total_gw,fill=factor(year)))+\n  geom_col()+\n  geom_line(group=1,color=\"grey70\")+\n  geom_text(aes(label=pct_change),family=\"Roboto Condensed\")+\n  facet_wrap(~type,scales = \"free\")+\n  scale_x_discrete(breaks=seq(2014,2020,2))+\n  labs(x=\"\",y=\"\",\n       title=\"Energy Power Sources\",\n       subtitle = \"Berkeley Lab data shows among total gigawatts of powers capacity from 2014 to 2020:\\nSolar, Wind and Nuclear increased by 50%, 15%, and 1% respectively while Coal registered 10%\\ndecrease, Gas and Other sources decreased by 10%.\")+\n  ggthemes::scale_fill_hc()+\n  ggthemes::theme_hc()+\n  theme(text=element_text(family=\"Roboto Condensed\"),\n        legend.position = \"none\",\n        plot.title = element_text(face=\"bold\",size=44),\n        plot.caption = element_text(hjust=0))\n\n\nplot2 <- average_cost%>%  #count(year)\n  drop_na() %>%\n  pivot_longer(cols=c(2,3,4),names_to=\"type\",values_to=\"mwh\")%>%\n  mutate(type=gsub(\"_mwh\",\"\",type)) %>% \n  ggplot(aes(x=(year),y=mwh,group=type))+\n  geomtextpath::geom_textline(aes(label=type,color=type),hjust=0.05,size=6,family=\"Roboto Condensed\",fontface=\"bold\") +\n  scale_x_continuous(breaks=seq(2009,2021,2))+\n  ggthemes::scale_color_hc()+\n  labs(title=\"Average cost trend of increasing capacity power sources\",\n       subtitle=\"Estimated costs in dollars per megawatt-hour (MWh) 2009-2021\",\n       x=\"\",y=\"\",\n       caption=\"DataSource: Berkeley Lab | #30DayChartChallenge #Day29 StoryTelling\\nDataViz: Federica Gazzelloni | Visualization excluded Storage as power source\") +\n  ggthemes::theme_hc()+\n  theme(text=element_text(family=\"Roboto Condensed\"),\n        legend.position = \"none\",\n        plot.title = element_text(face=\"bold\",size=18),\n        plot.caption = element_text(hjust=0,size=12),\n        axis.line.x = element_line(color=\"grey70\",size=1))+\n  annotate(\"text\",x=c(2013,2015,2018),y=c(140,100,80),label=c(\"-16% Solar\",\"-6% Wind\",\"-7% Gas\"),\n           size=12,family=\"Roboto Condensed\") +\n  annotate(\"segment\", x = 2018, xend = 2018, y = 160, yend = 100,colour = \"grey70\",size=8,\n           arrow = arrow(length = unit(1.5,\"cm\")))\n\n\nlibrary(patchwork)\n\nplot1/plot2\n\nggsave(\"storytelling.png\",\n       dpi=320,\n       width = 7,\n       height = 9)\n```\n:::\n",
    "supporting": [
      "day29_storytelling_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}