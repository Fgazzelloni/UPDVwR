{
  "hash": "43b38624a562d6f342e207d1f542df95",
  "result": {
    "markdown": "---\ntitle: 'Future'\nsubtitle: 'Welcome to #30DayChartChallenge 2022 day 27'\ndate: '2022-04-27'\nimage: 'day27_future.png'\nimage-alt: ''\ndescription: 'Networks'\noutput: html_document\nexecute: \n   eval: false\n---\n\n\n\n### Boston Weather data\n\nsource: https://www.ncdc.noaa.gov/cdo-web/search\n- https://www.ncei.noaa.gov/orders/cdo/2960933.csv\n\n\n\n::: {.cell paged.print='false'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(prophet)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nnew <- read.csv(\"https://www.ncei.noaa.gov/orders/cdo/2960933.csv\")\n# new <-read.csv(\"2960933.csv\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nnew %>%\n  select(6:11) %>%\n  summary()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nnew_temps <- new%>%\n  select(6:11) %>%\n  janitor::clean_names()%>%\n  mutate(date=as.POSIXct(date),\n    year=lubridate::year(date),.after=date) \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmin_new_temps <- new_temps%>%select(ds=date,y=tmin)\nmax_new_temps <- new_temps%>%select(ds=date,y=tmax)\navg_new_temps <- new_temps%>%select(ds=date,y=tavg)\n```\n:::\n\n\n\n#### Min model\n\n::: {.cell hash='day27_future_cache/html/min_pro_mod_new_temps_009596791cb18620f0286e1dfae36224'}\n\n```{.r .cell-code}\nmin_mod_new_temps <- prophet(min_new_temps, \n                             #growth = \"logistic\",\n                             seasonality.mode = \"multiplicative\",\n                             yearly.seasonality=2,\n                             daily.seasonality=T,\n                             weekly.seasonality = TRUE\n                             )\n\nmin_future_new_temps <- prophet::make_future_dataframe(min_mod_new_temps, \n                                                       freq = \"week\",\n                                                       periods=6,\n                                                       include_history = T)\nmin_forecast_new_temps <- predict(min_mod_new_temps,min_future_new_temps)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# min_mod_new_temps <- prophet(weekly.seasonality=FALSE)\n# min_mod_new_temps <- add_seasonality(min_mod_new_temps, \n#                                      name='yearly', \n#                                      period=365, \n#                                      fourier.order=3)\n# min_mod_new_temps <- fit.prophet(min_mod_new_temps, min_new_temps)\n# future <- make_future_dataframe(min_mod_new_temps, periods = 365)\n# forecast <- predict(min_mod_new_temps, future)\n# prophet_plot_components(min_mod_new_temps, forecast)\n```\n:::\n\n\n#### Max model\n\n::: {.cell hash='day27_future_cache/html/max_pro_mod_new_temps_7f6cbaa76ce45f55e8206e1b8e6b1713'}\n\n```{.r .cell-code}\nmax_mod_new_temps <- prophet(max_new_temps,\n                             #growth = \"logistic\",\n                             seasonality.mode = \"multiplicative\",\n                             yearly.seasonality=2,\n                             daily.seasonality=F,\n                             weekly.seasonality = TRUE\n                             )\nmax_future_new_temps <- prophet::make_future_dataframe(min_mod_new_temps, \n                                                       freq = \"week\",\n                                                       periods=6,\n                                                       include_history = T)\nmax_forecast_new_temps <- predict(max_mod_new_temps,max_future_new_temps)\n```\n:::\n\n\n#### Avg model\n\n::: {.cell hash='day27_future_cache/html/avg_pro_mod_new_temps_2f2f9bc8aaf2124f4c3c25a5722404db'}\n\n```{.r .cell-code}\navg_mod_new_temps <- prophet(avg_new_temps, #growth = \"logistic\",\n                             seasonality.mode = \"multiplicative\",\n                             yearly.seasonality=2,\n                             daily.seasonality=F,\n                             weekly.seasonality = TRUE\n                             )\navg_future_new_temps <- prophet::make_future_dataframe(min_mod_new_temps, \n                                                       freq = \"week\",\n                                                       periods=6,\n                                                       include_history = T)\navg_forecast_new_temps <- predict(avg_mod_new_temps,avg_future_new_temps)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmin<-min_forecast_new_temps%>%\n  select(ds,yhat)%>%\n  mutate(name=rep(\"min\",length(ds)))\n\nmax <-max_forecast_new_temps%>%\n  select(ds,yhat)%>%\n  mutate(name=rep(\"max\",length(ds)))\n\n#avg <-avg_forecast_new_temps%>%\n#  select(ds,yhat)%>%\n#  mutate(name=rep(\"avg\",length(ds)))\n\npoint_forecast <- rbind(min,max)%>%\n  filter(ds>Sys.time())\n\nmin_forecast_new_temps%>%tail()\n```\n:::\n\n\n\n##### Make the plot with ggplot2\n\n::: {.cell}\n\n```{.r .cell-code}\n  ggplot()+\n  \n  geom_point(data=min_new_temps,mapping=aes(x=ds,y=y),size=0.2,color=\"navy\") + # original data\n  geom_point(data=max_new_temps,mapping=aes(x=ds,y=y),size=0.2,color=\"navy\") + # original data\n  geom_point(data=avg_new_temps,mapping=aes(x=ds,y=y),size=1,color=\"grey70\",shape=21,stroke=1) + # original data\n  #geom_jitter(data=avg_new_temps,mapping=aes(x=ds,y=y),size=0.05,color=\"darkred\") + #\n\n   geom_area(data=point_forecast,aes(x=ds,y=yhat),color=\"grey95\",alpha=0.1)+\n   geom_ribbon(data=point_forecast,aes(x=ds,ymin=yhat,ymax=yhat+1),color=\"grey90\",alpha=0.1)+\n   geom_point(data=point_forecast,aes(x=ds,y=yhat),shape=21,stroke=1,size=2,color=\"grey70\")+\n  #scale_color_grey()+\n  \n  geom_line(data=min_forecast_new_temps,aes(ds,yhat),color=\"grey50\",size=0.3) +\n  geom_line(data=max_forecast_new_temps,aes(x=ds,y=yhat),size=0.3,color=\"grey40\")+\n  geom_line(data=avg_forecast_new_temps,aes(x=ds,y=yhat),size=0.5,color=\"grey20\") +\n  \n  #geom_hline(data=avg_forecast_new_temps%>%filter(ds>Sys.time()),aes(yintercept=max(yhat)))+\n  # geom_hline(data=avg_forecast_new_temps%>%filter(ds>Sys.time()),aes(yintercept=min(yhat)))+\n  #geom_vline(data=avg_forecast_new_temps,aes(xintercept=Sys.time()),\n  #          size=1,linetype=\"dashed\",color=\"navy\")+\n    \n  #geom_label(data=avg_forecast_new_temps,aes(x=Sys.time(),y=60),\n  #           label=paste(\"Today:\",Sys.Date()))+\n\n  geom_smooth(data=avg_forecast_new_temps,aes(x=ds,y=yhat), \n              method = 'loess' , formula=y ~ x,alpha=0.3,size=0.5,fill=\"grey80\",\n              linetype=\"dotted\",color=\"navy\") +\n  geom_text(data=point_forecast,aes(x=min(ds),y=0),\n            label=\"Data forecasting up to July 26th 2022\",\n            hjust=-1)+\n  #scale_x_datetime(date_breaks = \"1 month\", date_labels = \"%B\")+\n  #scale_y_continuous(labels = seq(0,73,10))+\n  labs(title=\"Temperatures in Boston area\",\n       subtitle=\"from January to April 2022 with forecasting (Prophet)\",\n       caption=\"\",\n       x=\"Year 2022 - Months\", y=\"Temperature level (min/avg/max)\")+\n  ggthemes::theme_stata()+\n  theme(text = element_text(size=18),\n        plot.title = element_text(size=28),\n        axis.title.x = element_text(hjust = 0),\n        axis.line = element_line(size=1),\n        axis.line.x = element_line(arrow = arrow(length = unit(0.3,\"cm\"))))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\navg_forecast_new_temps%>%\n  filter(ds<Sys.time())%>%\n  select(ds,trend,yhat)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_original<-avg_new_temps%>%\n  mutate(date=as.Date(ds),.after=ds)\n  \ndf_original%>%\nggplot(aes(x=date,y=y))+\n  geom_line()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- avg_forecast_new_temps%>%\n  mutate(date=as.Date(ds),.after=ds)\ndf_min <- min_forecast_new_temps%>%\n  mutate(date=as.Date(ds),.after=ds)\ndf_max <- max_forecast_new_temps%>%\n  mutate(date=as.Date(ds),.after=ds)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_max%>%\n  filter(date>Sys.Date()-7)%>%\n  arrange(-yhat)%>%\n  select(ds,date,yhat)\n\ndf%>%\n  filter(date>Sys.Date())%>%\n  arrange(date)%>%\n  select(ds,date,yhat)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\navg_mod_new_temps2 <- prophet(avg_new_temps, \n                             #growth = \"logistic\",\n                             seasonality.mode = \"multiplicative\",\n                             yearly.seasonality=2,\n                             daily.seasonality=F,\n                             weekly.seasonality = TRUE\n                             )\n\navg_future_new_temps2 <- prophet::make_future_dataframe(avg_mod_new_temps2, \n                                                       freq = \"week\",\n                                                       periods=6,\n                                                       include_history = T)\navg_forecast_new_temps2 <- predict(avg_mod_new_temps2,avg_future_new_temps2)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>%\nggplot(aes(x=date,y=yhat))+\n  geom_smooth(color=\"navy\",size=0.5)+\n  geom_line(data=df_original,aes(x=date,y=y))+\n  \n  geom_line(linetype=\"dotted\",color=\"navy\",size=0.8)+\n  \n  geomtextpath::geom_textline(data=df_min%>%filter(date>Sys.Date()-7),inherit.aes = T,label=\"min\" )+\n  geomtextpath::geom_textline(data=df_max%>%filter(date>Sys.Date()-7),inherit.aes = T,label=\"max\" )+\n  \n  geom_text(data=df%>%filter(date==\"2022-05-03\"),\n            aes(x=date,y=yhat,label=round(yhat)),vjust=-1,color=\"navy\")+\n  geom_point(data=df%>%filter(date==\"2022-05-03\"),aes(x=date,y=yhat))+\n  \n  geom_segment(aes(x=Sys.Date()+2,xend=Sys.Date()+2, y=10,yend=yhat-4),\n                                 size=0.3,color=\"grey60\")+\n  geom_text(aes(x=Sys.Date(),y=25,label=\"3rd May avg temperature level\"),\n            color=\"navy\",angle=90)+\n  \n  scale_x_date(expand = c(0,0))+\n  scale_y_continuous(breaks = seq(10,60,10))+\n  \n  coord_cartesian(ylim = c(10,60),clip=\"off\")+\n  \n  annotate(\"text\",x=Sys.Date()-120,y=-5.5,label=\"Forecast is made for educational purposes:\\nthe AVG level of temperature takes consideration of\\nweekly sesonality over 6 weeks period from 26th of April to the 7th of June 2022\",\n           hjust=0,size=3)+\n  \n  labs(title=\"Forecast of the AVG Temperature level in Boston area\",\n       subtitle=\"January to April 26th, 2022 - Future made with {Prophet}\",\n       caption=\"#30DaychartChallege 2022 #Day27 - Future\\nDataSource: NCDC-NOOA Climate data\\nDataViz: Federica Gazzelloni (@fgazzelloni)\",\n       x=\"Year 2022 - Months\", y=\"Temperature level (min/avg/max)\")+\n  ggthemes::theme_stata()+\n  theme(text = element_text(size=18),\n        plot.title = element_text(size=24),\n        plot.subtitle = element_text(size=12),\n        plot.caption = element_text(hjust=1,size=11),\n        axis.title.x = element_text(hjust = 0),\n        axis.title.y = element_text(hjust=0.5,vjust=2),\n        axis.line = element_line(size=1),\n        axis.line.x = element_line(arrow = arrow(length = unit(0.3,\"cm\"))))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave(\"day27_future3.png\",\n       dpi=320,\n       width = 9,\n       height = 6)\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}