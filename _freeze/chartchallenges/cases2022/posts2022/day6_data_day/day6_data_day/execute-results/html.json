{
  "hash": "3b5faccc581e8826cf239bdaed3485e1",
  "result": {
    "markdown": "---\ntitle: 'Data day'\nsubtitle: 'Welcome to #30DayChartChallenge 2022 day 6'\ndate: '2022-04-06'\nimage: 'day6_data_day.png'\nimage-alt: ''\ndescription: 'Networks'\noutput: html_document\nexecute: \n   eval: false\n---\n\n\n\n\n\n## Setup and loading packages\n\n::: {.cell}\n\n```{.r .cell-code}\nrm(list=ls())\n\nsetwd(dirname(rstudioapi::getActiveDocumentContext()$path))\n\n#install.packages(\"devtools\")  # Only needed if you don't have devtools installed\n#library(devtools)\n#devtools::install_github(\"drsimonj/ourworldindata\")\n\n#library(easypackages)\neasypackages::libraries(\"ourworldindata\", \"tidyverse\", \"lubridate\", \"countrycode\", \"maps\")\n\n\n#https://drsimonj.svbtle.com/ourworld-an-r-data-package\n?ourworldindata\n\nfinancing_healthcare %>% names()\n\ndf <- financing_healthcare %>%\n  select(year,country ,contains(\"insurance\")) %>%\n  pivot_longer(cols = contains(\"insurance\"),names_to=\"types\",values_to=\"values\") %>%\n  mutate(values=ifelse(is.na(values),0,values)) %>%\n  group_by(types) %>%\n  mutate(values=round(values/sum(values)*100)) %>%\n  ungroup() %>%\n  arrange(year)\n\ndf %>% summary(year)\ndf %>% count(country)\nlevels(df$types) <- unique(df$types)\n\nlibrary(waffle)\n?waffle()\n\n\ndf2 <- df %>%\n  filter(country==\"United States\") %>%\n  filter(year %in% c(1989,1996,2005))\n\n\nggplot(df2,aes(fill = factor(types), values = values)) +\ngeom_waffle(n_rows = 10, size = 0.3, colour = \"black\", \n            make_proportional = TRUE,\n            radius = unit(4, \"pt\"),\n            height = 0.9, width = 0.9) +\nfacet_wrap(~year) +\n  scale_colour_manual(\n    values = c(\"black\", \"white\", \"white\",\"white\")\n  ) +\nlabs(title=\"United States financing healthcare in 1989,1996,2005\",\n       fill=\"Type of Insurance\") +\nhrbrthemes::theme_ipsum_rc() +\n  theme(legend.position = \"top\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.text.x = element_blank(),\n        axis.text.y = element_blank())\n\n\n\ndf3 <- financing_healthcare %>% \n  filter(!is.na(health_exp_total)) %>%\n  group_by(country,year) %>%\n  summarize(exp=sum(health_exp_total),.groups=\"drop\") %>%\n  ungroup() \n\n# df3%>%pull(exp)%>%summary()\nset.seed(123)\n  ggplot(df3, aes(x=factor(year),y=exp,group=country)) +\n  geom_point(size=0.2,color=\"grey10\")+\n  geom_line(color=\"grey85\",size=0.2) +\n  geom_line(data= subset(df3, country==\"United States\"),\n            aes(x=factor(year),y=exp,group=country),\n            color=\"grey52\") +\n    geom_line(data= subset(df3, country==\"Luxembourg\"),\n              aes(x=factor(year),y=exp,group=country),\n              color=\"grey50\") +\n    ggrepel::geom_text_repel(data =df3 %>% group_by(country) %>% \n                summarize(year=max(year),exp=max(exp)) %>% ungroup() %>%\n                  filter(exp>1000), \n              mapping= aes(x=factor(year),y=exp,group=country,label=country),\n              family = \"Roboto Condensed\",\n              nudge_x = 0, max.overlaps = Inf,\n              segment.size=0.2,\n              segment.color=\"grey40\",\n              box.padding = 0.5,\n              segment.curvature = -1e-20,\n              arrow = arrow(length = unit(0.009, \"npc\"), type = \"closed\", ends = \"first\"))+\n    geom_hline(aes(yintercept=mean(exp)))+\n    geom_text(aes(x=5,y=900,label=\"Average: 653.201$\"),size=6)+\n    scale_x_discrete(breaks=seq(1995,2013,3),expand = expansion(add=c(0,7)))+\n    scale_y_continuous(breaks = seq(0,6900,1000))+\n    labs(title=\"World countries comparison of total health expenses:\",\n         subtitle=\"from 1995 to 2013 - data are in constant 2011 international dollars.\",\n         caption=\"#30DayChartChallenge 2022 day6 - Data day | DataSource: financing_healthcare {ourworldindata} | DataViz: Federica Gazzelloni\",\n         x=\"Time (Year)\", y=\"Total Health Expenses\") +\n    hrbrthemes::theme_ipsum_rc() +\n    theme(axis.title.x = element_text(hjust = 0.8,size=10),\n          axis.title.y = element_text(size=10),\n          plot.title = element_text(size=25),\n          plot.subtitle = element_text(size=18))\n    \nggsave(\"day6_data_day.png\",dpi = 320,\n       width = 12,height = 10)\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}