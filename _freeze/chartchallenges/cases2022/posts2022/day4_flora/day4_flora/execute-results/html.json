{
  "hash": "89ad219d9778e584c673c89230dad9ef",
  "result": {
    "markdown": "---\ntitle: 'Flora'\nsubtitle: 'Welcome to #30DayChartChallenge 2022 day 4'\ndate: '2022-04-04'\nimage: 'day4_flora.png'\nimage-alt: ''\ndescription: 'Networks'\noutput: html_document\nexecute: \n   eval: false\n---\n\n\n\n### source: https://blog.k2h.se/post/polar-rose-garden/\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\ntheme_set(theme_void())\n\nrose2 <- function(k, size = 1, shift = 0, rotation = 0) {\n  tibble(theta = seq(0, 24 * pi, length.out = 1000)) %>%\n    mutate(r = size * cos(k * theta + rotation) + shift) %>%\n    mutate(x = r * cos(theta),\n           y = r * sin(theta))\n}\n\ncolors <- RColorBrewer::brewer.pal(12,\"Paired\")\n\nexpand_grid(row = 1:5,\n            column = 1:10) %>%\n  mutate(id = column * max(row) + row) %>%\n  \n  # Randomize order of flowers, so they alter which ones are op top\n  arrange(runif(nrow(.))) %>%\n  \n \n  # Randomize the parameters for the flowers\n  mutate(k = sample(c(2, 3, 4, 5, 7, 3/2, 5/2, 7/2, 4/3, 5/3, 7/3, 7/4, 7/5), \n                    nrow(.), replace = TRUE),\n         \n         size = rnorm(nrow(.), mean(iris$Petal.Width), sd(iris$Petal.Width)) + 1,\n         rotation = runif(nrow(.), min(iris$Petal.Length), max(iris$Petal.Length) * pi),\n         shift = runif(nrow(.), 0, mean(iris$Petal.Width)),\n         color = sample(colors, nrow(.), replace = TRUE)) %>%\n  \n  # Place them evently on a grid, but jitter them a bit to liven it all up\n  mutate(center_x = column * 5 + rnorm(nrow(.), 0, 1),\n         center_y = row * 5 + rnorm(nrow(.), 0, 1),\n         stem_x = column * 5 + runif(nrow(.), -5, 5),\n         stem_y = -2 + rnorm(nrow(.), 0, 0.5)) %>%\n  \n  # Generate the flowers\n  mutate(flower = pmap(list(k = k, size = size, \n                            shift = shift, \n                            rotation = rotation), rose2)) %>%\n  unnest(flower) %>%\n  \n  # Now that we have unnest()'ed all points, we have way too many stems. Let's keep only one per flower\n  group_by(id) %>%\n  mutate(stem_x = ifelse(row_number() == 1, stem_x, NA),\n         stem_y = ifelse(row_number() == 1, stem_y, NA)) %>%\n  ungroup() %>%\n  \n  ggplot(aes(x + center_x, y + center_y, group = id)) +\n  geom_curve(aes(x = center_x, y = center_y, xend = stem_x, yend = stem_y), curvature = 0.1, size = 0.2) +\n  geom_polygon(aes(fill = color), color = 'black', size = 0.2) +\n  coord_equal() +\n  scale_fill_identity() +\n  labs(title=\"#30DayChartChallenge 2022 - Day4 - Flora\",\n       subtitle=\"IRIS dataset petal length and width\",\n       caption=\"Source: Polar rose garden by @hnrklndbrg | DataViz: Federica Gazzelloni\")+\n  theme(plot.title = element_text(hjust=0.5),\n        plot.subtitle = element_text(hjust=0.5),\n        plot.caption = element_text(hjust=0.5))\n\nggsave(\"day4_flora.png\")\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}