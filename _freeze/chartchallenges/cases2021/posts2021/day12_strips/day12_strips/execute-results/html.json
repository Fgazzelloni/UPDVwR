{
  "hash": "82a611e85d4cd1a43dbb9a0b744711ea",
  "result": {
    "markdown": "---\ntitle: 'Strips'\nsubtitle: 'Welcome to #30DayChartChallenge 2021 day 12'\ndate: '2021-04-12'\nimage: 'day12_strips.png'\nimage-alt: ''\ndescription: 'Networks'\noutput: html_document\nexecute: \n   eval: false\n---\n\n\n\n### Some inspiration by:\n https://stackoverflow.com/questions/50305206/how-to-normalize-array-between-1-and-10\n https://github.com/danielpballer/Tidy_Tuesday/blob/master/Scripts_for_final_plots/2021_Week_10_Super_Bowl_Ads_Final_Plot.Rmd\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(zoo)\nlibrary(ggalluvial)\nlibrary(igraph)\nlibrary(colormap)\nlibrary(ggraph)\nlibrary(ggtext)\nlibrary(extrafont)\nlibrary(RColorBrewer)\n\nCovid19_it_reg<- read.csv(\"https://raw.githubusercontent.com/pcm-dpc/COVID-19/master/dati-regioni/dpc-covid19-ita-regioni.csv\")\nnames(Covid19_it_reg)\n\nstart = 1\nend = 10\nwidth = end - start\n\ndf<-Covid19_it_reg %>%\n  rename(regions=\"denominazione_regione\",ICU=\"terapia_intensiva\",positives=\"totale_positivi\",hospidalized=\"ricoverati_con_sintomi\",\n         deaths=\"deceduti\", recovered=\"dimessi_guariti\" ) %>%\n  mutate(date=format(as.Date(data),\"%Y-%m-%d\"),\n         month.year=as.yearmon(date))\n\ndf_top_ten<-df%>%arrange(desc(deaths))%>%group_by(regions)%>%summarize(deaths.sum=sum(deaths))\n\ntop_ten<-df$regions[1:10]\nunlist(top_ten)\n\n\nmy_df<-df%>%select(date,regions,positives,deaths,hospidalized,ICU,recovered)%>%\n  group_by(regions)%>%\n  summarize(positives=round((positives - min(positives))/(max(positives) - min(positives))*width + start),\n            deaths=round((deaths - min(deaths))/(max(deaths) - min(deaths))*width + start),\n            hospidalized=round((hospidalized - min(hospidalized))/(max(hospidalized) - min(hospidalized))*width + start),\n            ICU=round((ICU - min(ICU))/(max(ICU) - min(ICU))*width + start),\n            recovered=round((recovered - min(recovered))/(max(recovered) - min(recovered))*width + start))%>%\n  pivot_longer(cols=c(\"positives\",\"deaths\",\"hospidalized\",\"ICU\",\"recovered\"),names_to=\"category\",values_to = \"values\")%>%\n  mutate(values=round(values))%>%filter(regions==c(\"Abruzzo\",\"Basilicata\",\n                                                   \"Calabria\",\"Campania\",\n                                                   \"Emilia-Romagna\",\"Friuli Venezia Giulia\",\n                                                   \"Lazio\",\"Liguria\",\n                                                   \"Lombardia\",\"Marche\"))\n\n\n\nfinal_plot = my_df%>%\n  ggplot(aes(axis1 = regions, axis2 = category, y = values)) +\n  scale_x_discrete(limits = c(\"regions\", \"category\"), expand = c(.2, .05)) +\n  geom_alluvium(aes(fill = regions)) +\n  scale_fill_brewer(palette=\"Paired\")+\n  geom_stratum() +\n  geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), family = \"Freebooter\", size = 4) +\n  theme_minimal() +\n  ggtitle(\"Italian Regions by Covid19 outcomes chategory\",\n          \"How do they change in time?\") +\n  labs(caption = \"Viz @fgazzelloni | Datasource:Civil Protection  | Stripes - Day 12\") +\n  theme_void()+\n  theme(plot.title = element_text(hjust = .5, size = 24, family = \"Freebooter\"),\n        plot.subtitle = element_text(hjust = .5,size = 16, family = \"Freebooter\"),\n        plot.caption = element_text(size = 10),\n        legend.position = \"None\")\n\n\nfinal_plot\n\n\n##########################\n\n\nragg::agg_png(here::here(\"day12\", \"Circular_day12.png\"),\n              res = 320, width = 14, height = 8, units = \"in\")\nfinal\n\ndev.off()\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}