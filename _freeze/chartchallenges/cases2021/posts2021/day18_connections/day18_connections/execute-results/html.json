{
  "hash": "66f739ea9ce42f7d36e64d6842bdf2f8",
  "result": {
    "markdown": "---\ntitle: 'Connections'\nsubtitle: 'Welcome to #30DayChartChallenge 2021 day 18'\ndate: '2021-04-18'\nimage: 'day18_connections.png'\nimage-alt: ''\ndescription: 'Networks'\noutput: html_document\nexecute: \n   eval: false\n---\n\n\n\n\n### Connections Day 18 \n\n https://web.stanford.edu/class/bios221/book/Chap-Graphs.html\n https://github.com/jtichon/ModernStatsModernBioJGT/tree/master/data\n https://simplemaps.com/data/world-cities\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(\"rworldmap\")\nlibrary(igraph)\nlibrary(ape)\nlibrary(ggnetwork)\nlibrary(extrafont)\nlibrary(cowplot)\n\n\n# load data -------------------------------------------\ncountries <- as.data.frame(data.table::fread(\"https://raw.githubusercontent.com/eparker12/nCoV_tracker/master/input_data/countries_codes_and_coordinates.csv\"))\ncountries%>%filter(country==\"United States\")\nworld<-read.csv(\"day18_connections/worldcities.csv\")\nload(\"day18_connections/dist2009c.RData\")\n\n# manipulations -------------------------------------------\ncountry09 = attr(dist2009c, \"Label\")\nmstree2009 = ape::mst(dist2009c)\ngr09 = graph.adjacency(mstree2009, mode = \"undirected\")\n\n\nmat = match(country09, countries$country,world$country)\n\ncoords2009 = data.frame(\n  lat = countries$latitude[mat],\n  lon = countries$longitude[mat],\n  country = country09)\n\n\nlayoutCoordinates = cbind(\n  x = jitter(coords2009$lon, amount = 15),\n  y = jitter(coords2009$lat, amount = 8))\n\n\nlabc = names(table(country09)[which(table(country09) > 1)])\nmatc = match(labc, countries$country,world$country)\n\ndfc = data.frame(\n  latc = countries$latitude[matc],\n  lonc = countries$longitude[matc],\n  labc)\n\ndfctrans = dfc\ndfctrans[, 1] = (dfc[,1] + 31) / 93\ndfctrans[, 2] = (dfc[,2] + 105) / 238\n\nggeo09 = ggnetwork(gr09, arrow.gap = 0, layout = layoutCoordinates)\n\n# plotting -----------------------------------------------\ng <- ggplot(ggeo09, aes(x = x, y = y, xend = xend, yend = yend)) +\n  geom_edges(color = \"black\", alpha = 0.5, curvature = 0.1) +\n  geom_nodes(aes(color = name), size = 2) +\n  theme_void() +\n  geom_label(data = dfctrans, aes(x = lonc, xend = lonc, y = latc, yend = latc,\n                                  label = labc, fill = labc), \n             colour = \"white\", alpha = 0.5, size = 3) +\n  labs(\n       caption= \"Viz Federica Gazzelloni - DataSource:stanford.edu - Connections Day18\") +\n  theme(legend.position = \"none\")\n        \n\nplot <- ggdraw(g) +  draw_label(\n  \"Connections Day18 - Distances in World Countries\",\n  fontface = 'bold',\n  x = 0.1,y=0.99,\n  hjust = 0\n) +\n  theme_cowplot(font_size = 14)\n              \n# saving ######################################\n\n\nragg::agg_png(here::here(\"day18_connections\", \"connections_day18.png\"),\n              res = 320, width = 14, height = 8, units = \"in\")\nplot\n\ndev.off()\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}