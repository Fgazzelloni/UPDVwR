{
  "hash": "009050b15c46a9c961edd87d37e766ff",
  "result": {
    "markdown": "---\ntitle: 'Slope'\nsubtitle: 'Welcome to #30DayChartChallenge 2021 day 5'\ndate: '2021-04-05'\nimage: 'day5_slope.png'\nimage-alt: ''\ndescription: 'Networks'\noutput: html_document\nexecute: \n   eval: false\n---\n\n\n\n### Week 15 FIRE\n\n::: {.cell}\n\n```{.r .cell-code}\n# libraries, fonts and colours --------------------\nlibrary(tidytuesdayR)\nlibrary(tidyverse)\nlibrary(extrafont)\nfonts()\n\nmy_col <- \"#720000\"\nmy_col2 <- \"#9900bfbf\"\n\n# load data and wrangling ----------------------------\n\ntuesdata <- tidytuesdayR::tt_load(2021, week = 15)\n\nforest <- tuesdata$forest\nforest_area <- tuesdata$forest_area\nbrazil_loss <- tuesdata$brazil_loss\nsoybean_use <- tuesdata$soybean_use\nvegetable_oil <- tuesdata$vegetable_oil\n\n\nbrazil_loss <- tuesdata$brazil_loss\n\nslopes <- brazil_loss%>%\n  pivot_longer(cols=c(5,6,11,12,13),names_to=\"Predictors\",values_to=\"values\")\n\nslopes <- slopes %>% select(year,fire,Predictors,values)\n\n# slope plot --------------------------------------------------\n\nslope_plot <- ggplot(slopes, aes(x = fire, y = values, color = Predictors) ) +\n  geom_point() +\n  geom_smooth(method = \"lm\", alpha = .15, aes(fill = Predictors)) +\n  theme_minimal() +\n  \n  scale_y_continuous(name=\"Predictors\", labels = scales::label_number_si(), limits=c(0,92000)) +\n  scale_x_continuous(name=\"Fire (hectares)\", labels = scales::label_number_si(), limits=c(26000,537000)) +\n  \n  \n  annotate(\"curve\", x = 400000, xend = 450000, y = 50000, yend = 75000, \n           color = \"red\", curvature = -0.5) +\n  annotate(\"text\", x=500000, y= 75000, label=\"driving down: tree plantations \\ndriving up: natural disturbances\", colour=my_col) +\n  \n  labs(x=\"Fire\",\n       y=\"Predictors\",\n       title = \"Brazil Fire due to predictors\",\n       subtitle = \"flooding, mining, disturbances, plantations, infrastructures...\",\n       caption = \"Viz @fgazzelloni | DataSource: @ourworldindata | Brazil Fire predictors\") +\n  \n  theme(legend.position = \"bottom\",\n        legend.text = element_text(family=\"Trebuchet MS\"),\n        legend.background = element_blank(),\n        legend.title = element_text(family=\"Trebuchet MS\"),\n        legend.key = element_rect(fill = \"white\", colour = NA),\n        \n        plot.title = element_text(family=\"Trebuchet MS\", size =32,face=\"bold\", hjust=0 ),\n        plot.subtitle = element_text(family=\"Trebuchet MS\", size =20),\n        \n        axis.title = element_text(family=\"Trebuchet MS\", size =12),\n        \n        strip.background = element_rect(colour = \"black\", fill = \"white\"),\n        strip.text.x = element_text(colour = \"white\", face = \"bold\"),\n        panel.spacing = unit(5, \"lines\"),\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        plot.background = element_rect(fill = \"azure\", color = NA),\n        panel.background = element_rect(fill = \"azure\")\n       ) +\n  annotate(\"text\", x = 280000, y = 80000, \n           family=\"Trebuchet MS\",\n           label = \"researchers at *Global Forest Watch* estimate that global deforestation \\nin 2019 was around 5.4 million hectares. \\n95% of this was in the tropics 33.12% in Brazil\")\n        \n\n# save final plot ---------------------------------------------------------\n\n\nragg::agg_png(here::here(\"w15\", \"tidytuesday_slope.png\"),\n              res = 320, width = 14, height = 8, units = \"in\")\nslope_plot\n\ndev.off()\n\n\n# read the image, attach the Tidytuesday logo and save it --------------------------\nlibrary(ggimage)\nlibrary(magick)\n\n\ntidy_logo<-image_read(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/static/plot_logo.png\") %>%\n  image_resize(\"300x300\")\n\n\ntidy_slope <- image_read(\"tidytuesday_slope.png\")\n\nattached_logo <- image_composite(tidy_slope, tidy_logo,\n                                 operator=\"atop\",\n                                 gravity=\"northeast\") # tell R where to put the logo\n\n\nimage_write(attached_logo, path = \"tidytuesday_slope.png\", format = \"png\") # save final plot\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}