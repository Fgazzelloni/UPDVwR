{
  "hash": "8ea9395e59503d0467e5c84de66b66d2",
  "result": {
    "markdown": "---\ntitle: 'Change'\nsubtitle: 'Welcome to #30DayChartChallenge 2021 day 19'\ndate: '2021-04-19'\nimage: 'day19_global_change.png'\nimage-alt: ''\ndescription: 'Networks'\noutput: html_document\nexecute: \n   eval: false\n---\n\n\n\n## Global Change Day 19 - Excess of Mortality\n\n### datasource: https://ourworldindata.org/excess-mortality-covid\n\n\n\n### load libraries\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(streamgraph)\nlibrary(lubridate)\n\n\n# load data and manipulation ------------------------------------\nexcess_of_mortality<-read.csv(\"https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/excess_mortality/excess_mortality.csv\")\nhead(excess_of_mortality)\nnames(head(excess_of_mortality))\n\nexcess_of_mortality[is.na(excess_of_mortality)] <- 0\n\navg_std_excess <- excess_of_mortality%>%group_by(location)%>%summarize(avg = mean(average_deaths_2015_2019_all_ages))\n\nmean(avg_std_excess$avg) # 8247.341\n\nplyr::count(excess_of_mortality$location)\n\n\ndf_plot <-excess_of_mortality%>%\n  group_by(date, location) %>%\n  tally(wt=p_scores_all_ages) \n\n\n# function \"sg_add_marker()\" found here: https://github.com/hrbrmstr/streamgraph/blob/master/R/marker.r\nsg_add_marker <- function(sg, x, label=\"\", stroke_width=0.5, stroke=\"#7f7f7f\", space=5,\n                          y=0, color=\"#7f7f7f\", size=12, anchor=\"start\") {\n  \n  if (inherits(x, \"Date\")) { x <- format(x, \"%Y-%m-%d\") }\n  \n  mark <- data.frame(x=x, y=y, label=label, color=color, stroke_width=stroke_width, stroke=stroke,\n                     space=space, size=size, anchor=anchor, stringsAsFactors=FALSE)\n  \n  if (is.null(sg$x$markers)) {\n    sg$x$markers <- mark\n  } else {\n    sg$x$markers <- bind_rows(mark, sg$x$markers)\n  }\n  \n  sg\n  \n}\n\n\ntop_10<-df_plot%>%arrange(-n)%>%group_by(location)%>%summarize(sum=sum(n))%>%ungroup()%>%arrange(-sum)\nplyr::count(df_plot$location)\n  \n\n# plotting -----------------------------------------------\nstreamgraph(data= df_plot, \"location\", \"n\", \"date\", offset=\"zero\", \n                    interpolate=\"cardinal\",interactive=FALSE) %>%\n  sg_axis_y(10) %>%\n  # vertical line and label\n  sg_add_marker(x=as.Date(\"2020-01-05\"),  y = 408, label= \"\",\n                stroke_width = 0.8,\n                stroke = \"#7f7f7f\", space = 5, color = \"#7f7f7f\",\n                size = 12, anchor = \"start\") %>% \n  sg_add_marker(x=as.Date(\"2020-04-08\"), label= \"\",\n                stroke_width = 0.8,\n                stroke = \"#7f7f7f\", space = 5, y = 0, color = \"#7f7f7f\",\n                size = 12, anchor = \"end\") %>% \n  sg_add_marker(x=as.Date(\"2020-11-01\"), label= \"\",\n                stroke_width = 0.8,\n                stroke = \"#7f7f7f\", space = 5, y = 0, color = \"#7f7f7f\",\n                size = 12, anchor = \"start\") %>% \n  sg_add_marker(x=as.Date(\"2021-01-01\"), label= \"\",\n                stroke_width = 0.8,\n                stroke = \"#7f7f7f\", space = 5, y = 0, color = \"#7f7f7f\",\n                size = 12, anchor = \"start\") %>% \n  sg_add_marker(x=as.Date(\"2021-03-01\"), label= \"\",\n                stroke_width = 0.8,\n                stroke = \"#7f7f7f\", space = 5, y = 0, color = \"#7f7f7f\",\n                size = 12, anchor = \"start\") %>% \n  # annotate the top ten countries\n  sg_annotate(label=\"Top Ten countries with the highest P-score\",size=10,x=as.Date(\"2020-01-7\"), y=1.30*10^3, color=\"black\") %>%\n  sg_annotate(label=\"1 - Equador\",size=10,x=as.Date(\"2020-01-7\"), y=1.25*10^3, color=\"black\") %>%\n  sg_annotate(label=\"2 - Mexico\",size=10,x=as.Date(\"2020-01-7\"), y=1.20*10^3, color=\"black\") %>%\n  sg_annotate(label=\"3 - Colombia\",size=10,x=as.Date(\"2020-01-7\"), y=1.15*10^3, color=\"black\") %>%\n  sg_annotate(label=\"4 - Poland\",size=10,x=as.Date(\"2020-01-7\"), y=1.10*10^3, color=\"black\") %>%\n  sg_annotate(label=\"5 - Chile\",size=10,x=as.Date(\"2020-01-7\"), y=1.05*10^3, color=\"black\") %>%\n  sg_annotate(label=\"6 - Czechia\",size=10,x=as.Date(\"2020-01-7\"), y=1.0*10^3, color=\"black\") %>%\n  sg_annotate(label=\"7 - United States\",size=10,x=as.Date(\"2020-01-7\"), y=0.95*10^3, color=\"black\") %>%\n  sg_annotate(label=\"8 - Slovakia\",size=10,x=as.Date(\"2020-01-7\"), y=0.90*10^3, color=\"black\") %>%\n  sg_annotate(label=\"9 - Slovenia\",size=10,x=as.Date(\"2020-01-7\"), y=0.85*10^3, color=\"black\") %>%\n  sg_annotate(label=\"10 - Spain\",size=10,x=as.Date(\"2020-01-7\"), y=0.80*10^3, color=\"black\") %>%\n  # set a title and a subtile\n  sg_annotate(label=\"How have excess mortality changed Globally due to Covid19?\", \n              size=30,x=as.Date(\"2020-01-23\"), y=1.57*10^3, color=\"blue\") %>%\n  sg_annotate(label =\"The P-score is the percentage of number of deaths in a given period obtained as proportion of the deaths difference with a reference period\",\n              size=10, x=as.Date(\"2020-01-07\"), y=1.45*10^3, color=\"black\") %>%\n  # annotate formulation for calculating the P-score\n  sg_annotate(label = \"Excess of Deaths_w2020 = Deaths_w2020 - Avg_Deaths_w2015-2019\",\n              size=10, x=as.Date(\"2020-05-13\"), y=1.10*10^3, color=\"black\") %>%\n  sg_annotate(label = \"P-score = (Deaths_2020-2021 - Avg_Deaths_2015-2019)/ Avg_Deaths_2015-2019\",\n              size=10, x=as.Date(\"2020-05-13\"), y=1.05*10^3, color=\"black\") %>%\n  # set a caption\n  sg_annotate(label = \"Viz Federica Gazzelloni | Data: OurWorldinData | Global Change Day19\",\n              size=10, x=as.Date(\"2020-06-23\"), y=-0.1*10^3, color=\"blue\") %>%\n  # full color\n  sg_fill_tableau() \n  \n\n\n\n# saving ######################################\nlibrary(webshot)\n\n# Make a webshot in png : Low quality - but you can choose shape\nwebshot(here::here(\"day19_global_change\", \"global_change_day19.png\"), \n        delay = 0.2 , cliprect = c(440, 0, 1000, 10))\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}