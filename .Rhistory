path%>%View
file_path <- path$value
text <- text_full[2]
contents <- readLines(file_path[2],-1L)
top_doc = contents[c(1:4)]
end_doc <- contents[-c(1:4)]
newcontents <- c(top_doc,text,end_doc)
writeLines(newcontents, file_path[2])
file_path[2]
path%>%View
dirs<- list.dirs("tidytuesday/cases2023/posts2023")
dirs<-dirs[-1]
path<-list.files(dirs,full.names = T)%>%
as_tibble()%>%
filter(str_detect(value,".qmd"))%>%
mutate(id=str_extract(value,"w[0-9]+"),
id=gsub("^w","",id),
id=as.integer(id))%>%
arrange(id)
path%>%View
file_path <- path$value
text <- text_full[2]
contents <- readLines(file_path[2],-1L)
top_doc = contents[c(1:4)]
end_doc <- contents[-c(1:4)]
newcontents <- c(top_doc,text,end_doc)
writeLines(newcontents, file_path[2])
file_path <- path$value
text <- text_full[3]
contents <- readLines(file_path[3],-1L)
top_doc = contents[c(1:4)]
end_doc <- contents[-c(1:4)]
newcontents <- c(top_doc,text,end_doc)
writeLines(newcontents, file_path[3])
file_path <- path$value
text <- text_full[4]
contents <- readLines(file_path[4],-1L)
top_doc = contents[c(1:4)]
end_doc <- contents[-c(1:4)]
newcontents <- c(top_doc,text,end_doc)
writeLines(newcontents, file_path[4])
file_path <- path$value
text <- text_full[5]
contents <- readLines(file_path[5],-1L)
top_doc = contents[c(1:4)]
end_doc <- contents[-c(1:7)]
newcontents <- c(top_doc,text,end_doc)
writeLines(newcontents, file_path[5])
file_path <- path$value
text <- text_full[6]
contents <- readLines(file_path[6],-1L)
top_doc = contents[c(1:4)]
end_doc <- contents[-c(1:6)]
newcontents <- c(top_doc,text,end_doc)
writeLines(newcontents, file_path[6])
# write THE YAMAL on top of each file
for (i in 1:28) {
file_path <- path$value
text <- text_full[i]
contents <- readLines(file_path[i],-1L)
top_doc = contents[c(1:4)]
end_doc <- contents[-c(1:6)]
newcontents <- c(top_doc,text,end_doc)
writeLines(newcontents, file_path[i])
}
## delete all the png in the folder
dirs <- list.dirs("tidytuesday/cases2023/posts2023")
path <- list.files(dirs,full.names = T)
my_path <- path%>%
as_tibble()%>%
filter(str_detect(value,".qmd|.png|.gif"))%>%
mutate(id=str_extract(value,"w[0-9]+"),
id=gsub("^w","",id),
id=as.integer(id))%>%
arrange(id)#%>%View
my_path%>%View
my_path <- path%>%
as_tibble()%>%
filter(str_detect(value,".png|.gif"))%>%
mutate(id=str_extract(value,"w[0-9]+"),
id=gsub("^w","",id),
id=as.integer(id))%>%
arrange(id)
my_path%>%View
for (i in 1:20) {
file.remove(my_path$value[i])
}
######################
# Load the magick package
library(magick)
# Read the PNG image
input_png <- image_read("images/collage2023.png")
# Convert PNG to SVG (vector format)
output_svg <- image_convert(input_png, format = "svg")
# Resize the SVG vector image to 60x60
output_resized_svg <- image_scale(output_svg, "600x600")
# Convert the resized SVG vector image back to PNG
output_resized_png <- image_convert(output_resized_svg, format = "png")
allresized <- image_scale(image_read("images/collage2023.png"),"200x")
image_write(allresized,
path = "images/collage2023r.png",
format = "png")
allresized <- image_scale(image_read("images/collage2023.png"),"400x")
image_write(allresized,
path = "images/collage2023r.png",
format = "png")
# Read the PNG image
input_png <- image_read("images/collage2023.png")
# Convert PNG to SVG (vector format)
output_svg <- image_convert(input_png, format = "svg")
# Resize the SVG vector image to 60x60
output_resized_svg <- image_scale(output_svg, "600x600")
# Convert the resized SVG vector image back to PNG
output_resized_png <- image_convert(output_resized_svg, format = "png")
# Save the final resized PNG image
image_write(output_resized_png, path = "images/collage2023r.png")
# Resize the SVG vector image to 60x60
output_resized_svg <- image_scale(output_svg, "800x800")
# Convert the resized SVG vector image back to PNG
output_resized_png <- image_convert(output_resized_svg, format = "png")
# Save the final resized PNG image
image_write(output_resized_png, path = "images/collage2023r.png")
######################
# Load the magick package
library(magick)
# Read the PNG image
input_png <- image_read("images/collage2021.png")
# Convert PNG to SVG (vector format)
output_svg <- image_convert(input_png, format = "svg")
# Resize the SVG vector image to 60x60
output_resized_svg <- image_scale(output_svg, "800x800")
# Convert the resized SVG vector image back to PNG
output_resized_png <- image_convert(output_resized_svg, format = "png")
# Save the final resized PNG image
image_write(output_resized_png, path = "images/collage2021r.png")
# Read the PNG image
input_png <- image_read("images/collage2022.png")
# Convert PNG to SVG (vector format)
output_svg <- image_convert(input_png, format = "svg")
# Resize the SVG vector image to 60x60
output_resized_svg <- image_scale(output_svg, "800x800")
# Convert the resized SVG vector image back to PNG
output_resized_png <- image_convert(output_resized_svg, format = "png")
# Save the final resized PNG image
image_write(output_resized_png, path = "images/collage2022r.png")
list.dirs("R_general_resources/EDA_and_maps/30daymapchallenge/2023")
list.files("R_general_resources/EDA_and_maps/30daymapchallenge/2023")
list.files("~/Documents/R/R_general_resources/EDA_and_maps/30DayMapChallenge/2023")
list.dirs("~/Documents/R/R_general_resources/EDA_and_maps/30DayMapChallenge/2023")
MapChallenge_2023 <- list.dirs("~/Documents/R/R_general_resources/EDA_and_maps/30DayMapChallenge/2023")
MapChallenge_2023
MapChallenge_2023 <- list.files("~/Documents/R/R_general_resources/EDA_and_maps/30DayMapChallenge/2023")
MapChallenge_2023
files <- list.files("~/Documents/R/R_general_resources/EDA_and_maps/30DayMapChallenge/2023")
folders <- list.files("~/Documents/R/R_general_resources/EDA_and_maps/30DayMapChallenge/2023")
folders
list.files(folders)
folders
list.files(paste0("~/Documents/R/R_general_resources/EDA_and_maps/30DayMapChallenge/2023/",
folders))
## Create folders
library(tidyverse)
list.files(paste0("~/Documents/R/R_general_resources/EDA_and_maps/30DayMapChallenge/2023/",
folders))%>%
filter(str_detect(".qmd"))
tibble(folders_dir =list.files(paste0("~/Documents/R/R_general_resources/EDA_and_maps/30DayMapChallenge/2023/",
folders)))
tibble(folders_dir =list.files(paste0("~/Documents/R/R_general_resources/EDA_and_maps/30DayMapChallenge/2023/",
folders)))%>%
filter(str_detect(folders_dir,".qmd"))
files <- tibble(folders_dir =list.files(paste0("~/Documents/R/R_general_resources/EDA_and_maps/30DayMapChallenge/2023/",
folders)))%>%
filter(str_detect(folders_dir,".qmd"))%>%
unlist()
files
length(folders)
dir.create(file.path("~/Documents/R/R_general_resources/UPDVwR/mapchallenges/cases2023/posts2023/",
folders[1])
)
# create folders and files
for (i in 1:length(folders)) {
dir.create(file.path("~/Documents/R/R_general_resources/UPDVwR/mapchallenges/cases2023/posts2023/",
folders[i]),
recursive = TRUE)
}
paste0("~/Documents/R/R_general_resources/UPDVwR/mapchallenges/cases2023/posts2023/",
folder_name,"/",folder_name,".qmd")
paste0("~/Documents/R/R_general_resources/UPDVwR/mapchallenges/cases2023/posts2023/",
folders,"/",folders,".qmd")
file.create(paste0("~/Documents/R/R_general_resources/UPDVwR/mapchallenges/cases2023/posts2023/",
folders,"/",folders,".qmd"))
## Write the YAML
list.dirs("~/Documents/R/R_general_resources/UPDVwR/mapchallenges/cases2023/posts2023/")
## Write the YAML
list.dirs("~/Documents/R/R_general_resources/UPDVwR/mapchallenges/cases2023/posts2023")
## Write the YAML
list.files("~/Documents/R/R_general_resources/UPDVwR/mapchallenges/cases2023/posts2023")
folders
## Write the YAML
foldrs
## Write the YAML
folders
## Write the YAML
tibble(folders=folders)
## Write the YAML
tibble(folders=folders)%>%
mutate(title=gsub("day[0-9]+_","",folders))
## Write the YAML
tibble(folders=folders)%>%
mutate(title=gsub("day[0-9]+_","",folders),
title=gsub("-"," ",title))
## Write the YAML
tibble(folders=folders)%>%
mutate(title=gsub("day[0-9]+_","",folders),
title=gsub("-"," ",title),
title=str_to_title(title))
## Write the YAML
tibble(folders=folders)%>%
mutate(title=gsub("day[0-9]+_","",folders),
title=gsub("-"," ",title),
title=str_to_title(title),
day=str_extract(folders,"day[0-9]+"))
## Write the YAML
tibble(folders=folders)%>%
mutate(title=gsub("day[0-9]+_","",folders),
title=gsub("-"," ",title),
title=str_to_title(title),
day=str_extract(folders,"[0-9]+"))
## Write the YAML
tibble(folders=folders)%>%
mutate(title=gsub("day[0-9]+_","",folders),
title=gsub("-"," ",title),
title=str_to_title(title),
day=str_extract(folders,"[0-9]+"),
day=ifelse(day<10,paste0(0,day),day))
## Write the YAML
tibble(folders=folders)%>%
mutate(title=gsub("day[0-9]+_","",folders),
title=gsub("-"," ",title),
title=str_to_title(title),
day=str_extract(folders,"[0-9]+"),
day=ifelse(day<10,paste0(0,day),day))%>%
arrange(day)
## Write the YAML
tibble(folders=folders)%>%
mutate(title=gsub("day[0-9]+_","",folders),
title=gsub("-"," ",title),
title=str_to_title(title),
day=str_extract(folders,"[0-9]+"),
day=ifelse(day<10,paste0(0,day),day),
day=as.integer(day))%>%
arrange(day)
## Write the YAML
tibble(folders=folders)%>%
mutate(title=gsub("day[0-9]+_","",folders),
title=gsub("-"," ",title),
title=str_to_title(title),
day=str_extract(folders,"[0-9]+"),
day=as.integer(day))
## Write the YAML
tibble(folders=folders)%>%
mutate(title=gsub("day[0-9]+_","",folders),
title=gsub("-"," ",title),
title=str_to_title(title),
day=str_extract(folders,"[0-9]+"),
day=as.integer(day))%>%
arrange(day)
## Write the YAML
tibble(folders=folders)%>%
mutate(title=gsub("day[0-9]+_","",folders),
title=gsub("-"," ",title),
title=str_to_title(title),
day=str_extract(folders,"[0-9]+"),
day=as.integer(day))%>%
arrange(day)%>%
mutate(date=paste0("2023-11-",day))
## Write the YAML
tibble(folders=folders)%>%
mutate(title=gsub("day[0-9]+_","",folders),
title=gsub("-"," ",title),
title=str_to_title(title),
day=str_extract(folders,"[0-9]+"),
day=as.integer(day))%>%
arrange(day)%>%
mutate(date=paste0("2023-11-",day),
image=paste0("https://raw.githubusercontent.com/Fgazzelloni/30DayMapChallenge/master/2023/",folders,"/",folders,".png"))
## Write the YAML
tibble(folders=folders)%>%
mutate(title=gsub("day[0-9]+_","",folders),
title=gsub("-"," ",title),
title=str_to_title(title),
day=str_extract(folders,"[0-9]+"),
day=as.integer(day))%>%
arrange(day)%>%
mutate(date=paste0("2023-11-",day),
image=paste0("https://raw.githubusercontent.com/Fgazzelloni/30DayMapChallenge/master/2023/",folders,"/",folders,".png"))%>%View
## Write the YAML
tb <- tibble(folders=folders)%>%
mutate(title=gsub("day[0-9]+_","",folders),
title=gsub("-"," ",title),
title=str_to_title(title),
day=str_extract(folders,"[0-9]+"),
day=as.integer(day))%>%
arrange(day)%>%
mutate(date=paste0("2023-11-",day),
image=paste0("https://raw.githubusercontent.com/Fgazzelloni/30DayMapChallenge/master/2023/",
folders,"/",folders,".png"))
## Create folders
library(tidyverse)
folders <- list.files("~/Documents/R/R_general_resources/EDA_and_maps/30DayMapChallenge/2023")
## Write the YAML
tb <- tibble(folders=folders)%>%
mutate(title=gsub("day[0-9]+_","",folders),
title=gsub("-"," ",title),
title=str_to_title(title),
day=str_extract(folders,"[0-9]+"),
day=as.integer(day))%>%
arrange(day)%>%
mutate(date=paste0("2023-11-",day),
image=paste0("https://raw.githubusercontent.com/Fgazzelloni/30DayMapChallenge/master/2023/",
folders,"/",folders,".png"))
tb
paste0("'",tb$image,"'")
paste0("~/Documents/R/R_general_resources/UPDVwR/mapchallenges/cases2023/posts2023/",
folders,"/",folders,".qmd")
text_full <- paste0("---",
"\n",
"title: ",
paste0("'",tb$title,"'"),
"\n",
"subtitle: ",
paste0("'Welcome to #30DayMapChallenge 2023 day",tb$day,"'"),
"\n",
"date: ",
paste0("'",tb$date,"'"),
"\n",
"image: ",
paste0("'",tb$image,"'"),
"\n",
"image-alt: ",
"''",
"\n",
"description: ",
"'Networks'",
"\n",
"output: ",
"html_document",
"\n",
"execute: ",
"\n ",
"  eval: ",
"false",
"\n",
"---")
file_path <- paste0("~/Documents/R/R_general_resources/UPDVwR/mapchallenges/cases2023/posts2023/",
folders,"/",folders,".qmd")
text <- text_full[1]
text
contents <- readLines(file_path[1],-1L)
contents
writeLines(text, file_path[1])
file_path
folders
paste0("~/Documents/R/R_general_resources/EDA_and_maps/30DayMapChallenge/2023/",
folders,"/",folders,".qmd")
file_path_origin <- paste0("~/Documents/R/R_general_resources/EDA_and_maps/30DayMapChallenge/2023/",
folders,"/",folders,".qmd")
file_path_origin
contents <- readLines(file_path_origin[1],-1L)
contents
file_path
writeLines(text, file_path[1])
contents
writeLines(contents, file_path[1])
contents
contents[1]
contents[1:5]
contents[1:4]
paste0("image: ",
paste0("'",tb$image,"'"),
"\n")
paste0("image: ",
paste0("'",tb$image[1],"'"),
"\n")
image=paste0("image: ",
paste0("'",tb$image[1],"'"),
"\n")
contents[5]
contents[6:-1L]
length(contents)
contents[6:length(contents)]
readLines(contents[1:4],image,contents[6:length(contents)])
newcontnet <- c(contents[1:4],image,contents[6:length(contents)])
newcontnet
paste0("'",tb$image[1],"'")")
image=paste0("image: ",
newcontnet <- c(contents[1:4],image,contents[6:length(contents)])
newcontent <- c(contents[1:4],image,contents[6:length(contents)])
newcontent
image=paste0("image: ",
paste0("'",tb$image[1],"'"))
newcontent <- c(contents[1:4],image,contents[6:length(contents)])
image
newcontent
readLines(file_path_origin[1],-1L)
writeLines(newcontent, file_path[1])
length(contents[1])
contents
## Write the code
for (i in 1:length(folders)) {
file_path_origin <- paste0("~/Documents/R/R_general_resources/EDA_and_maps/30DayMapChallenge/2023/",
folders,"/",folders,".qmd")
image=paste0("image: ",
paste0("'",tb$image[i],"'"))
contents <- readLines(file_path_origin[i],-1L)
newcontent <- c(contents[1:4],image,contents[6:length(contents)])
writeLines(newcontent, file_path[i])
}
file_path_origin
newcontent
tb$image[2]
tb$image
paste0("image: ",
paste0("'",tb$image,"'"))
## Write the code
for (i in 1:length(folders)) {
file_path_origin <- paste0("~/Documents/R/R_general_resources/EDA_and_maps/30DayMapChallenge/2023/",
folders,"/",folders,".qmd")
image=paste0("image: ",
paste0("'",tb$image,"'"))
contents <- readLines(file_path_origin[i],-1L)
newcontent <- c(contents[1:4],image[i],contents[6:length(contents)])
writeLines(newcontent, file_path[i])
}
file_path_origin
file_path_origin <- paste0("~/Documents/R/R_general_resources/EDA_and_maps/30DayMapChallenge/2023/",
tb$folders,"/",tb$folders,".qmd")
file_path_origin
## Write the code
for (i in 1:length(folders)) {
file_path_origin <- paste0("~/Documents/R/R_general_resources/EDA_and_maps/30DayMapChallenge/2023/",
tb$folders,"/",tb$folders,".qmd")
image=paste0("image: ",
paste0("'",tb$image,"'"))
contents <- readLines(file_path_origin[i],-1L)
newcontent <- c(contents[1:4],image[i],contents[6:length(contents)])
writeLines(newcontent, file_path[i])
}
tb$folders
file_path_origin[2]
image[2]
file_path[2]
paste0("~/Documents/R/R_general_resources/UPDVwR/mapchallenges/cases2023/posts2023/",
tb$folders,"/",tb$folders,".qmd")
file_path <- paste0("~/Documents/R/R_general_resources/UPDVwR/mapchallenges/cases2023/posts2023/",
tb$folders,"/",tb$folders,".qmd")
file_path[2]
## Write the code
for (i in 1:length(folders)) {
file_path_origin <- paste0("~/Documents/R/R_general_resources/EDA_and_maps/30DayMapChallenge/2023/",
tb$folders,"/",tb$folders,".qmd")
image=paste0("image: ",
paste0("'",tb$image,"'"))
contents <- readLines(file_path_origin[i],-1L)
newcontent <- c(contents[1:4],image[i],contents[6:length(contents)])
writeLines(newcontent, file_path[2])
}
file_path_origin <- paste0("~/Documents/R/R_general_resources/EDA_and_maps/30DayMapChallenge/2023/",
tb$folders,"/",tb$folders,".qmd")
file_path_origin
tb$image
file_path_origin
file_path[2]
readLines(file_path_origin[2],-1L)
contents <- readLines(file_path_origin[2],-1L)
c(contents[1:4],image[2],contents[6:length(contents)])
file_path_origin <- paste0("~/Documents/R/R_general_resources/EDA_and_maps/30DayMapChallenge/2023/",
tb$folders,"/",tb$folders,".qmd")
image=paste0("image: ",
paste0("'",tb$image,"'"))
contents <- readLines(file_path_origin[2],-1L)
newcontent <- c(contents[1:4],image[2],contents[6:length(contents)])
writeLines(newcontent, file_path[2])
folders
length(folders)
## Write the code
for (i in 1:length(folders)) {
file_path_origin <- paste0("~/Documents/R/R_general_resources/EDA_and_maps/30DayMapChallenge/2023/",
tb$folders,"/",tb$folders,".qmd")
image=paste0("image: ",
paste0("'",tb$image,"'"))
contents <- readLines(file_path_origin[i],-1L)
newcontent <- c(contents[1:4],image[i],contents[6:length(contents)])
writeLines(newcontent, file_path[i])
}
## Substitute images with github raw address
folders22 <- list.files("~/Documents/R/R_general_resources/EDA_and_maps/30DayMapChallenge/2022/")
files22 <- tibble(folders_dir =list.files(paste0("~/Documents/R/R_general_resources/EDA_and_maps/30DayMapChallenge/2022/",
folders22)))%>%
filter(str_detect(folders_dir,".qmd"))%>%
unlist()
library(tidyverse)
## Substitute images with github raw address
folders22 <- list.files("~/Documents/R/R_general_resources/EDA_and_maps/30DayMapChallenge/2022/")
files22 <- tibble(folders_dir =list.files(paste0("~/Documents/R/R_general_resources/EDA_and_maps/30DayMapChallenge/2022/",
folders22)))%>%
filter(str_detect(folders_dir,".qmd"))%>%
unlist()
files22
folders22
## Substitute images for with github raw address
folders22 <- list.files("~/Documents/R/R_general_resources/EDA_and_maps/30DayMapChallenge/2022/")
