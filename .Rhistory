day=as.integer(day))%>%
arrange(day)
codes  %>%View
readLines(codes$full_path[1],-1L)
contents <- readLines(codes$full_path[1],-1L)
contents[1:11]
## read updv contents
updv_dir<- "~/Documents/R/R_general_resources/EDA_and_maps/UPDVwR/mapchallenges/cases2023/posts2023/"
updv_path <- list.files(updv_dir)
updv_path
## read updv contents
updv_dir<- "~/Documents/R/R_general_resources/EDA_and_maps/UPDVwR/mapchallenges/cases2023/posts2023/"
updv_path <- list.files(updv_dir)
updv_files <- list.files(paste0(updv_dir,updv_path))
updv_files
tibble(files=updv_files)
tibble(files=updv_files,
folders=updv_files)
updv_path
updv_files
updv_dir
paste0(updv_dir,updv_path)
updv_codes <- tibble(files=updv_files)%>%
mutate(folders=paste0(updv_dir,updv_path),
full_path=paste0(folders,"/",files),
day=str_extract(files,"[0-9]+"),
day=as.integer(day))%>%
arrange(day)
for (i in 1:30) {
original_contents <- readLines(codes$full_path[1],-1L)
updv_contents <-
newcontent <- c(contents[1:11],image[i],contents[6:length(contents)])
writeLines(newcontent, file_path_origin[i])
}
updv_codes
updv_codes%>%View
readLines(updv_codes$full_path[1],-1L)
original_contents <- readLines(codes$full_path[1],-1L)
updv_contents <- readLines(updv_codes$full_path[1],-1L)
updv_contents[1:11]
original_contents[11:length(contents)]
c(updv_contents[1:11],original_contents[11:length(contents)])
c(updv_contents[1:11],original_contents[12:length(contents)])
updv_codes$full_path
original_contents <- readLines(codes$full_path[1],-1L)
updv_contents <- readLines(updv_codes$full_path[1],-1L)
newcontent <- c(updv_contents[1:11],original_contents[12:length(contents)])
writeLines(newcontent, updv_codes$full_path[1])
original_contents <- readLines(codes$full_path[28],-1L)
updv_contents <- readLines(updv_codes$full_path[28],-1L)
newcontent <- c(updv_contents[1:11],original_contents[12:length(contents)])
writeLines(newcontent, updv_codes$full_path[28])
original_contents <- readLines(codes$full_path[28],-1L)
updv_contents <- readLines(updv_codes$full_path[28],-1L)
newcontent <- c(updv_contents[1:11],original_contents[12:length(original_contents)])
writeLines(newcontent, updv_codes$full_path[28])
for (i in 1:30) {
original_contents <- readLines(codes$full_path[i],-1L)
updv_contents <- readLines(updv_codes$full_path[i],-1L)
newcontent <- c(updv_contents[1:11],original_contents[12:length(original_contents)])
writeLines(newcontent, updv_codes$full_path[i])
}
readLines(codes$full_path[12],-1L)
codes$full_path[12]
#| message: false
#| warning: false
library(idbr)
library(tidyverse)
data <- get_idb(
country = "all",
year = 2021,
variables = "tfr",
geometry = TRUE,
)
data %>% head()
ggplot(data, aes(fill = code)) +
theme_bw() +
geom_sf() +
coord_sf(crs = 'ESRI:54030') +
scale_fill_viridis_d()+
guides(fill=guide_legend(nrow = 10,title = ""))+
theme(legend.key.size = unit(2,units = "pt"),
legend.text = element_text(size=2),
legend.position = "bottom")
#| warning: false
#| message: false
library(rvest)
south_america_data <- read_html("https://en.wikipedia.org/wiki/South_America")
#| warning: false
#| message: false
library(rvest)
south_america_data <- read_html("https://en.wikipedia.org/wiki/South_America")
south_america_countries <- south_america_data %>%
html_nodes("table") %>%
.[[3]] %>%
html_table(fill = TRUE)
south_america_countries %>% names()
south_america_countries <- south_america_countries%>%
select('Country / Territory')%>%
unlist()
sa <- get_idb(
country = south_america_countries,
year = 2021,
variables = "tfr",
geometry = TRUE,
)
sa %>% head()
summary(sa$tfr)
col.range<- c(1,3)
ggplot(sa, aes(fill = tfr)) +
geom_sf(color="white") +
geom_sf_text(aes(label=name),size=3,family="Roboto Condensed")+
scale_fill_continuous(low = "#006400",
high = "#FF4500",
limits=col.range)+
ggtext::geom_richtext(x=0,y=0,
hjust = 2,
vjust=1.5,
label="South<br>America",
fill = NA,
label.color = NA,
size=25,
family = "Gill Sans")+
ggtext::geom_richtext(x=0,y=0,
hjust = 1.4,
vjust=-3,
label="Total fertility rate by country in 2021",
fill = NA,
label.color = NA,
size=6,
family = "Gill Sans")+
coord_sf(crs = 'ESRI:54030',clip = "off") +
labs(caption="#30DayMapChallenge 2023 - Day 12 South America\nDataSource: wikipedia & {idbr} package | Map @fgazzelloni\n\n'Scale on map varies by more than 10%, scale bar may be inaccurate' {ggspatial}",
fill="Total fertility rate (tfr)")+
ggthemes::theme_map()+
theme(text=element_text(family = "Gill Sans"),
plot.caption = element_text(hjust=0),
legend.position = c(0.8,0.1),
legend.key.size = unit(10,units = "pt"),
legend.text = element_text(size=10),
legend.background = element_rect(color="#E6D2B8",fill="#E6D2B8"))+
ggspatial::annotation_scale()
quarto::quarto_publish_site()
## list file names and read in
imgs <- c(plate1 = "https://raw.githubusercontent.com/Fgazzelloni/TidyTuesday/main/data/2021/w25_du_bois/w25_du_bois.png"
plate1_2 = "https://raw.githubusercontent.com/Fgazzelloni/TidyTuesday/main/data/2022/w6_airforce/w6_airforce.png"
imgs
## list file names and read in
imgs <- c(plate1 = "https://raw.githubusercontent.com/Fgazzelloni/TidyTuesday/main/data/2021/w25_du_bois/w25_du_bois.png",
plate1_2 = "https://raw.githubusercontent.com/Fgazzelloni/TidyTuesday/main/data/2022/w6_airforce/w6_airforce.png",
plate14 = "https://raw.githubusercontent.com/Fgazzelloni/TidyTuesday/main/data/2022/w7_dubois/w7_number6.png",
plate25 = "https://raw.githubusercontent.com/Fgazzelloni/30DayChartChallenge/main/data/Edition_2022/day3_historical/day3_historical.png",
plate6 = "https://raw.githubusercontent.com/Fgazzelloni/DuboisChallenge2024_FG/main/2024/challenge01/challenge01.png",
plate12 = "https://raw.githubusercontent.com/Fgazzelloni/DuboisChallenge2024_FG/main/2024/challenge02/challenge02.png",
plate19 = "https://raw.githubusercontent.com/Fgazzelloni/DuboisChallenge2024_FG/main/2024/challenge03/challenge03.png"
)
## list file names and read in
imgs <- c(plate1 = "https://raw.githubusercontent.com/Fgazzelloni/TidyTuesday/main/data/2021/w25_du_bois/w25_du_bois.png",
plate1_2 = "https://raw.githubusercontent.com/Fgazzelloni/TidyTuesday/main/data/2022/w6_airforce/w6_airforce.png",
plate14 = "https://raw.githubusercontent.com/Fgazzelloni/TidyTuesday/main/data/2022/w7_dubois/w7_number6.png",
plate25 = "https://raw.githubusercontent.com/Fgazzelloni/30DayChartChallenge/main/data/Edition_2022/day3_historical/day3_historical.png",
plate6 = "https://raw.githubusercontent.com/Fgazzelloni/DuboisChallenge2024_FG/main/2024/challenge01/challenge01.png",
plate12 = "https://raw.githubusercontent.com/Fgazzelloni/DuboisChallenge2024_FG/main/2024/challenge02/challenge02.png",
plate19 = "https://raw.githubusercontent.com/Fgazzelloni/DuboisChallenge2024_FG/main/2024/challenge03/challenge03.png"
)
imgs
list.files(imgs, full.names = TRUE)
## list file names and read in
imgs <- data.frame(plate1 = "https://raw.githubusercontent.com/Fgazzelloni/TidyTuesday/main/data/2021/w25_du_bois/w25_du_bois.png",
plate1_2 = "https://raw.githubusercontent.com/Fgazzelloni/TidyTuesday/main/data/2022/w6_airforce/w6_airforce.png",
plate14 = "https://raw.githubusercontent.com/Fgazzelloni/TidyTuesday/main/data/2022/w7_dubois/w7_number6.png",
plate25 = "https://raw.githubusercontent.com/Fgazzelloni/30DayChartChallenge/main/data/Edition_2022/day3_historical/day3_historical.png",
plate6 = "https://raw.githubusercontent.com/Fgazzelloni/DuboisChallenge2024_FG/main/2024/challenge01/challenge01.png",
plate12 = "https://raw.githubusercontent.com/Fgazzelloni/DuboisChallenge2024_FG/main/2024/challenge02/challenge02.png",
plate19 = "https://raw.githubusercontent.com/Fgazzelloni/DuboisChallenge2024_FG/main/2024/challenge03/challenge03.png"
)
imgs
## list file names and read in
imgs <- c(plate1 = "https://raw.githubusercontent.com/Fgazzelloni/TidyTuesday/main/data/2021/w25_du_bois/w25_du_bois.png",
plate1_2 = "https://raw.githubusercontent.com/Fgazzelloni/TidyTuesday/main/data/2022/w6_airforce/w6_airforce.png",
plate14 = "https://raw.githubusercontent.com/Fgazzelloni/TidyTuesday/main/data/2022/w7_dubois/w7_number6.png",
plate25 = "https://raw.githubusercontent.com/Fgazzelloni/30DayChartChallenge/main/data/Edition_2022/day3_historical/day3_historical.png",
plate6 = "https://raw.githubusercontent.com/Fgazzelloni/DuboisChallenge2024_FG/main/2024/challenge01/challenge01.png",
plate12 = "https://raw.githubusercontent.com/Fgazzelloni/DuboisChallenge2024_FG/main/2024/challenge02/challenge02.png",
plate19 = "https://raw.githubusercontent.com/Fgazzelloni/DuboisChallenge2024_FG/main/2024/challenge03/challenge03.png"
)
str(imgs)
class(imgs)
## list file names and read in
imgs <- c(plate1 = "https://raw.githubusercontent.com/Fgazzelloni/TidyTuesday/main/data/2021/w25_du_bois/w25_du_bois.png",
plate1_2 = "https://raw.githubusercontent.com/Fgazzelloni/TidyTuesday/main/data/2022/w6_airforce/w6_airforce.png",
plate14 = "https://raw.githubusercontent.com/Fgazzelloni/TidyTuesday/main/data/2022/w7_dubois/w7_number6.png",
plate25 = "https://raw.githubusercontent.com/Fgazzelloni/30DayChartChallenge/main/data/Edition_2022/day3_historical/day3_historical.png",
plate6 = "https://raw.githubusercontent.com/Fgazzelloni/DuboisChallenge2024_FG/main/2024/challenge01/challenge01.png",
plate12 = "https://raw.githubusercontent.com/Fgazzelloni/DuboisChallenge2024_FG/main/2024/challenge02/challenge02.png",
plate19 = "https://raw.githubusercontent.com/Fgazzelloni/DuboisChallenge2024_FG/main/2024/challenge03/challenge03.png"
)
imgs
split(imgs)
split(imgs,sep = " ")
separate(imgs)
split(imgs,f=" ")
t(imgs)
list.files(t(imgs))
imgs <- list.files(imgs, full.names = TRUE)
## list file names and read in
imgs <- data.frame(plate=c("plate1","plate1_2","plate14","plate25","plate6","plate12","plate19"),
url=c("https://raw.githubusercontent.com/Fgazzelloni/TidyTuesday/main/data/2021/w25_du_bois/w25_du_bois.png",
"https://raw.githubusercontent.com/Fgazzelloni/TidyTuesday/main/data/2022/w6_airforce/w6_airforce.png",
"https://raw.githubusercontent.com/Fgazzelloni/TidyTuesday/main/data/2022/w7_dubois/w7_number6.png",
"https://raw.githubusercontent.com/Fgazzelloni/30DayChartChallenge/main/data/Edition_2022/day3_historical/day3_historical.png",
"https://raw.githubusercontent.com/Fgazzelloni/DuboisChallenge2024_FG/main/2024/challenge01/challenge01.png",
"https://raw.githubusercontent.com/Fgazzelloni/DuboisChallenge2024_FG/main/2024/challenge02/challenge02.png",
"https://raw.githubusercontent.com/Fgazzelloni/DuboisChallenge2024_FG/main/2024/challenge03/challenge03.png"))
imgs
View(imgs)
list.files(imgs$url, full.names = TRUE)
imgs <- imgs$url
img_list <- lapply(imgs, image_read)
library(magick)
img_list <- lapply(imgs, image_read)
img_list
## join the images together
img_joined <- image_join(img_list)
## animate at 2 frames per second
img_animated <- image_animate(img_joined, fps = 2)
## view animated image
img_animated
## save to disk
image_write(image = img_animated,
path = "plates.gif")
getwd()
![](gif/plates.gif)
gc()
source("http://bioconductor.org/biocLite.R")
biocLite("EBImage")
source("http://bioconductor.org/biocLite.R")
BiocManager::biocLite
BiocManager::install("EBImage")
# Resize images
# source: https://stackoverflow.com/questions/35786744/resizing-image-in-r
library("EBImage")
## list file names and read in
imgs <- data.frame(plate=c("plate1","plate1_2","plate14","plate25","plate6","plate12","plate19"),
url=c("https://raw.githubusercontent.com/Fgazzelloni/TidyTuesday/main/data/2021/w25_du_bois/w25_du_bois.png",
"https://raw.githubusercontent.com/Fgazzelloni/TidyTuesday/main/data/2022/w6_airforce/w6_airforce.png",
"https://raw.githubusercontent.com/Fgazzelloni/TidyTuesday/main/data/2022/w7_dubois/w7_number6.png",
"https://raw.githubusercontent.com/Fgazzelloni/30DayChartChallenge/main/data/Edition_2022/day3_historical/day3_historical.png",
"https://raw.githubusercontent.com/Fgazzelloni/DuboisChallenge2024_FG/main/2024/challenge01/challenge01.png",
"https://raw.githubusercontent.com/Fgazzelloni/DuboisChallenge2024_FG/main/2024/challenge02/challenge02.png",
"https://raw.githubusercontent.com/Fgazzelloni/DuboisChallenge2024_FG/main/2024/challenge03/challenge03.png"))
imgs <- imgs$url
x <- readImage(imgs)
readit <- function(images) {
for (i in images) {
x <- readImage(images[i])
}
readit(imgs)
for (i in 1:length(images)) {
x <- readImage(images[i])
}
readit <- function(images) {
for (i in 1:length(images)) {
x <- readImage(images[i])
}
readit(imgs)
x
file <- readit(imgs)
file
readit <- function(images) {
for (i in 1:length(images)) {
x <- readImage(images[i])
return(x)
}
readit(imgs)
x[i] <- readImage(images[i])
readit <- function(images) {
for (i in 1:length(images)) {
x[i] <- readImage(images[i])
return(x)
}
readit(imgs)
readit <- function(images) {
for (i in 1:length(images)) {
x[i] <- readImage(images[i])
}
readit(imgs)
readit <- function(images) {
for (i in 1:length(images)) {
x[i] = readImage(images[i])
}
readit(imgs)
imgs
purrr::map(.x = imgs,.f = readImage)
x <- purrr::map(.x = imgs,.f = readImage)
# width and height of the original image
dim(x)[1:2]
x
x[1]
x[1][1:2]
?purrr::map
y <- purrr::map(.x = x, \(x) resize(x,w = 200, h = 100))
y
# show the scaled image
display(y)
# show the scaled image
display(y[1])
y[1]
y[1:5,1:6,1]
# show the scaled image
display(y[[2]])
# scale to a specific width and height
y <- resize(x, w = 400, h =200)
y <- purrr::map(.x = x, \(x) resize(x,w = 200, h = 100))
y1 <- purrr::map(.x = x, \(x) resize(x, dim(x)[1]/2))
# show the scaled image
display(y[[2]])
display(y1[[2]])
# extract the pixel array
z <- imageData(y1[[2]])
z
library(magick)
library(ggplot2)
library(dplyr)
library(tidyr)
## list file names and read in
imgs <- data.frame(plate=c("plate1","plate1_2","plate14","plate25","plate6","plate12","plate19"),
url=c("https://raw.githubusercontent.com/Fgazzelloni/TidyTuesday/main/data/2021/w25_du_bois/w25_du_bois.png",
"https://raw.githubusercontent.com/Fgazzelloni/TidyTuesday/main/data/2022/w6_airforce/w6_airforce.png",
"https://raw.githubusercontent.com/Fgazzelloni/TidyTuesday/main/data/2022/w7_dubois/w7_number6.png",
"https://raw.githubusercontent.com/Fgazzelloni/30DayChartChallenge/main/data/Edition_2022/day3_historical/day3_historical.png",
"https://raw.githubusercontent.com/Fgazzelloni/DuboisChallenge2024_FG/main/2024/challenge01/challenge01.png",
"https://raw.githubusercontent.com/Fgazzelloni/DuboisChallenge2024_FG/main/2024/challenge02/challenge02.png",
"https://raw.githubusercontent.com/Fgazzelloni/DuboisChallenge2024_FG/main/2024/challenge03/challenge03.png"))
# Resize images
# source: https://stackoverflow.com/questions/35786744/resizing-image-in-r
library("EBImage")
x <- purrr::map(.x = imgs,.f = readImage)
## list file names and read in
imgs <- data.frame(plate=c("plate1","plate1_2","plate14","plate25","plate6","plate12","plate19"),
url=c("https://raw.githubusercontent.com/Fgazzelloni/TidyTuesday/main/data/2021/w25_du_bois/w25_du_bois.png",
"https://raw.githubusercontent.com/Fgazzelloni/TidyTuesday/main/data/2022/w6_airforce/w6_airforce.png",
"https://raw.githubusercontent.com/Fgazzelloni/TidyTuesday/main/data/2022/w7_dubois/w7_number6.png",
"https://raw.githubusercontent.com/Fgazzelloni/30DayChartChallenge/main/data/Edition_2022/day3_historical/day3_historical.png",
"https://raw.githubusercontent.com/Fgazzelloni/DuboisChallenge2024_FG/main/2024/challenge01/challenge01.png",
"https://raw.githubusercontent.com/Fgazzelloni/DuboisChallenge2024_FG/main/2024/challenge02/challenge02.png",
"https://raw.githubusercontent.com/Fgazzelloni/DuboisChallenge2024_FG/main/2024/challenge03/challenge03.png"))
imgs <- imgs$url
# Resize images
# source: https://stackoverflow.com/questions/35786744/resizing-image-in-r
library("EBImage")
x <- purrr::map(.x = imgs,.f = readImage)
y <- purrr::map(.x = x, \(x) resize(x,w = 200, h = 100))
# scale by 50%; the height is determined automatically so that
# the aspect ratio is preserved
y1 <- purrr::map(.x = x, \(x) resize(x, dim(x)[1]/2))
# show the scaled image
display(y[[2]])
display(y1[[2]])
display(y1[[1]])
display(y1[[3]])
class(display(y1[[3]]))
class(y1)
img_list <- lapply(y1, image_read)
# extract the pixel array
z <- imageData(y1[[2]])
class(z)
z
library(magick)
img_list <- lapply(y1, image_read)
## join the images together
img_joined <- image_join(img_list)
## animate at 2 frames per second
img_animated <- image_animate(img_joined, fps = 2)
## view animated image
img_animated
## save to disk
image_write(image = img_animated,
path = "duboischallenge/gif/plates2.gif")
## save to disk
image_write(image = img_animated,
path = "plates.gif")
img_list
library(imager)
imgs
im <- load.image(imgs)
im <- purrr::map(imgs,load.image)
thmb <- resize(im,round(width(im)/10),round(height(im)/10))
th<- purrr:map(im,resize)
th<- purrr::map(im,resize)
imgs <- imgs$url
x <- purrr::map(.x = imgs,.f = readImage)
y <- purrr::map(.x = x, \(x) resize(x,w = 200, h = 100))
## list file names and read in
imgs <- data.frame(plate=c("plate1","plate1_2","plate14","plate25","plate6","plate12","plate19"),
url=c("https://raw.githubusercontent.com/Fgazzelloni/TidyTuesday/main/data/2021/w25_du_bois/w25_du_bois.png",
"https://raw.githubusercontent.com/Fgazzelloni/TidyTuesday/main/data/2022/w6_airforce/w6_airforce.png",
"https://raw.githubusercontent.com/Fgazzelloni/TidyTuesday/main/data/2022/w7_dubois/w7_number6.png",
"https://raw.githubusercontent.com/Fgazzelloni/30DayChartChallenge/main/data/Edition_2022/day3_historical/day3_historical.png",
"https://raw.githubusercontent.com/Fgazzelloni/DuboisChallenge2024_FG/main/2024/challenge01/challenge01.png",
"https://raw.githubusercontent.com/Fgazzelloni/DuboisChallenge2024_FG/main/2024/challenge02/challenge02.png",
"https://raw.githubusercontent.com/Fgazzelloni/DuboisChallenge2024_FG/main/2024/challenge03/challenge03.png"))
imgs <- imgs$url
imgs
# Resize images
# source: https://stackoverflow.com/questions/35786744/resizing-image-in-r
library("EBImage")
x <- purrr::map(.x = imgs,.f = readImage)
x
y <- purrr::map(.x = x, \(x) resize(x,w = 200, h = 100))
# scale by 50%; the height is determined automatically so that
# the aspect ratio is preserved
y1 <- purrr::map(.x = y, \(y) resize(y, dim(y)[1]/2))
display(y1[[3]])
# show the scaled image
display(y[[2]])
# scale by 50%; the height is determined automatically so that
# the aspect ratio is preserved
y1 <- purrr::map(.x = y, \(y) resize(y, dim(x)[1]/2))
## list file names and read in
imgs <- data.frame(plate=c("plate1","plate1_2","plate14","plate25","plate6","plate12","plate19"),
url=c("https://raw.githubusercontent.com/Fgazzelloni/TidyTuesday/main/data/2021/w25_du_bois/w25_du_bois.png",
"https://raw.githubusercontent.com/Fgazzelloni/TidyTuesday/main/data/2022/w6_airforce/w6_airforce.png",
"https://raw.githubusercontent.com/Fgazzelloni/TidyTuesday/main/data/2022/w7_dubois/w7_number6.png",
"https://raw.githubusercontent.com/Fgazzelloni/30DayChartChallenge/main/data/Edition_2022/day3_historical/day3_historical.png",
"https://raw.githubusercontent.com/Fgazzelloni/DuboisChallenge2024_FG/main/2024/challenge01/challenge01.png",
"https://raw.githubusercontent.com/Fgazzelloni/DuboisChallenge2024_FG/main/2024/challenge02/challenge02.png",
"https://raw.githubusercontent.com/Fgazzelloni/DuboisChallenge2024_FG/main/2024/challenge03/challenge03.png"))
imgs <- imgs$url
# Resize images
# source: https://stackoverflow.com/questions/35786744/resizing-image-in-r
library("EBImage")
x <- purrr::map(.x = imgs,.f = readImage)
y <- purrr::map(.x = x, \(x) resize(x,w = 400, h = 400))
# show the scaled image
display(y[[2]])
?resize
x <- purrr::map(.x = imgs,.f = readImage)
y <- purrr::map(.x = x, \(x) resize(x,w = 400))
# show the scaled image
display(y[[2]])
# show the scaled image
display(y[[1]])
# Replace "image_paths" with a vector of paths to your images
## list file names and read in
imgs <- data.frame(plate=c("plate1","plate1_2","plate14","plate25","plate6","plate12","plate19"),
url=c("https://raw.githubusercontent.com/Fgazzelloni/TidyTuesday/main/data/2021/w25_du_bois/w25_du_bois.png",
"https://raw.githubusercontent.com/Fgazzelloni/TidyTuesday/main/data/2022/w6_airforce/w6_airforce.png",
"https://raw.githubusercontent.com/Fgazzelloni/TidyTuesday/main/data/2022/w7_dubois/w7_number6.png",
"https://raw.githubusercontent.com/Fgazzelloni/30DayChartChallenge/main/data/Edition_2022/day3_historical/day3_historical.png",
"https://raw.githubusercontent.com/Fgazzelloni/DuboisChallenge2024_FG/main/2024/challenge01/challenge01.png",
"https://raw.githubusercontent.com/Fgazzelloni/DuboisChallenge2024_FG/main/2024/challenge02/challenge02.png",
"https://raw.githubusercontent.com/Fgazzelloni/DuboisChallenge2024_FG/main/2024/challenge03/challenge03.png"))
imgs <- imgs$url
# Define the target width and height for resizing
target_width <- 800
target_height <- 600
#################################
library(magick)
# Replace "image_paths" with a vector of paths to your images
## list file names and read in
imgs <- data.frame(plate=c("plate1","plate1_2","plate14","plate25","plate6","plate12","plate19"),
url=c("https://raw.githubusercontent.com/Fgazzelloni/TidyTuesday/main/data/2021/w25_du_bois/w25_du_bois.png",
"https://raw.githubusercontent.com/Fgazzelloni/TidyTuesday/main/data/2022/w6_airforce/w6_airforce.png",
"https://raw.githubusercontent.com/Fgazzelloni/TidyTuesday/main/data/2022/w7_dubois/w7_number6.png",
"https://raw.githubusercontent.com/Fgazzelloni/30DayChartChallenge/main/data/Edition_2022/day3_historical/day3_historical.png",
"https://raw.githubusercontent.com/Fgazzelloni/DuboisChallenge2024_FG/main/2024/challenge01/challenge01.png",
"https://raw.githubusercontent.com/Fgazzelloni/DuboisChallenge2024_FG/main/2024/challenge02/challenge02.png",
"https://raw.githubusercontent.com/Fgazzelloni/DuboisChallenge2024_FG/main/2024/challenge03/challenge03.png"))
imgs <- imgs$url
# Define the target width and height for resizing
target_width <- 800
target_height <- 600
# Resize each image to the target size
resized_images <- lapply(image_paths, function(path) {
image_read(path) %>%
image_scale(paste(target_width, "x", target_height, sep = ""))
})
#################################
library(magick)
# Replace "image_paths" with a vector of paths to your images
## list file names and read in
imgs <- data.frame(plate=c("plate1","plate1_2","plate14","plate25","plate6","plate12","plate19"),
url=c("https://raw.githubusercontent.com/Fgazzelloni/TidyTuesday/main/data/2021/w25_du_bois/w25_du_bois.png",
"https://raw.githubusercontent.com/Fgazzelloni/TidyTuesday/main/data/2022/w6_airforce/w6_airforce.png",
"https://raw.githubusercontent.com/Fgazzelloni/TidyTuesday/main/data/2022/w7_dubois/w7_number6.png",
"https://raw.githubusercontent.com/Fgazzelloni/30DayChartChallenge/main/data/Edition_2022/day3_historical/day3_historical.png",
"https://raw.githubusercontent.com/Fgazzelloni/DuboisChallenge2024_FG/main/2024/challenge01/challenge01.png",
"https://raw.githubusercontent.com/Fgazzelloni/DuboisChallenge2024_FG/main/2024/challenge02/challenge02.png",
"https://raw.githubusercontent.com/Fgazzelloni/DuboisChallenge2024_FG/main/2024/challenge03/challenge03.png"))
image_paths <- imgs$url
# Define the target width and height for resizing
target_width <- 800
target_height <- 600
# Resize each image to the target size
resized_images <- lapply(image_paths, function(path) {
image_read(path) %>%
image_scale(paste(target_width, "x", target_height, sep = ""))
})
# Replace "output_path.gif" with the desired path and filename for the output GIF
output_path <- "output.gif"
# Create the GIF from the resized images
image_write(resized_images, path = output_path)
resized_images
img_list
img_joined <- image_join(resized_images)
img_animated <- image_animate(img_joined, fps = 2)
## save to disk
image_write(image = img_animated,
path = "plates.gif")
quarto::quarto_preview()
quarto::quarto_render()
